%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 3.0, for use with FrameMaker 3.0
% Copyright (c) 1986,87,89,90,91 by Frame Technology Corporation.
% All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (3.0) def 
% Set up Color vs. Black-and-White
	/FMPrintInColor systemdict /colorimage known
		systemdict /currentcolortransfer known or def
% Uncomment this line to force b&w on color printer
%   /FMPrintInColor false def
/FrameDict 195 dict def 
systemdict /errordict known not {/errordict 10 dict def
		errordict /rangecheck {stop} put} if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	/yscale FMLOCAL
	/xscale FMLOCAL
	/manualfeed FMLOCAL
	/paperheight FMLOCAL
	/paperwidth FMLOCAL
/FMDOCUMENT { 
	array /FMfonts exch def 
	/#copies exch def
	FrameDict begin
	0 ne dup {setmanualfeed} if
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	setpapername 
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE { 
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne def
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{pop pop}
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
/FMFONTDEFINE { 
	FrameDict begin
	findfont 
	ReEncode 
	1 index exch 
	definefont 
	FMfonts 3 1 roll 
	put
	end 
	} def 
/FMFILLS {
	FrameDict begin
	array /fillvals exch def
	end 
	} def 
/FMFILL {
	FrameDict begin
	 fillvals 3 1 roll put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 0 0 sethsbcolor
	0 setgray 
	} bind def
	/fx FMLOCAL
	/fy FMLOCAL
	/fh FMLOCAL
	/fw FMLOCAL
	/llx FMLOCAL
	/lly FMLOCAL
	/urx FMLOCAL
	/ury FMLOCAL
/FMBEGINEPSF { 
	end 
	/FMEPSF save def 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/max {2 copy lt {exch} if pop} bind def
/min {2 copy gt {exch} if pop} bind def
/inch {72 mul} def
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
	/papersizedict FMLOCAL
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray letter} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray 11x17} def
		/Ledger {ledgertray ledger} def
		/Legal {legaltray legal} def
		/Statement {statementtray statement} def
		/Executive {executivetray executive} def
		/A3 {a3tray a3} def
		/A4 {a4tray a4} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray b4} def
		/B5 {b5tray b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	/FMdicttop countdictstack 1 add def 
	statusdict begin stopped end 
	countdictstack -1 FMdicttop {pop end} for 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq {pop 1} if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
/ReEncode { 
	dup 
	length 
	dict begin 
	{
	1 index /FID ne 
		{def} 
		{pop pop} ifelse 
	} forall 
	0 eq {/Encoding DiacriticEncoding def} if 
	currentdict 
	end 
	} bind def
/graymode true def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div FMsetgray
	/graymode false def
	} bind def
/grayness {
	FMsetgray
	graymode not {
		/graymode true def
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
	/HUE FMLOCAL
	/SAT FMLOCAL
	/BRIGHT FMLOCAL
	/Colors FMLOCAL
FMPrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment / yellow
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR} def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUECOLOR } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUECOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} def
	/FMsetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray}
			{HUE SAT BRIGHT sethsbcolor} 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY} def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc} def
	/BEGINBITMAPTRUECOLOR { 
		BITMAPTRUEGRAY } def
	/BEGINBITMAPTRUECOLORc { 
		BITMAPTRUEGRAYc } def
	/FMsetgray {setgray} bind def
	/K { 
		pop
		} def
	}
ifelse
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z {
	setlinecap
	} bind def
	/fillvals FMLOCAL
/X { 
	fillvals exch get
	dup type /stringtype eq
	{8 1 setpattern} 
	{grayness}
	ifelse
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
	/FMpointsize FMLOCAL
/F { 
	FMfonts exch get
	FMpointsize scalefont
	setfont
	} bind def
/Q { 
	/FMpointsize exch def
	F 
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne {-1 1 scale} if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes { 
	dup 
	8 eq {pop} {1 eq {7 add 8 idiv} {3 add 4 idiv} ifelse} ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} image
	bitmapsave restore 
	grestore
	} bind def
	/proc1 FMLOCAL
	/proc2 FMLOCAL
	/newproc FMLOCAL
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/ngrayt 256 array def
/nredt 256 array def
/nbluet 256 array def
/ngreent 256 array def
	/gryt FMLOCAL
	/blut FMLOCAL
	/grnt FMLOCAL
	/redt FMLOCAL
	/indx FMLOCAL
	/cynu FMLOCAL
	/magu FMLOCAL
	/yelu FMLOCAL
	/k FMLOCAL
	/u FMLOCAL
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
	/tran FMLOCAL
/fakecolorsetup {
	/tran 256 string def
	0 1 255 {/indx exch def 
		tran indx
		red indx get 77 mul
		green indx get 151 mul
		blue indx get 28 mul
		add add 256 idiv put} for
	currenttransfer
	{255 mul cvi tran exch get 255.0 div}
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{cf is readhexstring pop} {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPTRUECOLORc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip} {gip} {bip} true 3 colorimage
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUECOLOR { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop } 
        { cf gis readhexstring pop } 
        { cf bis readhexstring pop } 
        true 3 colorimage 
        bitmapsave restore 
        grestore
        } bind def
/BITMAPTRUEGRAYc { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        
        /is w string def
        
        ws 0 w getinterval is copy pop 
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        {ip gip bip w gray} image
        bitmapsave restore 
        grestore
        } bind def
/ww FMLOCAL
/r FMLOCAL
/g FMLOCAL
/b FMLOCAL
/i FMLOCAL
/gray { 
        /ww exch def
        /b exch def
        /g exch def
        /r exch def
        0 1 ww 1 sub { /i exch def r i get .299 mul g i get .587 mul
			b i get .114 mul add add r i 3 -1 roll floor cvi put } for
        r
        } bind def
/BITMAPTRUEGRAY { 
        gsave
        translate rotate scale /h exch def /w exch def
        /bitmapsave save def 
        /is w string def
        /gis w string def
        /bis w string def
        /cf currentfile def 
        w h 8 [w 0 0 h neg 0 h] 
        { cf is readhexstring pop 
          cf gis readhexstring pop 
          cf bis readhexstring pop w gray}  image
        bitmapsave restore 
        grestore
        } bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
	/ALDsave FMLOCAL
	/ALDmatrix matrix def ALDmatrix currentmatrix pop
/StartALD {
	/ALDsave save def
	 savematrix
	 ALDmatrix setmatrix
	} bind def
/InALD {
	 restorematrix
	} bind def
/DoneALD {
	 ALDsave restore
	} bind def
%%EndProlog
%%BeginSetup
(3.0) FMVERSION
1 1 612 792 0 1 27 FMDOCUMENT
0 0 /Helvetica-Bold FMFONTDEFINE
1 0 /Helvetica FMFONTDEFINE
2 0 /Helvetica-Narrow-Bold FMFONTDEFINE
3 0 /Times-Roman FMFONTDEFINE
4 0 /Palatino-Roman FMFONTDEFINE
5 0 /Helvetica-Narrow FMFONTDEFINE
6 0 /Helvetica-Oblique FMFONTDEFINE
7 0 /Times-Bold FMFONTDEFINE
32 FMFILLS
0 0 FMFILL
1 .1 FMFILL
2 .3 FMFILL
3 .5 FMFILL
4 .7 FMFILL
5 .9 FMFILL
6 .97 FMFILL
7 1 FMFILL
8 <0f1e3c78f0e1c387> FMFILL
9 <0f87c3e1f0783c1e> FMFILL
10 <cccccccccccccccc> FMFILL
11 <ffff0000ffff0000> FMFILL
12 <8142241818244281> FMFILL
13 <03060c183060c081> FMFILL
14 <8040201008040201> FMFILL
16 1 FMFILL
17 .9 FMFILL
18 .7 FMFILL
19 .5 FMFILL
20 .3 FMFILL
21 .1 FMFILL
22 0.03 FMFILL
23 0 FMFILL
24 <f0e1c3870f1e3c78> FMFILL
25 <f0783c1e0f87c3e1> FMFILL
26 <3333333333333333> FMFILL
27 <0000ffff0000ffff> FMFILL
28 <7ebddbe7e7dbbd7e> FMFILL
29 <fcf9f3e7cf9f3f7e> FMFILL
30 <7fbfdfeff7fbfdfe> FMFILL
%%EndSetup
%%Page: "1" 1
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
0 12 Q
0 X
0 K
(Technical Report) 244 748 T
(CMU/SEI-93-TR-13) 244 732 T
(ESC-TR-93-190) 244 716 T
0 20 Q
(Software Product Liability) 244 523.67 T
0 12 Q
(Jody Armour) 271 495 T
(School of Law, University of Pittsburgh) 271 482 T
(Watts S. Humphrey) 271 443 T
(SEI Fellow, Software Engineering Institute) 271 430 T
(August 1993) 271 391 T
FMENDPAGE
%%EndPage: "1" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
FMENDPAGE
%%EndPage: "2" 3
%%Page: "3" 3
612 792 0 FMBEGINPAGE
0 14 Q
0 X
0 K
(Software Engineering Institute) 346.85 94.67 T
1 10 Q
(Carnegie Mellon University) 429.6 81.33 T
(Pittsburgh, Pennsylvania 15213) 408.45 69.33 T
(Unlimited distribution subject to the copyright.) 346.92 145.33 T
0 F
(Technical Report) 467.92 696.33 T
(CMU/SEI-93-TR-13) 461.82 682.33 T
(ESC-TR-93-190) 477.36 668.33 T
(August 1993) 489.57 654.33 T
2 20 Q
(Software Product Liability) 346.79 522.67 T
0 16 Q
(Jody Armour) 449.49 381.33 T
1 10 Q
(School of Law, University of Pittsburgh) 377.91 359.33 T
0 16 Q
(Watts S. Humphrey) 402.39 315.33 T
1 10 Q
( SEI Fellow, Software Engineering Institute) 359.57 297.33 T
72 397 550 435 C
0 X
0 K
%%BeginBinary:  871      
240 141 57.6 33.84 0 87 400.16 BEGINBITMAPBWc
D"a"
C03FD"<"
801FD"<"
000FC"="
FE07C"="
FC03C"="
F801C"="
F000C">"
E07FC">"
C03FCU




<e"
0F;"@"
FE07;"@"
FC03;W




A"g
F0A"B"
E07FA"B"
C03FA"B"
801FA"B"
000F@"C"
FE07@"C"
FC03@"C"
F801@"C"
F000@Z
/



9"j"
C0/3F9"E"
801F9"E"
000F9Z
1



>"j"
FC103>"G"
F801>"G"
F000>"H"
E07F>"H"
C03F>"H"
801F>"H"
000F="I"
FE07="I"
FC03=Z
5



"j
F05"J"
E057F"J"
C053FZ
7



<j"
70F;"J"
FE707;"J"
FC703;"J"
F8701;"J"
F0700;"J"
F8701;"J"
FC703;"J"
FE707;"J"
FF70F<Z
8



"j"
C053F"J"
E057F"J"
F05FFZ
6



="j"
FC303="I"
FE07="I"
FF0F>"H"
801F>"H"
C03F>"H"
E07F>"H"
F0FF>"G"
F801>"G"
FC03>Z
3



9j"
00F9"E"
801F9"E"
C03F9Z
1



@"i
F0@"C"
F801@"C"
FC03@"C"
FE07@"C"
FF0FA"B"
801FA"B"
C03FA"B"
E07FA"B"
F0FFAX




;"e"
FC03;"@"
FE07;"@"
FF0F<V




C"c"
C03FC">"
E07FC">"
F0FFC"="
F801C"="
FC03C"="
FE07C"="
FF0FD"<"
801FD"<"
C03F
ENDBITMAP
%%EndBinary
151.5 409.16 550.5 409.16 2 L
0.5 H
2 Z
N
151.5 418.16 550.5 418.16 2 L
N
151.5 421.16 550.5 421.16 2 L
N
151.5 412.16 550.5 412.16 2 L
N
151.5 415.16 550.5 415.16 2 L
N
0 0 612 792 C
FMENDPAGE
%%EndPage: "3" 4
%%Page: "4" 4
612 792 0 FMBEGINPAGE
3 10 Q
0 X
0 K
(This report was prepared for the) 85.6 737.83 T
(SEI Joint Program Office) 85.6 718.33 T
(HQ ESC/AXS) 85.6 706.83 T
(5 Eglin Street) 85.6 695.33 T
(Hanscom AFB, MA 01731-2116) 85.6 683.83 T
0.3 (The ideas and findings in this report should not be construed as an official DoD position. It is) 85.6 664.33 P
0.3 (published in the) 466.55 664.33 P
(interest of scientific and technical information exchange.) 85.6 652.83 T
3 12 Q
(FOR THE COMMANDER) 84.6 624 T
(\050signature on file\051) 84.6 596 T
3 10 Q
(Thomas R. Miller, Lt Col, USAF) 85.6 557.33 T
(SEI Joint Program Office) 85.6 545.83 T
(This work is sponsored by the U.S. Department of Defense.) 85.6 526.33 T
(Copyright) 85.6 504.17 T
3 14 Q
(\251) 128.64 504.17 T
3 10 Q
( 1993 by Carnegie Mellon University.) 139.27 504.17 T
0.46 (Permission to reproduce this document and to prepare derivative works from this document for internal use is) 85.6 483.33 P
-0.52 (granted, provided the copyright and \322No Warranty\323 statements are included with all reproductions and derivative) 85.6 471.83 P
(works.) 85.6 460.33 T
-0.27 (Requests for permission to reproduce this document or to prepare derivative works of this document for external) 85.6 440.83 P
(and commercial use should be addressed to the SEI Licensing Agent.) 85.6 429.33 T
(NO WARRANTY) 85.6 409.83 T
0.64 (THIS CARNEGIE MELLON UNIVERSITY AND SOFTWARE ENGINEERING INSTITUTE MATERIAL) 85.6 390.33 P
0.92 (IS FURNISHED ON AN \322AS-IS\323 BASIS. CARNEGIE MELLON UNIVERSITY MAKES NO WARRAN-) 85.6 378.83 P
-0.61 (TIES OF ANY KIND, EITHER EXPRESSED OR IMPLIED, AS TO ANY MATTER INCLUDING, BUT NOT) 85.6 367.33 P
-0.07 (LIMITED TO, WARRANTY OF FITNESS FOR PURPOSE OR MERCHANTIBILITY, EXCLUSIVITY, OR) 85.6 355.83 P
1.43 (RESULTS OBTAINED FROM USE OF THE MATERIAL. CARNEGIE MELLON UNIVERSITY DOES) 85.6 344.33 P
2.3 (NOT MAKE ANY WARRANTY OF ANY KIND WITH RESPECT TO FREEDOM FROM PATENT,) 85.6 332.83 P
(TRADEMARK, OR COPYRIGHT INFRINGEMENT.) 85.6 321.33 T
0.8 (This work was created in the performance of Federal Government Contract Number F19628-95-C-0003 with) 84.6 301.83 P
0.06 (Carnegie Mellon University for the operation of the Software Engineering Institute, a federally funded research) 84.6 288.83 P
-0.13 (and development center. The Government of the United States has a royalty-free government-purpose license to) 84.6 275.83 P
-0.17 (use, duplicate, or disclose the work, in whole or in part and in any manner, and to have or permit others to do so,) 84.6 262.83 P
(for government purposes pursuant to the copyright license under the clause at 52.227-7013.) 84.6 249.83 T
(This document is available through Research Access, Inc., 800 Vinial Street, Pittsburgh, PA 15212.) 84.6 226.83 T
-0.15 (Phone: 1-800-685-6510. FAX: \050412\051 321-2994. RAI also maintains a World Wide Web home page. The URL is) 84.6 213.83 P
(http://www.rai.com) 84.6 200.83 T
-0.14 (Copies of this document are available through the National Technical Information Service \050NTIS\051. For informa-) 84.6 177.83 P
1.18 (tion on ordering, please contact NTIS directly: National Technical Information Service, U.S. Department of) 84.6 164.83 P
(Commerce, Springfield, VA 22161. Phone: \050703\051 487-4600.) 84.6 151.83 T
0.22 (This document is also available through the Defense Technical Information Center \050DTIC\051. DTIC provides ac-) 84.6 128.83 P
-0.57 (cess to and transfer of scientific and technical information for DoD personnel, DoD contractors and potential con-) 84.6 115.83 P
0.71 (tractors, and other U.S. Government agency personnel and their contractors. To obtain a copy, please contact) 84.6 102.83 P
0.33 (DTIC directly: Defense Technical Information Center, Attn: FDRA, Cameron Station, Alexandria, VA 22304-) 84.6 89.83 P
(6145.   Phone: \050703\051 274-7633.) 84.6 76.83 T
-0.16 (Use of any trademarks in this report is not intended in any way to infringe on the rights of the trademark holder.) 84.6 53.83 P
81 36 531 756 R
0.01 H
2 Z
7 X
N
FMENDPAGE
%%EndPage: "4" 5
%%Page: "i" 5
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 42.67 540 63.67 R
V
90 53.66 540 63.67 C
90 53.66 540 63.67 R
7 X
0 K
V
90 62.66 559.01 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 47.66 T
(i) 538.01 47.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(Table of Contents) 90 709.33 T
0 12 Q
(1) 90 678 T
(The Software Liability Problem) 117 678 T
(1) 533.33 678 T
(2) 90 652 T
(The Increasing Uses of Software) 117 652 T
(3) 533.33 652 T
(3) 90 625 T
(Software Liability Strategies) 117 625 T
(5) 533.33 625 T
(4) 90 598 T
(Strict Liability) 117 598 T
(7) 533.33 598 T
(5) 90 571 T
(Negligence) 117 571 T
(9) 533.33 571 T
(6) 90 544 T
(Warranties) 117 544 T
(11) 526.66 544 T
(7) 90 517 T
(The Current State of Software Practice) 117 517 T
(13) 526.66 517 T
(8) 90 490 T
(Some Example Cases) 117 490 T
(15) 526.66 490 T
1 F
(8.1) 117 470 T
(Case 1: A Tax Program) 153 470 T
(15) 526.66 470 T
(8.2) 117 451 T
(Case 2: A Computerized Drafting System) 153 451 T
(15) 526.66 451 T
(8.3) 117 432 T
(Case 3: An Automated Tunneling Machine) 153 432 T
(16) 526.66 432 T
0 F
(9) 90 406 T
(The Improvement Opportunity) 117 406 T
(17) 526.66 406 T
(10) 90 379 T
(Conclusion) 117 379 T
(19) 526.66 379 T
(Appendix A) 90 334 T
(Software Design Complexity) 162 334 T
(23) 526.66 334 T
(Appendix B) 90 289 T
(Software Process Maturity) 162 289 T
(25) 526.66 289 T
(Appendix C) 90 244 T
(The State of Software Practice) 162 244 T
(27) 526.66 244 T
(Appendix D) 90 199 T
(Software Safety) 162 199 T
(29) 526.66 199 T
(Appendix E) 90 154 T
(Software Process Assessment) 162 154 T
(31) 526.66 154 T
FMENDPAGE
%%EndPage: "i" 6
%%Page: "ii" 6
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 46.67 520 63.67 R
V
70 53.66 520 63.67 C
70 53.66 520 63.67 R
7 X
0 K
V
70 62.66 539.01 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(ii) 70 47.66 T
(CMU/SEI-93-TR-13) 441.6 47.66 T
72 72 522 720 R
7 X
V
FMENDPAGE
%%EndPage: "ii" 7
%%Page: "iii" 7
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 42.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(iii) 534.01 53.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(List of Figures) 90 709.33 T
0 12 Q
(Figure 3-1:) 90 678 T
1 F
(The Logic of Software Product Liability) 162 678 T
( 6) 530 678 T
0 F
(Figure B-1:) 90 663 T
1 F
(Software Process Maturity) 162 663 T
(26) 526.66 663 T
0 F
(Figure C-1:) 90 649 T
1 F
(Current State of Software Practice) 162 649 T
(28) 526.66 649 T
FMENDPAGE
%%EndPage: "iii" 8
%%Page: "iv" 8
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 46.67 520 63.67 R
V
70 59.66 520 63.67 C
70 59.66 520 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(iv) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
FMENDPAGE
%%EndPage: "iv" 9
%%Page: "1" 9
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(1) 535 53.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(Software Product Liability) 203.03 709.33 T
0 11 Q
(Abstract:) 126 676.67 T
1 F
1.62 (Voyne Ray Cox settled into the radiation machine for the eighth) 180 676.67 P
0.15 (routine treatment of his largely cured cancer. The operator went to the control) 126 664.42 P
0.56 (room and pushed some buttons. Soon, the machine went into action and the) 126 652.17 P
0.56 (treatment began. A soft whir and then an intense searing pain made him yell) 126 639.92 P
2.29 (for help and jump from the machine. The doctors assured him there was) 126 627.67 P
2.37 (nothing to worry about. What they didn't know was that the operator had) 126 615.42 P
4.2 (inadvertently pushed an unusual sequence of controls that activated a) 126 603.17 P
1.81 (defective part of the software controlling the machine. He didn't die for six) 126 590.92 P
1.27 (months but he had received a lethal dose of radiation. This software defect) 126 578.67 P
2.93 (actually killed two patients and severely injured several others. The final) 126 566.42 P
(decisions in the resulting lawsuits have not been made public.) 126 554.17 T
-0.33 (Software defects are rarely lethal and the number of injuries and deaths is now) 126 529.92 P
-0.44 (very small. Software, however, is now the principal controlling element in many) 126 517.67 P
-0.39 (industrial and consumer products. It is so pervasive that it is found in just about) 126 505.42 P
0.34 (every product that is labeled \322electronic.\323 Most companies are in the software) 126 493.17 P
0.66 (business whether they know it or not. The question is whether their products) 126 480.92 P
-0.38 (could potentially cause damage and what their exposures would be if they did.) 126 468.67 P
2.04 (While most executives are now concerned about product liability, software) 126 444.42 P
0.55 (introduces a new dimension. Software, particularly poor quality software, can) 126 432.17 P
1.39 (cause products to do strange and even terrifying things. Software bugs are) 126 419.92 P
-0.68 (erroneous instructions and, when computers encounter them, they do precisely) 126 407.67 P
0.86 (what the defects instruct. An error could cause a 0 to be read as a 1, an up) 126 395.42 P
2.05 (control to be shut down, or, as with the radiation machine, a shield to be) 126 383.17 P
(removed instead of inserted. A software error could mean life or death.) 126 370.92 T
0 16 Q
(1) 90 319.33 T
(The Software Liability Problem) 129.6 319.33 T
1 11 Q
-0.35 (Software product liability has not been a historical problem for four reasons. First, until recent-) 90 286.67 P
0.26 (ly, software has largely been used by experts in the computer departments of large corpora-) 90 271.67 P
-0.19 (tions. Only in the last few years have small businesses and the general public used it directly.) 90 256.67 P
-0.72 (Second, the design of many early software-controlled products has remained relatively simple.) 90 241.67 P
-0.38 (The nuclear power industry, for example, has opted for a very conservative design philosophy) 90 226.67 P
0.15 (\050see Appendix A\051. Third, the leading vendors have historically marketed their products under) 90 211.67 P
-0.48 (tight contracts. Finally, until recently, there have been few lawyers with the expertise to handle) 90 196.67 P
(such cases.) 90 181.67 T
0.2 (As the general use of software and software controlled products grows and as the public ex-) 90 156.67 P
-0.22 (posure to poor quality products mounts, the product liability problem will increase. There is, in) 90 141.67 P
-0.31 (fact, evidence that this is happening already. Marr Haack of St. Paul, the insurance underwrit-) 90 126.67 P
0.55 (er, reported that of several hundred software-related claims, half concerned software devel-) 90 111.67 P
0.15 (opment and quality. John Moore, of insurance underwriter Shand Morahan, reports that their) 90 96.67 P
0.96 (suits principally come from failure to perform or failure of the installed software to function.) 90 81.67 P
FMENDPAGE
%%EndPage: "1" 10
%%Page: "2" 10
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(2) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
1 11 Q
0 X
-0.7 (Tom Cornwell of Chubb estimates that in three years, their claim size for software-related busi-) 72 712.67 P
-0.14 (ness has doubled. John Lautsch, a Silicon Valley attorney, further reported that the American) 72 697.67 P
-0.09 (Bar Association\325s computer law division membership grew from 89 members in 1980 to more) 72 682.67 P
0.87 (than 500 members in 1985. Membership has continued to increase and it now has passed) 72 667.67 P
(1100. There is, in fact, a growing body of legal experience with software damages.) 72 652.67 T
-0.5 (The fact that few of these claims are for personal injury or physical damage might suggest that) 72 627.67 P
-0.03 (software is a low risk product. If it continues to be used as in the past, that could well be true.) 72 612.67 P
(There is, however, growing evidence that this will not be the case.) 72 597.67 T
FMENDPAGE
%%EndPage: "2" 11
%%Page: "3" 11
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(3) 535 53.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(2) 90 709.33 T
(The Increasing Uses of Software) 129.6 709.33 T
1 11 Q
1.53 (We all expect computer-related products like operating systems, telephone switching sys-) 90 676.67 P
-0.61 (tems, and banking systems to contain millions of computer instructions. Less well known is the) 90 661.67 P
-0.61 (fact that common products such as television sets, radios, VCRs, and telephones contain hun-) 90 646.67 P
-0.52 (dreds and even thousands of program instructions. Projections are that such devices will soon) 90 631.67 P
0.12 (contain a million or more program instructions. The current rate of code growth in many ordi-) 90 616.67 P
0.44 (nary consumer products, if extended for ten years, will approach 100 times. Software use is) 90 601.67 P
(exploding and it is exploding fastest in products that are used by the general public.) 90 586.67 T
0.75 (From an industrial perspective, software is an almost ideal product. While many decry soft-) 90 561.67 P
0.31 (ware's high cost and poor quality, it is the lowest cost and highest quality way to provide so-) 90 546.67 P
-0.48 (phisticated product function. In fact, often software is the only feasible way to implement these) 90 531.67 P
-0.22 (functions. Once software is developed, it doesn't wear out or deteriorate, it can be legally pro-) 90 516.67 P
-0.25 (tected, its manufacturing costs are trivial, and it is economical to modify and enhance. A good) 90 501.67 P
-0.63 (example of these benefits is the nuclear power industry. Many of the nation's 113 nuclear pow-) 90 486.67 P
0.18 (er plants still have controls that are 30 or more years old. As the industry replaces them with) 90 471.67 P
(modern software-controlled devices, they find reliability is much improved.) 90 456.67 T
-0.35 (The exposure to product liability is greatest when software is used to control sophisticated op-) 90 431.67 P
0.16 (erations in safety-critical situations. Witness, for example, the following list of software errors) 90 416.67 P
(that resulted in recalls of medical equipment:) 90 401.67 T
4 12 Q
(\245) 126 376.67 T
1 11 Q
(Incorrect match of patient and data.) 136.08 376.67 T
4 12 Q
(\245) 126 358.17 T
1 11 Q
(Incorrect readings in an auto analyzer.) 136.08 358.17 T
4 12 Q
(\245) 126 339.67 T
1 11 Q
(Faulty programming provided false cardiac FVC values.) 136.08 339.67 T
4 12 Q
(\245) 126 321.17 T
1 11 Q
(Faulty programming caused pacer telemetry errors.) 136.08 321.17 T
4 12 Q
(\245) 126 302.67 T
1 11 Q
(Incorrect software design caused lockup of cardiac) 136.08 302.67 T
(monitor.) 385.82 302.67 T
4 12 Q
(\245) 126 284.17 T
1 11 Q
(Incorrect calculations.) 136.08 284.17 T
4 12 Q
(\245) 126 265.67 T
1 11 Q
(Failure of central alarm in arrhythmia monitor.) 136.08 265.67 T
4 12 Q
(\245) 126 247.17 T
1 11 Q
(Table top moved without a command.) 136.08 247.17 T
4 12 Q
(\245) 126 228.67 T
1 11 Q
(Detector head could hit the patient.) 136.08 228.67 T
4 12 Q
(\245) 126 210.17 T
1 11 Q
(Algorithm error caused low blood pressure readings.) 136.08 210.17 T
4 12 Q
(\245) 126 191.67 T
1 11 Q
(Over infusion due to programming error.) 136.08 191.67 T
(These are only a few examples from a much longer list.) 90 160.67 T
0.33 (While software is arguably the highest quality product made by mankind, without great care,) 90 135.67 P
0.35 (it can easily become among the most complex. The competitive demand for more and more) 90 120.67 P
0.7 (product functions leads to more and more program instructions. As program size grows, so) 90 105.67 P
0.57 (does its complexity, and it is this combination of size and complexity that leads to problems) 90 90.67 P
0.11 (with software quality. Given enough instructions, even software products that are considered) 90 75.67 P
FMENDPAGE
%%EndPage: "3" 12
%%Page: "4" 12
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(4) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
1 11 Q
0 X
-0.63 (high quality by today's standards will contain many defects. While many such defects are likely) 72 712.67 P
1.55 (simple bugs, some could be major functional errors and omissions. Since any defect can) 72 697.67 P
0.75 (cause user problems, it is clear that the software community must improve software quality) 72 682.67 P
-0.11 (faster than it expands product size. The issue is not whether software is safe but whether it is) 72 667.67 P
-0.12 (used in safety critical systems. If it is, with the current state of software practice, any software) 72 652.67 P
(is potentially unsafe.) 72 637.67 T
FMENDPAGE
%%EndPage: "4" 13
%%Page: "5" 13
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(5) 535 53.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(3) 90 709.33 T
(Software Liability Strategies) 129.6 709.33 T
1 11 Q
0.19 (Suppliers can protect themselves from legal liability for defective software by investing in im-) 90 676.67 P
-0.44 (proved product quality or by relying on legal protections. These strategies are not mutually ex-) 90 661.67 P
0.36 (clusive. By the time someone is injured by poorly performing software, it is too late to fix the) 90 646.67 P
-0.13 (real problem. If the software your organization produced caused the injury, you will likely pay,) 90 631.67 P
0.61 (and perhaps a lot. It is far safer and less expensive to avoid the problem than to attempt to) 90 616.67 P
0.15 (limit damages after the fact. While problem prevention takes work and is not free, in the long) 90 601.67 P
-0.24 (run it costs a lot less than the costs of fixing the problems. With software, it turns out, problem) 90 586.67 P
0.78 (prevention actually saves money. Data show that software defect repair is as much as 100) 90 571.67 P
(times more expensive than defect prevention.) 90 556.67 T
-0.41 (One reason why reliance on legal protection is problematical is the high cost of winning. While) 90 531.67 P
0.28 (there is little data on software to date, Beech, the aircraft company, defended and won most) 90 516.67 P
-0 (of their 203 personal injury actions over a four year period. They spent, however, an average) 90 501.67 P
-0.13 (of $530,000 to fight each case. An insurance company reports a recent software liability case) 90 486.67 P
-0.04 (that cost $3,000,000, and that was to win. It would have cost much more had they lost. While) 90 471.67 P
0.52 (no one expects the software industry to face large volumes of litigation soon, current trends) 90 456.67 P
(are increasing.) 90 441.67 T
0.15 (Improving the quality of software development and maintenance is the best long-term strate-) 90 416.67 P
-0.14 (gy. Since this can take time, however, software process improvement should be coupled with) 90 401.67 P
0.99 (a product liability strategy. Figure 3-1 shows the logic of software product liability litigation.) 90 386.67 P
0.57 (Here, the three types of recovery are strict liability, negligence, or product warranty. A com-) 90 371.67 P
-0.69 (plainant will generally prefer to recover in this order while vendors will prefer the reverse. While) 90 356.67 P
-0.22 (an injured party can pursue any one or more of these strategies, the supplier must have a de-) 90 341.67 P
1.09 (fense against them all. It should even be assumed that clever complainants will attack the) 90 326.67 P
1.24 (weakest point in the supplier's defenses. Often, in fact, litigation strategies are devised by) 90 311.67 P
0.28 (knowledgeable ex-employees who have become involved in the case. The problem is to un-) 90 296.67 P
(derstand how to influence these strategic outcomes by current actions.) 90 281.67 T
FMENDPAGE
%%EndPage: "5" 14
%%Page: "6" 14
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(6) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
72 72 522 720 C
74.25 308 519.75 709 C
0 7 Q
0 X
0 K
(Yes) 378.1 492.88 T
191.31 416.77 186 406.01 184.8 417.95 188.05 417.36 4 Y
0.5 H
0 Z
N
216.35 575.34 188.06 417.35 2 L
N
263.97 416.14 260.04 404.81 257.36 416.51 260.67 416.32 4 Y
N
265.92 512 260.67 416.32 2 L
N
322.59 412.47 323.05 400.48 316.3 410.41 319.45 411.44 4 Y
N
285.2 516.13 319.46 411.43 2 L
N
358.13 408.52 349.21 400.48 352.51 412.02 355.32 410.27 4 Y
N
374.95 442.12 355.33 410.26 2 L
N
407.61 413.38 404.3 401.85 400.99 413.38 404.3 413.38 4 Y
N
404.3 433.52 404.3 413.38 2 L
N
405.54 497.33 402.23 485.8 398.93 497.33 402.23 497.33 4 Y
N
402.23 505.12 402.23 497.33 2 L
N
322.2 526.59 310.67 529.9 322.2 533.21 322.2 529.9 4 Y
N
373.32 529.9 322.2 529.9 2 L
N
(Yes or No) 257.59 600.07 T
(No) 286.32 562.76 T
306.73 563.8 298.1 555.46 300.99 567.1 303.86 565.45 4 Y
N
311.62 579.12 303.87 565.45 2 L
N
(Yes) 230.36 627.13 T
276.85 597.92 288.39 594.62 276.85 591.31 276.85 594.62 4 Y
N
252.84 594.62 276.85 594.62 2 L
N
299.54 627.07 301.72 615.27 293.62 624.12 296.58 625.6 4 Y
N
288.81 641.43 296.58 625.6 2 L
N
250.35 625.9 241.3 618.03 244.8 629.5 247.58 627.7 4 Y
N
257.66 643.5 247.58 627.7 2 L
N
7 X
90 450 30.98 27.88 272.29 663.12 G
2 Z
0 X
90 450 30.98 27.88 272.29 663.12 A
5 8 Q
(Was there) 259.73 671.73 T
(personal injury) 253.35 662.73 T
(or property) 258.82 653.73 T
(damage?) 261 644.73 T
7 X
90 450 30.98 27.88 222.72 594.27 G
0 Z
0 X
90 450 30.98 27.88 222.72 594.27 A
(Was it caused) 204.51 593.88 T
(by a product?) 205.24 584.88 T
7 X
90 450 30.98 27.88 321.86 594.27 G
0 X
90 450 30.98 27.88 321.86 594.27 A
(Was there a) 306.57 593.88 T
(contract?) 310.76 584.88 T
7 X
90 450 30.98 27.88 277.8 530.93 G
0 X
90 450 30.98 27.88 277.8 530.93 A
(Can you prove) 258.86 530.54 T
(negligence?) 262.5 521.54 T
7 X
90 450 30.98 27.88 401.72 530.93 G
0 X
90 450 30.98 27.88 401.72 530.93 A
(Does the court) 382.78 539.54 T
(uphold the) 388.79 530.54 T
(contract?) 390.62 521.54 T
7 X
90 450 30.98 27.88 401.72 456.58 G
0 X
90 450 30.98 27.88 401.72 456.58 A
(Was there) 389.16 465.19 T
(failure to) 391.53 456.19 T
(perform?) 390.98 447.19 T
7 X
90 450 30.99 27.89 403.1 373.27 G
2 Z
0 X
90 450 30.99 27.89 403.1 373.27 A
(Recover under) 383.98 372.88 T
(warranty) 392.91 363.88 T
7 X
90 450 30.98 27.89 334.94 373.27 G
0 X
90 450 30.98 27.89 334.94 373.27 A
(No recourse) 319.47 372.88 T
7 X
90 450 30.98 27.89 260.58 373.27 G
0 X
90 450 30.98 27.89 260.58 373.27 A
(Recover under) 241.47 372.88 T
(negligence) 247.11 363.88 T
7 X
90 450 30.98 27.89 186.23 373.27 G
0 X
90 450 30.98 27.89 186.23 373.27 A
(Recover under) 167.11 372.88 T
(strict liability) 170.95 363.88 T
0 7 Q
(Yes or No) 303.14 632.13 T
367.09 557.61 374 547.8 362.95 552.46 365.02 555.04 4 Y
0 Z
N
343.03 572.59 365.02 555.04 2 L
N
(Yes) 361.27 567.92 T
(No) 337.26 533.64 T
(No) 356.11 429.54 T
(Yes) 413.37 414.39 T
(No) 296.21 494.94 T
(Yes) 241.4 494.94 T
(Yes) 188.76 550.71 T
153.25 317 449.25 330 R
7 X
V
0 11 Q
0 X
(Figure 3-1:  The Logic of Software Product Liability) 168.17 322.67 T
72 72 522 720 C
74.25 308 519.75 709 R
0.5 H
0 Z
0 X
0 K
N
0 0 612 792 C
FMENDPAGE
%%EndPage: "6" 15
%%Page: "7" 15
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(7) 535 53.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(4) 90 709.33 T
(Strict Liability) 129.6 709.33 T
1 11 Q
-0.27 (Strict liability is that part of tort law that covers damage caused by or threatened by unreason-) 90 676.67 P
0.23 (ably dangerous products. In contrast to negligence, which focuses on the processes used to) 90 661.67 P
0.43 (produce products, strict liability focuses on the product itself and whether or not it contained) 90 646.67 P
-0.75 (one or more unreasonably dangerous defects. The first question then is the likelihood that your) 90 631.67 P
0.33 (product will be judged unreasonably dangerous. While this may not seem a serious concern) 90 616.67 P
0.39 (to most companies, somewhat circuitously, courts deem any defective product which threat-) 90 601.67 P
-0 (ens physical harm to person or property to be \322unreasonably dangerous.\323 So the key issue is) 90 586.67 P
(whether software is a product.) 90 571.67 T
0.14 (While software is essentially information, courts may consider information to be a product. In) 90 546.67 P
1.35 (one case, for example, a court applied the strict liability doctrine to aircraft instrument ap-) 90 531.67 P
0.87 (proach charts that contained fallacious data. In 1991, the 9th U.S. Circuit Court of Appeals) 90 516.67 P
-0.34 (ruled a publisher not liable for material in a book on mushrooms. In discussing criteria for con-) 90 501.67 P
-0.1 (sidering information a product, however, they referenced the aeronautical charts case as one) 90 486.67 P
0.34 (example and added that \322Computer software that fails to yield the result for which it was de-) 90 471.67 P
-0.29 (signed may be another.\323 Thus, there is good reason to believe that, for liability purposes, soft-) 90 456.67 P
(ware could well be treated like a product.) 90 441.67 T
-0.22 (Customer-supplier transactions frequently involve both sales of products and the rendering of) 90 416.67 P
0.05 (services. Offerings to develop, install, service, or operate software would naturally be viewed) 90 401.67 P
0.61 (as services, but the software itself would most probably be considered a product. While the) 90 386.67 P
-0.05 (courts have developed tests to deal with these sales/service hybrid transactions, to date they) 90 371.67 P
-0.1 (have generally considered software a product and applied the doctrine of strict liability. More-) 90 356.67 P
-0.5 (over, if a defect merely threatens harm to person or property, the supplier may be strictly liable) 90 341.67 P
-0.25 (for purely economic losses even though there was no actual physical injury. To be safe, orga-) 90 326.67 P
(nizations should thus treat software as a product.) 90 311.67 T
0.14 (Thus, if a software defect threatens the person or property of a customer or a third party, the) 90 286.67 P
-0.13 (injured party is entitled to bring a strict liability claim against the supplier notwithstanding con-) 90 271.67 P
-0.28 (tractual disclaimers, limitations of remedies, and limited warranties. The virtue of a strict liabil-) 90 256.67 P
-0.49 (ity action from the claimant's perspective is that there is no need to prove that the supplier was) 90 241.67 P
1.02 (negligent. If the product was defective and it caused the claimant's loss, the claimant wins) 90 226.67 P
(without further ado.) 90 211.67 T
0.08 (There is some debate about whether software is a product or a service. There is growing ev-) 90 186.67 P
1.13 (idence, however, that courts will consider software a product. Further, if your products are) 90 171.67 P
0.41 (transportation, medical, construction, or farming equipment, an improperly executed product) 90 156.67 P
-0.13 (function could have lethal or at least physically harmful consequences. While this is a serious) 90 141.67 P
0.04 (exposure for those involved, it is not the general case for most organizations with software in) 90 126.67 P
-0.47 (their products. Thus, the requirement of actual or threatened physical damage means that this) 90 111.67 P
0.56 (outcome is a relatively low corporate exposure except for those who supply potentially dan-) 90 96.67 P
(gerous products.) 90 81.67 T
FMENDPAGE
%%EndPage: "7" 16
%%Page: "8" 16
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(8) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
FMENDPAGE
%%EndPage: "8" 17
%%Page: "9" 17
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(9) 535 53.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(5) 90 709.33 T
(Negligence) 129.6 709.33 T
1 11 Q
0.52 (Negligence is defined as conduct that falls below the standard established by law to protect) 90 676.67 P
0.66 (persons against unreasonable risk of harm. Under negligence, a supplier is not responsible) 90 661.67 P
0.22 (for every software defect that causes customer or third party loss. Responsibility is limited to) 90 646.67 P
0.3 (those harmful defects that it could have detected and corrected through \322reasonable\323 quality) 90 631.67 P
0.59 (control practices. It is the supplier's failure to practice reasonable quality control that consti-) 90 616.67 P
(tutes negligence and that causes the liability exposure.) 90 601.67 T
-0.04 (While the proof obligations for negligence can be difficult, there is no need for actual or immi-) 90 576.67 P
-0.21 (nent physical damage. Economic or even intangible losses are sufficient. Since contracts can) 90 561.67 P
0.32 (be written to protect against supplier negligence, one might think that this situation is only of) 90 546.67 P
-0.33 (concern where there is no contract. It turns out, however, that contracts between corporations) 90 531.67 P
-0.01 (and individuals can often be seen as between unequal parties and thus judged unconsciona-) 90 516.67 P
-0.47 (ble. Negligence is thus the area of greatest risk for organizations with software-intensive prod-) 90 501.67 P
(ucts.) 90 486.67 T
0.13 (Negligence awards for physical damages can be large but those for economic losses like re-) 90 461.67 P
-0.47 (duced profits or missed business opportunities can be enormous. These losses could even be) 90 446.67 P
(completely disconnected from any personal injury or property damage claims.) 90 431.67 T
-0.24 (Thus, it is likely that suppliers will be liable for customer damage caused by negligently devel-) 90 406.67 P
-0.17 (oped and maintained software. In fact, the courts do not even require that the complainant be) 90 391.67 P
-0.54 (a customer. Third parties whose businesses have been disrupted by a defendant's negligence) 90 376.67 P
0.22 (may even recover for their lost profits and missed business opportunities. There is little case) 90 361.67 P
-0.27 (law as yet on the recovery of purely economic losses due to defective software. Judged in the) 90 346.67 P
0.71 (broader context of negligence case law, however, such recoveries seem likely. Further, the) 90 331.67 P
-0.38 (complainant's recourse against a negligent supplier applies whether the offering in question is) 90 316.67 P
(a service or a product.) 90 301.67 T
-0.57 (Especially where physical damage is involved, courts may disregard a contract in which a cus-) 90 276.67 P
-0.23 (tomer expressly assumes the risk of the supplier's negligence. Negligence, when proven, can) 90 261.67 P
0.8 (thus surmount almost any legal obstacle the suppliers erect. As courts and legislatures be-) 90 246.67 P
0.14 (come less tolerant of negligent corporate behavior, any business that is judged negligent will) 90 231.67 P
0.75 (likely pay for actual damages, possibly be assessed punitive damages, and may even face) 90 216.67 P
-0.66 (regulatory or criminal proceedings. Therefore, the only secure protection is not to be negligent.) 90 201.67 P
FMENDPAGE
%%EndPage: "9" 18
%%Page: "10" 18
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(10) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
FMENDPAGE
%%EndPage: "10" 19
%%Page: "11" 19
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(11) 530.01 53.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(6) 90 709.33 T
(Warranties) 129.6 709.33 T
1 11 Q
0.25 (Warranties contractually assure customers that the products they buy will perform as stated.) 90 676.67 P
1.29 (When properly constructed, they also limit the supplier's liability in the event of nonperfor-) 90 661.67 P
0.41 (mance. Historically, for example, software suppliers have contracted to deliver a package of) 90 646.67 P
0.52 (material that contains some software. This software is warranted to run on a given machine) 90 631.67 P
(configuration but no assurance is given as to what that software will do.) 90 616.67 T
-0.31 (Explicit software contracts can offer very flexible warranty protection but also have limitations.) 90 591.67 P
-0.04 (To win a warranty claim, the plaintiff must have a valid contract that the supplier did not fulfill.) 90 576.67 P
-0.05 (Demonstrating this can be a daunting challenge for a complainant, particularly when the sup-) 90 561.67 P
-0 (pliers write the contracts. Further, even when the case can be proven, the damages are gen-) 90 546.67 P
1.14 (erally limited to the monies paid for the product or to some amount of liquidated damages) 90 531.67 P
-0.09 (specified in the contract. Short of total vindication, this is the preferred corporate case. Unfor-) 90 516.67 P
(tunately, in dealings with the public, it is not an outcome that can be guaranteed.) 90 501.67 T
-0.05 (In determining liability exposure, the first question to examine concerns your contract practic-) 90 476.67 P
0.05 (es. Do you regularly use explicit contracts with your customers? As your lawyers will explain,) 90 461.67 P
-0.4 (most companies are operating under contracts even when they don't think they are. Salesper-) 90 446.67 P
-0.11 (sons' comments, invoices, shipping labels, and even advertising can be part of a contract un-) 90 431.67 P
1.31 (less you make sure they are not. Since proven misrepresentation can void just about any) 90 416.67 P
0.23 (contract, plugging this defensive gap with limited warranties and disclaimers should be a top) 90 401.67 P
(priority.) 90 386.67 T
-0.47 (Contract law involves the Uniform Commercial Code \050UCC\051. This is an agreement between all) 90 361.67 P
0.2 (the states \050except Louisiana and Washington, D.C.\051 that specifies how to interpret contracts.) 90 346.67 P
0.44 (The UCC treats, among other things, the implied warranties of fitness for a specific purpose) 90 331.67 P
-0.14 (and merchantability. The warranty of fitness for a specific purpose arises whenever the buyer) 90 316.67 P
0.53 (relies on your expertise in selecting a product to perform a particular function that has been) 90 301.67 P
-0 (described to you. The key point is that here your product has an implied contractual warranty) 90 286.67 P
-0.54 (to do what your customer said was wanted. Thus, a warranty of fitness for a particular purpose) 90 271.67 P
0.15 (is an implied promise by you that your software will meet the needs that your customer com-) 90 256.67 P
(municated to you.) 90 241.67 T
1.22 (In contrast, warranties of merchantability accompany the sale of goods irrespective of any) 90 216.67 P
-0.48 (communication between buyer and seller. These provisions are imposed by the law as the ba-) 90 201.67 P
-0.51 (sis for interpreting your overall performance under the contract. Basically, to be merchantable,) 90 186.67 P
-0.11 (your software must be of the general kind described and it must be reasonably fit for the gen-) 90 171.67 P
(eral purpose for which it was sold.) 90 156.67 T
FMENDPAGE
%%EndPage: "11" 20
%%Page: "12" 20
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(12) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
1 11 Q
0 X
-0.05 (Even if your contracts specifically exclude the commitments of merchantability and fitness for) 72 712.67 P
0.5 (a specific purpose \050as they can\051, you could still have a problem. If the courts judge that you) 72 697.67 P
0.08 (were an expert and your customer was not, they could void the contract as between unequal) 72 682.67 P
-0.15 (parties and thus unconscionable. You had special knowledge and were thus obligated to pro-) 72 667.67 P
(tect your customer's interests.) 72 652.67 T
-0.42 (While there is a lot more to contract law than this, the basic issue with software is that the sup-) 72 627.67 P
-0.7 (plier is generally an expert on an arcane and sophisticated technology and the customer is not.) 72 612.67 P
-0.66 (Unless you take extraordinary legal and marketing precautions, your contracts may not protect) 72 597.67 P
(you.) 72 582.67 T
0.32 (So far we have talked about the good news. The bad news is that you may not even have a) 72 557.67 P
-0.45 (contract with the injured party. Even if all your products are covered by iron-clad contracts, the) 72 542.67 P
-0.15 (injured person could be a third party and not be covered. If, for example, you sell through dis-) 72 527.67 P
-0.37 (tributors, your contracts are with the distributors and they deal with the users. If your contracts) 72 512.67 P
0.19 (hold the distributor responsible for customer claims, you will likely have few distributors. Fur-) 72 497.67 P
-0.12 (ther, even then the users could reach you through the courts. You would then have the unap-) 72 482.67 P
-0.46 (petizing task of suing your distributors. In any event, in dealings with third parties, you have no) 72 467.67 P
(contractual protection and you are at the mercy of the court's interpretation of tort law.) 72 452.67 T
FMENDPAGE
%%EndPage: "12" 21
%%Page: "13" 21
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(13) 530.01 53.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(7) 90 709.33 T
(The Current State of Software Practice) 129.6 709.33 T
1 11 Q
-0.61 (Software is a relatively new technology. The early software concepts are over a hundred years) 90 676.67 P
-0.57 (old but the first significant computer programs were only written in the early 1950s. Since then,) 90 661.67 P
1.27 (there have been many advances. The processes for building software, however, have not) 90 646.67 P
0.42 (made much progress. The methods most software developers use today are thus much like) 90 631.67 P
0.04 (those used 30 and 40 years ago. The programmers start with a general understanding of the) 90 616.67 P
-0.69 (problem and then solve it in an individualistic and often highly creative way. The resulting prod-) 90 601.67 P
(ucts must then be tested to find and correct their many latent defects.) 90 586.67 T
0.52 (This build, test, and fix quality technology is almost universal for software. No other modern) 90 561.67 P
1.28 (technology considers this even a minimally acceptable approach. For example, no self-re-) 90 546.67 P
-0.71 (specting semiconductor engineer would consider testing and fixing all the defective chips com-) 90 531.67 P
1.3 (ing off the production line. Just as Drs. Juran and Deming taught and the Japanese have) 90 516.67 P
-0.4 (amply demonstrated, quality must be built into products from the beginning. Testing is no sub-) 90 501.67 P
(stitute for proper design in either hardware or software.) 90 486.67 T
-0.13 (The current state of software quality control can be best understood by examining the current) 90 461.67 P
0.61 (state of software practice. The Software Engineering Institute of Carnegie Mellon University) 90 446.67 P
-0.22 (has developed a way to assess the capability of software organizations \050see Appendix B\051. On) 90 431.67 P
0.32 (a scale of 1 \050worst\051 to 5 \050best\051, over 80% of the software organizations studied were at level) 90 416.67 P
0.49 (1. Less than 20% were at level 2 and very few were at levels 3, 4, and 5 \050see Appendix C\051.) 90 401.67 P
0.11 (This means that most software organizations have poor project management practices, miss) 90 386.67 P
-0.45 (schedules and costs, and deliver products of unknown, but often poor, quality. As this field de-) 90 371.67 P
0.37 (velops, it is thus likely that courts will deem a supplier's failure to move beyond SEI maturity) 90 356.67 P
(level 1 to be negligence.) 90 341.67 T
0.89 (Very few groups have achieved SEI level 5. For example, the software that flies the space) 90 316.67 P
-0.11 (shuttle was developed by a project rated 5 by NASA. This is an IBM group in Houston, Texas) 90 301.67 P
0.52 (that has spent many years improving their development methods. To date, in 19 years sup-) 90 286.67 P
0.13 (porting the shuttle, their software has not had a single mission-critical defect. As this demon-) 90 271.67 P
(strates, the quality benefits of a mature software process are substantial.) 90 256.67 T
FMENDPAGE
%%EndPage: "13" 22
%%Page: "14" 22
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(14) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
FMENDPAGE
%%EndPage: "14" 23
%%Page: "15" 23
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(15) 530.01 53.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(8) 90 709.33 T
(Some Example Cases) 129.6 709.33 T
1 11 Q
(To illustrate software product liability principles, consider three hypothetical examples:) 90 676.67 T
0 14 Q
(8.1) 90 641.67 T
(Case 1: A Tax Program) 122.4 641.67 T
1 11 Q
1.22 (You manufacture and sell, through distributors, a general purpose program to assist small) 90 618.67 P
-0.26 (companies in handling their taxes. You provide the program with a limited warranty that offers) 90 603.67 P
(to refund the users' payments if the product is defective.) 90 588.67 T
-0.04 (One user claimed that data provided by your program misled him into making an unsound in-) 90 563.67 P
-0.09 (vestment that cost him a substantial amount of money. On investigation, you found that there) 90 548.67 P
-0.74 (was a bug in the program that could have produced the fallacious information your user claims.) 90 533.67 P
(What are the legal consequences?) 90 518.67 T
-0.26 (You would obviously try to get the user to accept a refund of the $450 he paid for the program) 90 493.67 P
-0.45 (in return for a full release from any further liability. While worth a try, this strategy is not a guar-) 90 478.67 P
(anteed success.) 90 463.67 T
0.53 (Your user, who did not buy the program directly from you, could not claim under a contract.) 90 438.67 P
-0.39 (Also, since no physical injury or property damage was involved, claims cannot be made under) 90 423.67 P
-0.65 (strict liability. The final recourse, therefore is to claim negligence. Here, the question is: did you) 90 408.67 P
-0.38 (follow best industrial software development practices to assure that such problems did not oc-) 90 393.67 P
-0.32 (cur? If the court can be convinced that you did, you would likely win. If not, you could pay sub-) 90 378.67 P
(stantial damages.) 90 363.67 T
0 14 Q
(8.2) 90 328.67 T
(Case 2: A Computerized Drafting System) 122.4 328.67 T
1 11 Q
-0.34 (You manufacture, sell, and service an advanced computerized system for producing architec-) 90 305.67 P
0.47 (tural drawings and specifications. The system is program controlled with a range of optional) 90 290.67 P
-0.14 (and custom features. You sell it under a warranty that limits your liability to five times the total) 90 275.67 P
(moneys paid for the system.) 90 260.67 T
-0.65 (One of your customers claims that he bought your system expressly to complete a rush project) 90 235.67 P
-0.42 (and that program defects severely delayed his work. He missed his committed dates, forfeited) 90 220.67 P
0.51 (a substantial incentive payment, and lost money on the architecture contract. He claims de-) 90 205.67 P
0.23 (fects in your software caused several files to be garbled, necessitating extensive rework. On) 90 190.67 P
-0.62 (investigation, you find that a software defect could have caused the alleged problem. What are) 90 175.67 P
(the legal consequences?) 90 160.67 T
0.35 (Since there have been no personal injuries or property damage, strict liability is not involved) 90 135.67 P
0.4 (and the issues concern negligence and warranty. While you are not anxious to pay the war-) 90 120.67 P
0.14 (ranty maximum of five times the $9,500 paid for the system, you want to avoid having to pay) 90 105.67 P
(the total claimed damages of $450,000. Your strategy is thus:) 90 90.67 T
FMENDPAGE
%%EndPage: "15" 24
%%Page: "16" 24
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(16) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
1 11 Q
0 X
(1.) 100.8 712.67 T
0.19 (You first claim that he was responsible for the failure to deliver on schedule,) 115.92 712.67 P
(not your system.) 115.92 700.17 T
(2.) 100.8 679.67 T
(You will next claim that the warranty limits your liability to $47,500.) 115.92 679.67 T
-0.43 (Your customer will first assert that you negligently designed, developed, and supplied the sys-) 72 659.17 P
0.65 (tem software and that the contractual limitations are not valid. Your defense is to show that) 72 644.17 P
(you exercised reasonable care in developing and testing the software.) 72 629.17 T
-0.27 (If his negligence claim fails, your customer will next claim that you, the expert, misled him, the) 72 604.17 P
-0.11 (neophyte, about the system's capabilities. Thus, the contract is not valid and the sales claims) 72 589.17 P
-0.53 (were guarantees. Here, you argue that your customer is knowledgeable and that you made no) 72 574.17 P
(invalid claims about the system's capabilities.) 72 559.17 T
-0.53 (Finally, the customer could claim under the contract that your system did not perform as prom-) 72 534.17 P
-0 (ised. If your product actually had the defect claimed, you could well pay the contractually lim-) 72 519.17 P
(ited damages.) 72 504.17 T
0 14 Q
(8.3) 72 469.17 T
(Case 3: An Automated Tunneling Machine) 104.4 469.17 T
1 11 Q
0.5 (You manufacture and market a sophisticated computerized drilling machine that senses un-) 72 446.17 P
0.15 (derground conditions while drilling tunnels. It is designed to determine the structural strength) 72 431.17 P
0.85 (of the strata through which it drills and to keep the miners informed about mine conditions.) 72 416.17 P
0.49 (Your machine is marketed under a warranty that limits your liability to ten times the moneys) 72 401.17 P
(paid for the machine.) 72 386.17 T
0.3 (One of your machines was used in a coal mine to dig a tunnel where there was a fire, a col-) 72 361.17 P
-0.7 (lapse, and a loss of life. While no one survived to tell what happened, the miners' families claim) 72 346.17 P
0.15 (that your machine was defective because it did not alert them to the presence of methane or) 72 331.17 P
(the likelihood of a collapse.) 72 316.17 T
0.33 (Here, the argument concerns strict liability. If your machine contributed to the damages, you) 72 291.17 P
0.68 (will almost certainly be held liable. If it did not, you will probably have no liability. The issue) 72 276.17 P
1.7 (could thus revolve around the likely behavior of your machine and whether it could have) 72 261.17 P
-0.24 (caused the alleged accident either through its design or through a malfunction. Experts would) 72 246.17 P
0.68 (likely be used to examine your product to see if there were any plausible ways that it could) 72 231.17 P
-0.39 (have contributed to the accident. Here, sound design methods, state-of-the-art quality practic-) 72 216.17 P
(es, and comprehensive testing are your best defenses.) 72 201.17 T
-0 (In every one of these example cases, poor software quality practices can be a serious disad-) 72 176.17 P
0.11 (vantage. This is particularly true if the practices of your software people do not at least equal) 72 161.17 P
-0.37 (the best in your industry. If they do not, your exposures could easily exceed your contractually) 72 146.17 P
(limited liability.) 72 131.17 T
FMENDPAGE
%%EndPage: "16" 25
%%Page: "17" 25
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(17) 530.01 53.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(9) 90 709.33 T
(The Improvement Opportunity) 129.6 709.33 T
1 11 Q
-0.18 (If you are in the business of supplying potentially hazardous products, you should take imme-) 90 676.67 P
0.09 (diate short-term preventive action. First, make sure your people use the best available meth-) 90 661.67 P
1.61 (ods to assure that your products are safe. Nancy Levison, at the University of California,) 90 646.67 P
-0.61 (devised methods for determining whether complex software could be unsafe. Rather than look) 90 631.67 P
0.17 (for defects or bugs, she suggests that developers rigorously search for all potential ways the) 90 616.67 P
0.19 (total system could be dangerous and then design special hardware or software provisions to) 90 601.67 P
-0.45 (ensure these conditions never occur. That way, even if there is a software defect, other blocks) 90 586.67 P
-0.05 (will ensure there is no damage. This extremely effective technique should be used by organi-) 90 571.67 P
(zations concerned about the safety of their hardware-software systems \050see Appendix D\051.) 90 556.67 T
-0.57 (Longer term, you must address product quality. As noted above, this requires an intensive and) 90 531.67 P
0.44 (continuous focus on software process improvement. The limited data now available indicate) 90 516.67 P
-0.54 (that there is as much as a 1000 to 1 improvement in quality between organizations at SEI level) 90 501.67 P
-0.71 (1 and SEI level 5. While it takes many years to advance to level 5, many groups have improved) 90 486.67 P
-0.22 (to levels 2 and 3. Hughes Aircraft, for example, reaped a 5 to 1 return in just one year on their) 90 471.67 P
0.04 (process improvement program to reach level 3. They also cut their late software deliveries to) 90 456.67 P
-0.31 (almost zero. Motorola, Israel, reports that their first two products to reach SEI level 2 met their) 90 441.67 P
-0.21 (cost and schedule targets and have had zero customer-reported defects in their first 6 and 10) 90 426.67 P
-0.13 (months of use. Raytheon has similarly reduced defects while saving over 7 times their quality) 90 411.67 P
1.11 (improvement costs. These companies and many others have established and funded sub-) 90 396.67 P
(stantial continuing programs to improve their software processes \050see Appendix E\051.) 90 381.67 T
-0.13 (The challenge is thus to improve the maturity of your software processes so they consistently) 90 356.67 P
(produce high quality products. The suggested steps are:) 90 341.67 T
(1.) 118.8 302.67 T
(Act rapidly to determine the maturity of your software process.) 133.92 302.67 T
(2.) 118.8 282.17 T
1.48 (If it is low, as it probably is, take immediate and aggressive improvement) 133.92 282.17 P
(action \050see Appendix E\051:) 133.92 269.67 T
4 9 Q
(\245) 144 249.17 T
1 11 Q
4.24 (Launch and maintain a permanent emphasis on software process) 151.92 249.17 P
(improvement.) 151.92 236.67 T
4 9 Q
(\245) 144 220.17 T
1 11 Q
(Utilize the best state-of-the-art development and test practices.) 151.92 220.17 T
4 9 Q
(\245) 144 203.67 T
1 11 Q
(Utilize applicable new technology developments.) 151.92 203.67 T
4 9 Q
(\245) 144 187.17 T
1 11 Q
(Maintain a quality distribution and support system.) 151.92 187.17 T
FMENDPAGE
%%EndPage: "17" 26
%%Page: "18" 26
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(18) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
1 11 Q
0 X
(3.) 100.8 712.67 T
(Under the guidance of experts, institute design-for-safety practices.) 115.92 712.67 T
(4.) 100.8 692.17 T
(Improve your contracts:) 115.92 692.17 T
4 9 Q
(\245) 126 671.67 T
1 11 Q
(Get competent legal advice.) 133.92 671.67 T
4 9 Q
(\245) 126 655.17 T
1 11 Q
(Be sure your customers are aware of) 133.92 655.17 T
0 F
(all) 317.1 655.17 T
1 F
( product risks.) 329.31 655.17 T
4 9 Q
(\245) 126 638.67 T
1 11 Q
(Use clear and reasonable warranties.) 133.92 638.67 T
4 9 Q
(\245) 126 622.17 T
1 11 Q
(Meet your commitments.) 133.92 622.17 T
(5.) 100.8 593.17 T
0.39 (Until you have taken these steps, avoid delivering complex software to high) 115.92 593.17 P
(risk markets \050see Appendix A\051.) 115.92 580.67 T
FMENDPAGE
%%EndPage: "18" 27
%%Page: "19" 27
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(19) 530.01 53.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(10) 90 709.33 T
(Conclusion) 129.6 709.33 T
1 11 Q
-0.23 (Ultimately, any successful strategy must reduce the risk of public injury by defective software.) 90 676.67 P
0.09 (This requires that you establish and maintain a mature software process. This can take time.) 90 661.67 P
0.1 (Starting at SEI level 1, it could take three to five years just to reach level 2. Each succeeding) 90 646.67 P
-0.39 (level can take another two to three years. For a level 1 organization, this is a sustained 9 to 14) 90 631.67 P
0.24 (year improvement effort. Substantial benefits, however, accrue with each improvement step.) 90 616.67 P
-0.56 (The best comparable example of a long-term corporate improvement strategy is the Japanese) 90 601.67 P
-0.73 (drive for quality following World War II. While it took them over 20 years, they netted leadership) 90 586.67 P
-0.56 (in watches from the Swiss, cameras from the Germans, and automobiles, steel, and shipbuild-) 90 571.67 P
(ing from the U.S.) 90 556.67 T
-0.45 (Quality is a long term issue and fortunately this is not an imminent crisis. By the time it is, how-) 90 531.67 P
-0.71 (ever, it likely will be too late to limit the damage. Behind this risk, however, is an important long-) 90 516.67 P
-0.44 (term opportunity. An aggressive software process improvement program has helped many or-) 90 501.67 P
-0.27 (ganizations to both improve their products and to save time and money. It could also help you) 90 486.67 P
(to reduce your liability risks, improve product quality, and save money.) 90 471.67 T
FMENDPAGE
%%EndPage: "19" 28
%%Page: "20" 28
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(20) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
FMENDPAGE
%%EndPage: "20" 29
%%Page: "21" 29
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(21) 530.01 53.66 T
90 72 540 720 R
7 X
V
0 16 Q
0 X
(References) 90 709.33 T
1 11 Q
([Cohen 92]) 90 684.67 T
-0.63 (Ilan Cohen, \322Using SEI Maturity Model to Improve the Software Pro-) 216 684.67 P
-0.56 (cess,\323) 216 669.67 P
6 F
-0.56 (IEEE Computer Society) 247.79 669.67 P
1 F
-0.56 (, Sixth Israel Conference on Comput-) 362.07 669.67 P
(er Systems and Software Engineering, Israel, June 2-3, 1992.) 216 654.67 T
([Edwards 86]) 90 624.67 T
-0.45 (W. Edwards Deming,) 216 624.67 P
6 F
-0.45 (Out of the Crisis) 320.89 624.67 P
1 F
-0.45 (. Cambridge. MA: MIT Center) 398.31 624.67 P
(for Advanced Engineering Study, 1986.) 216 609.67 T
([Dion]) 90 579.67 T
3.98 (Ray Dion, \322Process Improvement and the Corporate Balance) 216 579.67 P
(Sheet.\323) 216 564.67 T
6 F
(IEEE Software) 254.47 564.67 T
1 F
( \050July, 1993\051: 28-35.) 325.92 564.67 T
([Fowler 89]) 90 534.67 T
2.67 (Priscilla Fowler and Stan Rifkin,) 216 534.67 P
6 F
2.67 (Software Engineering Process) 386.88 534.67 P
-0.16 (Group Guide) 216 519.67 P
1 F
-0.16 ( \050CMU/SEI-90-TR-24, DTIC: ADA235784\051. Pittsburgh,) 278.73 519.67 P
2.4 (Pa.: Software Engineering Institute, Carnegie Mellon University,) 216 504.67 P
(1989.) 216 489.67 T
([Humphrey 91]) 90 459.67 T
0.71 (Watts S. Humphrey, Terry R. Snyder, and Ronald R. Willis, \322Soft-) 216 459.67 P
2.15 (ware Process Improvement at Hughes Aircraft,\323) 216 444.67 P
6 F
2.15 (IEEE Software) 463.35 444.67 P
1 F
2.15 (,) 536.95 444.67 P
(\050July 1991\051: 11- 23.) 216 429.67 T
([Humphrey 89a]) 90 399.67 T
-0.71 (Watts S. Humphrey,) 216 399.67 P
6 F
-0.71 (Managing the Software Process,) 315.2 399.67 P
1 F
-0.71 (Reading, MA:) 474.16 399.67 P
(Addison-Wesley, 1989.) 216 384.67 T
([Humphrey 89b]) 90 354.67 T
-0.69 (Watts S. Humphrey, David H. Kitson, and Timothy Kasse,) 216 354.67 P
6 F
-0.69 (The State) 493.06 354.67 P
-0.38 (of Software Engineering Practice: A Preliminary Report) 216 339.67 P
1 F
-0.38 (, \050CMU/SEI-) 481.17 339.67 P
-0.55 (89-TR-1, DTIC ADA206573\051. Pittsburgh, Pa.: Software Engineering) 216 324.67 P
(Institute, Carnegie Mellon University, 1989.) 216 309.67 T
([Kitson 92]) 90 279.67 T
1.08 (David H. Kitson and Steve Masters,) 216 279.67 P
6 F
1.08 (An Analysis of SEI Software) 398.92 279.67 P
3.46 (Process Assessment Results: 1987-1991) 216 264.67 P
1 F
3.46 ( \050CMU/SEI-92-TR-24\051) 427.28 264.67 P
6 F
3.46 (.) 536.95 264.67 P
1 F
2.2 (Pittsburgh, Pa.: Software Engineering Institute, Carnegie Mellon) 216 249.67 P
(University, 1992.) 216 234.67 T
([Kolkhorst]) 90 204.67 T
2.26 (Barbara G. Kolkhorst and A. J. Macina, \322Developing Error-Free) 216 204.67 P
1.33 (Software,\323 Computer Assurance Congress '88, joint meeting with) 216 189.67 P
-0.57 (the IEEE Washington Section on System Safety and the Tri-Service) 216 174.67 P
(Software System Safety Working Group.) 216 159.67 T
([Levison 83]) 90 129.67 T
0.65 (Nancy G. Levison and P. R. Harvey, \322Analyzing Software Safety,\323) 216 129.67 P
6 F
0.5 (IEEE Transactions on Software Engineering) 216 114.67 P
1 F
0.5 (,) 432.34 114.67 P
6 F
0.5 (SE-9,) 438.95 114.67 P
1 F
0.5 (5 \0501983\051: 569-) 469.99 114.67 P
(579.) 216 99.67 T
FMENDPAGE
%%EndPage: "21" 30
%%Page: "22" 30
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(22) 70 53.66 T
(CMU/SEI-93-TR-13) 438.6 53.66 T
72 72 522 720 R
7 X
V
1 11 Q
0 X
([Samuelson 93]) 72 712.67 T
0.27 (Pamela Samuelson, \322Liability for Defective Electronic Information,\323) 198 712.67 P
6 F
(Communications of the ACM) 198 697.67 T
1 F
(, 36, 1 \050January 1993\051.) 337.81 697.67 T
FMENDPAGE
%%EndPage: "22" 31
%%Page: "23" 31
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(23) 530.01 53.66 T
90 72 540 720 R
7 X
V
2 18 Q
0 X
(Appendix A) 90 708 T
(Software Design Complexity) 216 708 T
1 11 Q
0.13 (Software designs can be very simple or they can be extraordinarily complex. The decision of) 90 668.67 P
0.16 (where a product should fall in this spectrum is traditionally made by designers who are prop-) 90 653.67 P
-0.52 (erly striving to produce the best technical result. Unfortunately, their decisions of what is \322best\323) 90 638.67 P
-0.71 (are often not made with all the relevant information. For example, advanced technical methods) 90 623.67 P
0.22 (generally increase complexity. Increased complexity increases the likelihood of error. This in) 90 608.67 P
0.51 (turn increases the risk of potentially damaging development problems or product defects. In) 90 593.67 P
-0.33 (simplistic terms, the complexity progression for software-based systems is roughly as follows:) 90 578.67 P
(1.) 118.8 553.67 T
0 F
-0.44 (Small single-function routines.) 133.92 553.67 P
1 F
-0.44 ( These software products are typically small) 293.59 553.67 P
0.61 (enough so one developer can completely understand them and build them.) 133.92 541.17 P
0.46 (Such products can also often be exhaustively tested so there is high assur-) 133.92 528.67 P
(ance that they will do exactly what was intended.) 133.92 516.17 T
(2.) 118.8 495.67 T
0 F
-0.05 (Large dedicated programs.) 133.92 495.67 P
1 F
-0.05 (While generally too large for a single individual) 277.85 495.67 P
-0.71 (to develop or even to understand in detail, these programs are still reasonably) 133.92 483.17 P
0.5 (testable. The reason is that they operate in a dedicated environment where) 133.92 470.67 P
2.33 (the full range of operational conditions is often predictable and where a) 133.92 458.17 P
-0.38 (reasonably comprehensive set of tests can be devised. While a large amount) 133.92 445.67 P
-0.44 (of testing might be required, reasonably high product quality can generally be) 133.92 433.17 P
(assured.) 133.92 420.67 T
(3.) 118.8 400.17 T
0 F
6.12 (Multi-programmed systems.) 133.92 400.17 P
1 F
6.12 (As the number of computer-controlled) 295.73 400.17 P
0.16 (functions in a system increases, it is often possible to use one high-capacity) 133.92 387.67 P
1.63 (computer to handle them all. This is done through a technique known as) 133.92 375.17 P
1.29 (multi-programming where the computer spends a small fraction of its time) 133.92 362.67 P
-0.42 (handling each need. This technology has been found so effective that it is the) 133.92 350.17 P
2.12 (basis for all of today's large-scale computer operating systems. As cost-) 133.92 337.67 P
3.67 (effective and useful as this technique is, it greatly increases software) 133.92 325.17 P
-0.27 (complexity and vastly complicates testing. The reason is that, because of the) 133.92 312.67 P
0.86 (interleaving of many independent jobs, it is practically impossible to devise) 133.92 300.17 P
-0.18 (comprehensive tests for all likely conditions. Such programs are thus subject) 133.92 287.67 P
(to unpredictable behavior under unusual conditions.) 133.92 275.17 T
(4.) 118.8 254.67 T
0 F
-0.48 (Multi-processing systems.) 133.92 254.67 P
1 F
-0.48 (An even further step in complexity is often taken) 273.99 254.67 P
3.61 (to improve performance and reliability. In situations where a failure is) 133.92 242.17 P
0.37 (unacceptable, it is possible to build parallel systems with dynamic switching) 133.92 229.67 P
0 (in the event of failure. These systems can be very complex, both because of) 133.92 217.17 P
-0.16 (the error detecting and switching logic and because of the increased number) 133.92 204.67 P
0.7 (of job and system configurations that need to be tested. Generally, it is not) 133.92 192.17 P
(possible to exhaustively test multi-processing systems.) 133.92 179.67 T
0.22 (This progression involves increasing software complexity to make more efficient and reliable) 90 146.67 P
0.07 (use of hardware. For this tradeoff to be effective, however, the software must be of very high) 90 131.67 P
0.1 (quality. Prudent managers should thus consider this tradeoff in selecting their product strate-) 90 116.67 P
0.17 (gies and use sophisticated software designs only where the risk of damaging defects can be) 90 101.67 P
(controlled.) 90 86.67 T
FMENDPAGE
%%EndPage: "23" 32
%%Page: "24" 32
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(24) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
FMENDPAGE
%%EndPage: "24" 33
%%Page: "25" 33
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(25) 530.01 53.66 T
90 72 540 720 R
7 X
V
2 18 Q
0 X
(Appendix B) 90 708 T
(Software Process Maturity) 216 708 T
1 11 Q
0.06 (The Software Engineering Institute was established at Carnegie Mellon University in Decem-) 90 668.67 P
0.74 (ber 1984 to address the need for improved software in U.S. Department of Defense opera-) 90 653.67 P
0.04 (tions. As part of its work, SEI developed the software process maturity model for use both by) 90 638.67 P
(the Department of Defense and by industrial software organizations.) 90 623.67 T
0.55 (Software process maturity deals with the capability of software organizations to consistently) 90 598.67 P
-0.2 (and predictably produce high quality products. Maturity also implies that software process ca-) 90 583.67 P
1.07 (pability must be grown, which requires strong management support and a consistent long-) 90 568.67 P
0.44 (term focus. The software process maturity model provides a graduated improvement frame-) 90 553.67 P
-0.75 (work where each level progressively builds on prior process improvements. Because of its pro-) 90 538.67 P
0.42 (gressive nature, this framework can be used to assess software organizations and to define) 90 523.67 P
0.71 (their most important areas for improvement. It also permits organizations to determine their) 90 508.67 P
(relative standing with respect to other groups.) 90 493.67 T
-0.32 (The five-level improvement model for software is shown in Figure B-1. At the initial level \050level) 90 468.67 P
0.86 (1\051, organizations typically operate without formalized procedures, cost estimates, or project) 90 453.67 P
(plans. Schedules are late, cost targets are missed, and quality is unpredictable.) 90 438.67 T
0.15 (Organizations at the repeatable level \050level 2\051 have learned that traditional engineering man-) 90 413.67 P
-0.33 (agement works for software just as for other technical fields. These organizations have estab-) 90 398.67 P
-0.55 (lished basic software management practices: management oversight, product assurance, and) 90 383.67 P
0.73 (configuration control. Such organizations can reasonably meet routine schedules and costs) 90 368.67 P
(but newer technologies are often a problem.) 90 353.67 T
-0.7 (Defined level \050level 3\051 organizations have process specialists who maintain a focus on process) 90 328.67 P
-0.39 (improvement, keep management informed, and facilitate the introduction of new methods and) 90 313.67 P
0.04 (technologies. These organizations have learned how to manage change and how to draw on) 90 298.67 P
(industry experience to address new challenges.) 90 283.67 T
-0.06 (Managed level \050level 4\051 organizations have comprehensive quality and productivity measure-) 90 258.67 P
-0.31 (ments, a process database, and analysis and consultative resources to support their projects.) 90 243.67 P
0.43 (They use data to statistically manage their work and they routinely set and meet aggressive) 90 228.67 P
(quality goals.) 90 213.67 T
0.08 (At the optimizing level \050level 5\051 the organization is focused on defect prevention and continu-) 90 188.67 P
-0.5 (ous process improvement. These world-class groups regularly set and meet more challenging) 90 173.67 P
(productivity and quality goals.) 90 158.67 T
FMENDPAGE
%%EndPage: "25" 34
%%Page: "26" 34
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(26) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
72 72 522 720 C
81 302 513 709 C
89 313 508 703 R
7 X
0 K
V
89 313 508 703 R
0.5 H
0 Z
0 X
N
0 10 Q
(Process Control) 272.6 660.33 T
2 F
(Optimizing \0505\051) 388.18 672.33 T
(Focus on process) 380.43 660.33 T
( improvement) 388.63 648.33 T
0 F
(Process) 241.36 605.33 T
(Measurement) 228.59 593.33 T
2 F
(Managed \0504\051) 341.19 611.33 T
-0.58 (Process measured and) 320.23 599.33 P
(controlled) 345.29 587.33 T
0 F
(Process) 190.96 544.33 T
(Definition) 187.36 532.33 T
2 F
(Defined \0503\051) 293.53 550.33 T
-0.76 (Process characterized,) 270.05 538.33 P
(fairly well understood) 272.34 526.33 T
0 F
(Process) 140.56 483.33 T
(Discipline) 136.39 471.33 T
2 F
(Repeatable \0502\051) 236.29 489.33 T
(Can repeat previously) 221.48 477.33 T
(mastered tasks) 234.46 465.33 T
(Initial \0501\051) 197.05 428.33 T
-0.65 (Unpredictable & poorly) 168.82 416.33 P
(controlled) 194.09 404.33 T
0 11 Q
(Figure B-1:  Software Process Maturity) 197.46 358.67 T
163.5 444 163.5 392 2 L
V
2 H
N
213.9 505 213.9 453 2 L
V
N
264.3 566 264.3 514 2 L
V
N
264.3 444 264.3 392 2 L
V
N
314.7 627 314.7 575 2 L
V
N
314.7 505 314.7 453 2 L
V
N
365.1 688 365.1 636 2 L
V
N
365.1 566 365.1 514 2 L
V
N
415.5 627 415.5 575 2 L
V
N
465.9 688 465.9 636 2 L
V
N
364.1 689 466.9 689 2 L
V
N
364.1 635 466.9 635 2 L
V
N
313.7 628 416.5 628 2 L
V
N
313.7 574 416.5 574 2 L
V
N
263.3 567 366.1 567 2 L
V
N
263.3 513 366.1 513 2 L
V
N
212.9 506 315.7 506 2 L
V
N
212.9 452 315.7 452 2 L
V
N
162.5 445 265.3 445 2 L
V
N
162.5 391 265.3 391 2 L
V
N
484.15 588.14 493.99 595 489.28 583.96 486.72 586.05 4 Y
V
307 363.58 486.72 586.05 2 L
0.5 H
N
72 72 522 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "26" 35
%%Page: "27" 35
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(27) 530.01 53.66 T
90 72 540 720 R
7 X
V
2 18 Q
0 X
(Appendix C) 90 708 T
(The State of Software Practice) 216 708 T
1 11 Q
0.65 (A principal use of the SEI software process maturity model has been in assessing software) 90 682.67 P
-0.47 (organizations to help them improve. This work has yielded substantial information on the state) 90 667.67 P
-0.45 (of U.S. software practice. While this data on several hundred projects is not a statistically valid) 90 652.67 P
-0.08 (survey, it does provide a reasonable indication of the problems in this field. The summary as-) 90 637.67 P
-0.42 (sessment data in Figure C-1 show that 81% of the organizations were at maturity level 1. Very) 90 622.67 P
-0.44 (few of these projects used even basic project management methods. The few projects at level) 90 607.67 P
0.75 (2 were in leading companies working on U.S. Department of Defense \050DoD\051 contracts. De-) 90 592.67 P
(manding DoD specifications typically forced them to use disciplined management practices.) 90 577.67 T
-0.35 (The assessment data show that the principal areas level 1 organizations need to address are:) 90 552.67 P
4 12 Q
(\245) 126 527.67 T
1 11 Q
(Inadequate estimating and planning practices.) 136.08 527.67 T
4 12 Q
(\245) 126 509.17 T
1 11 Q
(Poor control over commitments.) 136.08 509.17 T
4 12 Q
(\245) 126 490.67 T
1 11 Q
(Inadequate or ineffective quality assurance functions.) 136.08 490.67 T
4 12 Q
(\245) 126 472.17 T
1 11 Q
(Inadequate configuration and change management.) 136.08 472.17 T
(The areas level 2 organizations need to address are:) 90 441.17 T
4 12 Q
(\245) 126 416.17 T
1 11 Q
(Insufficient or inadequate training.) 136.08 416.17 T
4 12 Q
(\245) 126 397.67 T
1 11 Q
(Lack of focus on process improvement.) 136.08 397.67 T
4 12 Q
(\245) 126 379.17 T
1 11 Q
(Continuing quality assurance problems.) 136.08 379.17 T
4 12 Q
(\245) 126 360.67 T
1 11 Q
(Lack of quality data.) 136.08 360.67 T
4 12 Q
(\245) 126 342.17 T
1 11 Q
(Inadequate testing.) 136.08 342.17 T
0.89 (While these needs have some technical aspects, they are not technical problems and they) 90 311.17 P
-0.7 (have all been solved many times before. These findings clearly show that the principal process) 90 296.17 P
0.38 (improvement needs of most U.S. software organizations concern management and not high) 90 281.17 P
(technology.) 90 266.17 T
FMENDPAGE
%%EndPage: "27" 36
%%Page: "28" 36
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(28) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
72 72 522 720 C
81 159 513 709 C
84 168 510 702 R
7 X
0 K
V
84 168 510 702 R
0.5 H
0 Z
0 X
N
1 8 Q
(Assessments Data:) 423.13 683.67 T
(296 projects) 448.45 673.67 T
(59 sites) 464.45 663.67 T
(July 1992) 457.78 653.67 T
5 F
(100%) 100.23 639.67 T
(90%) 103.88 603.67 T
(80%) 103.88 567.67 T
137 236.13 191 569 R
V
7 X
1 K
(81%) 157.44 560.67 T
0 X
0 K
(70%) 103.88 521.67 T
(60%) 103.88 481.67 T
(50%) 103.88 441.67 T
(40%) 103.88 401.67 T
(30%) 103.88 361.67 T
(20%) 103.88 321.67 T
7 X
1 K
(12%) 229.44 286.67 T
209 236 263 284 R
0 X
0 K
V
7 X
1 K
(12%) 229.44 275.67 T
0 X
0 K
(10%) 103.88 274.67 T
281 236 335 264 R
V
7 X
1 K
(7%) 303.26 255.67 T
0 X
0 K
(0%) 375.26 242.67 T
(0%) 447.26 242.67 T
1 F
(1) 161.78 224.17 T
(Initial) 154.67 214.17 T
(2) 233.78 224.17 T
(Repeatable) 215.55 214.17 T
(3) 305.78 224.17 T
(Defined) 294.22 214.17 T
(4) 377.78 221.67 T
(Managed) 363.33 211.67 T
(5) 449.78 224.17 T
(Optimizing) 433.12 214.17 T
0 11 Q
(Figure C-1:  Current State of Software Practice) 175.82 181.67 T
497 641 497 236.13 2 L
V
0.25 H
N
119 605 497.12 605 2 L
V
N
119 565 137 565 2 L
V
N
191 565 497.12 565 2 L
V
N
119 525 137 525 2 L
V
N
191 525 497.12 525 2 L
V
N
119 483 137 483 2 L
V
N
191 483 497.12 483 2 L
V
N
119 443 137 443 2 L
V
N
191 443 497.12 443 2 L
V
N
119 403 137 403 2 L
V
N
191 403 497.12 403 2 L
V
N
119 363 137 363 2 L
V
N
191 363 497.12 363 2 L
V
N
119 323 137 323 2 L
V
N
191 323 497.12 323 2 L
V
N
119 276 137 276 2 L
V
N
191 276 209 276 2 L
V
N
263 276 497.12 276 2 L
V
N
119 236 497.12 236 2 L
V
N
72 72 522 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "28" 37
%%Page: "29" 37
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(29) 530.01 53.66 T
90 72 540 720 R
7 X
V
2 18 Q
0 X
(Appendix D) 90 708 T
(Software Safety) 216 708 T
1 11 Q
-0.51 (Software safety concerns the risk of encountering software-caused hazards while using a sys-) 90 682.67 P
0.61 (tem. Since software consists of electronic signals inside computers, it cannot directly cause) 90 667.67 P
-0.71 (harm. When software is improperly specified, designed, implemented, or used, however, it can) 90 652.67 P
-0.28 (cause systems to do damaging things. A software safety analysis must therefore consider the) 90 637.67 P
-0.49 (software in the context of the system it controls. A software safety analysis involves the follow-) 90 622.67 P
(ing basic steps:) 90 607.67 T
(1.) 118.8 582.67 T
-0.49 (Perform a system hazard analysis to determine potential safety risks \050see be-) 133.92 582.67 P
(low\051.) 133.92 570.17 T
(2.) 118.8 549.67 T
1.28 (Determine the system design and usage changes that should be made to) 133.92 549.67 P
(prevent these hazards.) 133.92 537.17 T
(3.) 118.8 516.67 T
(Implement these changes.) 133.92 516.67 T
(4.) 118.8 496.17 T
-0.72 (Test to assure that the changes prevent the hazardous events from occurring.) 133.92 496.17 P
-0.57 (Hazard analyses can be performed in various ways but a common approach is called software) 90 463.17 P
(fault tree analysis. It is done as follows:) 90 448.17 T
(1.) 118.8 423.17 T
0.89 (Make a preliminary hazard analysis. This lists all the potentially unsafe ac-) 133.92 423.17 P
-0.66 (tions that the system could conceivably perform. Even if there was no obvious) 133.92 410.67 P
(way that software could cause such an action, it should be considered.) 133.92 398.17 T
(2.) 118.8 377.67 T
1.53 (Construct a fault tree for each such hazard. The fault tree represents the) 133.92 377.67 P
-0.28 (logical relationships of all the conditions that would have to exist to cause the) 133.92 365.17 P
(hazard to occur.) 133.92 352.67 T
(3.) 118.8 332.17 T
2.5 (After the fault trees have all been constructed, determine the design or) 133.92 332.17 P
3.8 (operational changes needed to guarantee that each hazard could not) 133.92 319.67 P
(possibly occur.) 133.92 307.17 T
0.39 (Since poorly performed software safety analyses could easily overlook critical hazards, care) 90 274.17 P
1.22 (must be taken. The procedure appears simple, but these steps can be quite complex and) 90 259.17 P
(should be performed with the help of experts.) 90 244.17 T
FMENDPAGE
%%EndPage: "29" 38
%%Page: "30" 38
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(30) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
FMENDPAGE
%%EndPage: "30" 39
%%Page: "31" 39
612 792 0 FMBEGINPAGE
90 746 540 756 R
7 X
0 K
V
90 46.67 540 63.67 R
V
90 59.66 540 63.67 C
90 59.66 540 63.67 R
7 X
0 K
V
90 62.66 594 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(CMU/SEI-93-TR-13) 90 53.66 T
(31) 530.01 53.66 T
90 72 540 720 R
7 X
V
2 18 Q
0 X
(Appendix E) 90 708 T
(Software Process Assessment) 216 708 T
1 11 Q
-0.67 (Many successful software process improvement efforts have started with an assessment. This) 90 682.67 P
-0.19 (identifies the organization's unique problems and recommends steps to address them. Action) 90 667.67 P
-0.14 (plans are then established and implemented. After two or more years, another assessment is) 90 652.67 P
-0.12 (done and the cycle is repeated. Because of their pivotal role in process improvement, it is es-) 90 637.67 P
(sential to handle the assessments properly.) 90 622.67 T
-0.7 (An assessment is a diagnostic tool to aid organizational improvement. Its objectives are to pro-) 90 597.67 P
0.79 (vide a clear understanding of the organization's software practices, to identify key improve-) 90 582.67 P
0.99 (ment areas, and to initiate improvement action. The assessment must start with the senior) 90 567.67 P
0.16 (manager's commitment to support the assessment and the ensuing improvements. Software) 90 552.67 P
(process assessments typically have the following six phases:) 90 537.67 T
(1.) 118.8 512.67 T
0 F
-0.16 (Commitment.) 133.92 512.67 P
1 F
-0.16 ( Senior management, with line management agreement, com-) 204.11 512.67 P
(mits to do the assessment.) 133.92 500.17 T
(2.) 118.8 479.67 T
0 F
2.2 (Selection.) 133.92 479.67 P
1 F
2.2 ( An organization is selected to assist in the assessment. This) 185.82 479.67 P
-0.1 (should be a trained group that is competent to do such work.) 133.92 467.17 P
1 9 Q
-0.08 (1) 427.15 471.57 P
1 11 Q
-0.1 ( An agreement) 432.14 467.17 P
0.62 (is typically signed that commits management to supporting the assessment) 133.92 454.67 P
(and implementing its recommendations.) 133.92 442.17 T
(3.) 118.8 421.67 T
0 F
0.67 (Preparation.) 133.92 421.67 P
1 F
0.67 ( During this two to four month period, the assessment team is) 198.02 421.67 P
2.24 (selected and trained, the assessment participants are identified, and the) 133.92 409.17 P
(assessment mechanics are settled.) 133.92 396.67 T
(4.) 118.8 376.17 T
0 F
0.62 (Assessment.) 133.92 376.17 P
1 F
0.62 ( The on-site assessment is conducted. This is an intense five) 201.7 376.17 P
-0.2 (day period where many project managers and professionals are interviewed.) 133.92 363.67 P
1.22 (Its product is a thoroughly researched and reviewed set of findings that is) 133.92 351.17 P
(presented to management and all assessment participants.) 133.92 338.67 T
(5.) 118.8 318.17 T
0 F
1.59 (Report.) 133.92 318.17 P
1 F
1.59 ( An assessment report is next prepared that includes the findings) 172.37 318.17 P
-0.34 (together with recommendations to address them. Experience has shown that) 133.92 305.67 P
(a written assessment report facilitates continuing process improvement.) 133.92 293.17 T
(6.) 118.8 272.67 T
0 F
7.16 (Assessment Follow-On.) 133.92 272.67 P
1 F
7.16 ( This covers action plan preparation and) 265.62 272.67 P
(implementation and should continue until the next assessment.) 133.92 260.17 T
90 93.27 540 102.24 C
90 93.27 540 102.24 R
7 X
0 K
V
90 100.23 243 100.23 2 L
V
0.5 H
2 Z
0 X
N
0 0 612 792 C
1 7 Q
0 X
0 K
(1.) 90 88.6 T
1 9 Q
( The SEI has trained and licenced a number of commercial organizations to perform assessments.) 108 85 T
FMENDPAGE
%%EndPage: "31" 40
%%Page: "32" 40
612 792 0 FMBEGINPAGE
72 746 522 756 R
7 X
0 K
V
70 39.67 522 63.67 R
V
70 59.66 522 63.67 C
70 59.66 522 63.67 R
7 X
0 K
V
70 62.66 574 62.66 2 L
V
0.03 H
2 Z
0 X
N
0 0 612 792 C
1 9 Q
0 X
0 K
(32) 70 53.66 T
(CMU/SEI-93-TR-13) 441.6 53.66 T
72 72 522 720 R
7 X
V
1 11 Q
1 K
(this is for the page ref) 72 712.67 T
FMENDPAGE
%%EndPage: "32" 41
%%Page: "33" 41
612 792 0 FMBEGINPAGE
81.07 349.32 161.74 370.67 R
7 X
0 K
V
3 7 Q
0 X
(13a. TYPE OF REPOR) 81.07 366.01 T
(T) 146.65 366.01 T
1 10 Q
(Final) 81.07 353.51 T
3 7 Q
(UNCLASSIFIED/UNLIMITED) 82 79.33 T
(SAME AS RPT) 202.34 79.33 T
(DTIC USERS) 272.2 79.33 T
80.07 675.85 250.42 697.34 R
7 X
V
1 F
0 X
(2a. SECURITY CLASSIFICA) 80.07 690.68 T
(TION AUTHORITY) 169.26 690.68 T
1 10 Q
(N/A) 80.07 680.68 T
506.44 349.58 580.91 370.67 R
7 X
V
3 7 Q
0 X
(15. P) 506.44 366.01 T
(AGE COUNT) 520.16 366.01 T
184.54 346.58 328.01 370.67 R
7 X
V
0 X
(13b. TIME COVERED) 184.54 366.01 T
(FROM                       T) 184.54 352.01 T
(O) 248.67 352.01 T
331 346.58 489.47 370.67 R
7 X
V
0 X
(14. DA) 331 366.01 T
(TE OF REPOR) 350.8 366.01 T
(T \050year) 393.87 366.01 T
(, month, day\051) 413.96 366.01 T
79.07 408.01 585.42 425.36 R
7 X
V
0 X
(1) 79.07 420.69 T
(1. TITLE \050Include Security Classi\336cation\051) 82.3 420.69 T
80.07 702.69 250.42 726.37 R
7 X
V
0 X
(1a. REPOR) 80.07 721.7 T
(T SECURITY CLASSIFICA) 112.26 721.7 T
(TION) 193.41 721.7 T
1 10 Q
(Unclassi\336ed) 80.07 709.2 T
330 638.95 548.25 645.3 R
7 X
V
3 7 Q
0 X
(5. MONIT) 330 640.63 T
(ORING ORGANIZA) 359.76 640.63 T
(TION REPOR) 419.35 640.63 T
(T NUMBER\050S\051) 459.89 640.63 T
80.07 635.95 258.31 645.3 R
7 X
V
0 X
(4. PERFORMING ORGANIZA) 80.07 640.63 T
(TION REPOR) 169.55 640.63 T
(T NUMBER\050S\051) 210.09 640.63 T
78.07 649.97 331.42 671.32 R
7 X
V
0 X
(2b. DECLASSIFICA) 78.07 666.65 T
(TION/DOWNGRADING SCHEDULE) 137.08 666.65 T
1 10 Q
(N/A) 78.07 654.15 T
330 650.81 520.35 697.34 R
7 X
V
3 7 Q
0 X
(3. DISTRIBUTION/A) 330 692.68 T
(V) 391.99 692.68 T
(AILABILITY OF REPOR) 396.13 692.68 T
(T) 470.25 692.68 T
1 10 Q
(Approved for Public Release) 330 680.18 T
(Distribution Unlimited) 330 670.18 T
330 702.69 512.35 726.37 R
7 X
V
3 7 Q
0 X
(1b. RESTRICTIVE MARKINGS) 330 721.7 T
1 10 Q
(None) 330 709.2 T
76.02 605.89 588 605.89 2 L
0.5 H
2 Z
N
73.08 729.33 588 729.33 2 L
N
74 700.31 588 700.31 2 L
N
75.88 649.26 588 649.26 2 L
N
327.01 451.78 512.36 469.13 R
7 X
V
3 7 Q
0 X
(10. SOURCE OF FUNDING NOS.) 327.01 464.46 T
80.07 518.27 250.42 559.62 R
7 X
V
0 X
(6c. ADDRESS \050city) 80.07 554.96 T
(, state, and zip code\051) 136.1 554.96 T
1 10 Q
(Carnegie Mellon University) 80.07 542.46 T
(Pittsburgh P) 80.07 532.46 T
(A 15213) 133.77 532.46 T
329 566.54 520.35 602.89 R
7 X
V
3 7 Q
0 X
(7a. NAME OF MONIT) 329 598.22 T
(ORING ORGANIZA) 394.86 598.22 T
(TION) 454.45 598.22 T
1 10 Q
(SEI Joint Program Of) 329 585.72 T
(\336ce) 423.25 585.72 T
251.29 585.54 316.01 602.89 R
7 X
V
3 7 Q
0 X
-0.35 (6b. OFFICE SYMBOL) 251.29 598.22 P
(\050if applicable\051) 251.29 591.22 T
80.07 571.54 250.42 602.89 R
7 X
V
0 X
(6a. NAME OF PERFORMING ORGANIZA) 80.07 598.22 T
(TION) 205.66 598.22 T
1 10 Q
(Software Engineering Institute) 80.07 585.72 T
244.31 604.92 244.31 563.48 2 L
N
75.04 510.47 589 510.47 2 L
N
330 514.27 520.35 559.62 R
7 X
V
3 7 Q
0 X
(7b. ADDRESS \050city) 330 554.96 T
(, state, and zip code\051) 386.42 554.96 T
1 10 Q
(HQ ESC/ENS) 330 542.46 T
(5 Eglin Street) 330 532.46 T
(Hanscom AFB, MA 01731-21) 330 522.46 T
(16) 459.24 522.46 T
330 476.26 561.09 506.61 R
7 X
V
3 7 Q
0 X
(9. PROCUREMENT INSTRUMENT IDENTIFICA) 330 501.95 T
(TION NUMBER) 475.98 501.95 T
1 10 Q
(F1962890C0003) 330 489.45 T
251.29 488.3 318.01 506.61 R
7 X
V
3 7 Q
0 X
(8b. OFFICE SYMBOL) 251.29 501.95 T
(\050if applicable\051) 251.29 494.95 T
80.07 466.26 225.42 506.61 R
7 X
V
0 X
(8a. NAME OFFUNDING/SPONSORING) 80.07 501.95 T
(     ORGANIZA) 80.07 494.95 T
(TION) 124.51 494.95 T
1 10 Q
(SEI Joint Program Of) 80.07 482.45 T
(\336ce) 174.31 482.45 T
243.31 510 243.31 474 2 L
N
80.07 33.11 356.42 57.46 R
7 X
V
3 7 Q
0 X
(22a. NAME OF RESPONSIBLE INDIVIDUAL) 80.07 52.79 T
1 10 Q
(Thomas R. Miller) 80.07 40.29 T
(, Lt Col,  USAF) 155.04 40.29 T
80.07 336.26 200.42 343.61 R
7 X
V
3 7 Q
0 X
(16. SUPPLEMENT) 80.07 338.95 T
(AR) 135.03 338.95 T
(Y NOT) 144.35 338.95 T
(A) 164.95 338.95 T
(TION) 169.22 338.95 T
79.07 379.24 249.42 396.59 R
7 X
V
0 X
(12. PERSONAL AUTHOR\050S\051) 79.07 391.92 T
80.07 300.24 250.42 307.95 R
7 X
V
0 X
(17. COSA) 80.07 303.28 T
(TI CODES) 108.41 303.28 T
252.42 295.6 574.2 306.95 R
7 X
V
0 X
(18. SUBJECT TERMS \050continue on reverse of necessary and identify by block number\051) 252.42 302.28 T
327.99 440.11 402.76 457.45 R
7 X
V
0 X
(PROGRAM) 327.99 452.79 T
(ELEMENT NO) 327.99 445.79 T
399.72 442.11 443.49 456.45 R
7 X
V
0 X
(PROJECT) 399.72 451.79 T
(NO.) 399.72 444.79 T
458.47 442.11 506.24 457.45 R
7 X
V
0 X
(T) 458.47 452.79 T
(ASK) 462.18 452.79 T
(NO) 458.47 445.79 T
516.21 441.11 583.98 457.45 R
7 X
V
0 X
(WORK UNIT) 516.21 452.79 T
(NO.) 516.21 445.79 T
390.76 460 390.76 429 2 L
N
74.08 429.32 588 429.32 2 L
N
73.09 347.58 588 347.58 2 L
N
325.01 374 325.01 348.58 2 L
N
501.46 372.64 501.46 347.58 2 L
N
177.57 375 177.57 347.58 2 L
N
74 300.35 248 300.35 2 L
N
75.08 286.86 249.42 286.86 2 L
N
76.08 271.36 250.42 271.36 2 L
N
80.07 229.55 367.96 237.9 R
7 X
V
0 X
(19. ABSTRACT \050continue on reverse if necessary and identify by block number\051) 80.07 233.24 T
332 58.7 572.35 95.05 R
7 X
V
0 X
(21. ABSTRACT SECURITY CLASSIFICA) 332 90.38 T
(TION) 455.86 90.38 T
1 10 Q
(Unclassi\336ed, Unlimited Distribution) 332 77.88 T
85.08 288.67 116.96 296.39 R
7 X
V
3 7 Q
0 X
(FIELD) 85.08 291.72 T
196.63 288.67 251.43 296.39 R
7 X
V
0 X
(SUB. GR.) 196.63 291.72 T
142.83 288.67 174.71 296.39 R
7 X
V
0 X
(GROUP) 142.83 291.72 T
126.89 299.24 126.89 238.83 2 L
N
184.67 299.24 184.67 238.83 2 L
N
497.47 32.86 582.12 55.17 R
7 X
V
0 X
(22c. OFFICE SYMBOL) 497.47 50.51 T
1 10 Q
(ESC/A) 497.47 38.01 T
(VS \050SEI\051) 526.73 38.01 T
332 35.15 482.24 56.5 R
7 X
V
3 7 Q
0 X
(22b. TELEPHONE NUMBER \050include area code\051) 332 51.83 T
1 10 Q
(\050412\051 268-7631) 332 39.33 T
80.07 86.7 250.42 95.05 R
7 X
V
3 7 Q
0 X
(20. DISTRIBUTION/A) 80.07 90.38 T
(V) 145.55 90.38 T
(AILABILITY OF ABSTRACT) 149.69 90.38 T
494.35 60.35 494.35 29.5 2 L
N
73 400.39 587 400.39 2 L
N
73.09 311.92 588 311.92 2 L
N
76.1 239.83 588 239.83 2 L
N
76.06 60.32 588 60.32 2 L
N
76.06 97.91 588 97.91 2 L
N
326 460.47 589 460.47 2 L
N
72.71 474.13 588 474.13 2 L
N
249 573 301 584 R
7 X
V
1 10 Q
0 X
(SEI) 249 577.33 T
251 478 295 488 R
7 X
V
0 X
(ESC/A) 251 481.33 T
(VS) 280.25 481.33 T
315 76 322 86 R
V
N
248 76 255 86 R
7 X
V
0 X
N
176 76 183 86 R
V
N
508.01 460 508.01 429 2 L
N
450.01 459 450.01 429 2 L
N
249.42 312 249.42 238.83 2 L
V
N
208 733 456 743 R
7 X
V
7 14 Q
0 X
(REPOR) 217.19 733.67 T
(T DOCUMENT) 265.68 733.67 T
(A) 360.64 733.67 T
(TION P) 369.71 733.67 T
(AGE) 416.49 733.67 T
74 754 378 770 R
7 X
V
3 7 Q
0 X
(UNLIMITED, UNCLASSIFIED) 74 765.33 T
3 6 Q
(SECURITY CLASSIFICA) 74 758.33 T
(TION OF THIS P) 138.47 758.33 T
(AGE) 181.06 758.33 T
78 10 472 22 R
7 X
V
3 7 Q
0 X
(DD FORM 1473, 83 APR) 78 17.33 T
(EDITION of 1 JAN 73 IS OBSOLETE) 275 17.33 T
479 8 590 24 R
7 X
V
0 X
(UNLIMITED, UNCLASSIFIED) 479 19.33 T
3 6 Q
(SECURITY CLASSIFICA) 479 12.33 T
(TION OF THIS) 543.47 12.33 T
328 431 368 441 R
7 X
V
1 10 Q
0 X
(63756E) 328 434.33 T
399 431 444 441 R
7 X
V
0 X
(N/A) 399 434.33 T
458.47 434 491.47 444 R
7 X
V
0 X
(N/A) 458.47 437.33 T
515 432 555 441 R
7 X
V
0 X
(N/A) 515 434.33 T
74.02 562.89 589 562.89 2 L
N
74.09 30.47 587.91 749.5 R
3 H
N
325.01 729 325.01 429 2 L
0.5 H
N
77 375.39 588 375.39 2 L
N
74 674 325 674 2 L
N
78.07 435.27 248.42 469.62 R
7 X
V
3 7 Q
0 X
(8c. ADDRESS \050city) 78.07 464.96 T
(, state, and zip code\051\051) 134.1 464.96 T
1 10 Q
(Carnegie Mellon University) 78.07 452.46 T
(Pittsburgh P) 78.07 442.46 T
(A 15213) 131.77 442.46 T
325 96.14 325 29.47 2 L
N
523 105 585 111 R
7 X
V
3 7 Q
0 X
(\050please turn over\051) 523 106.33 T
73.08 253.36 247.42 253.36 2 L
N
81 610.57 281.8 632 R
7 X
V
1 10 Q
0 X
-0.3 (CMU/SEI-93-TR-13) 81 625.33 S
330.19 610 563 631 R
7 X
V
0 X
-0.3 (ESC-TR-93-190) 330.19 624.33 S
80 403 578 414 R
7 X
V
6 F
0 X
-0.3 (Software Product Liability) 80 407.33 S
209 351 243 360 R
7 X
V
270 350 322 360 R
V
332 352 495 361 R
V
1 F
0 X
-0.3 (August 1993) 332 354.33 S
508 352 578 360 R
7 X
V
0 X
-0.3 (32) 508 353.33 S
79 318 579 332 R
7 X
V
0 X
-0.3 (REVISED REPOR) 79 325.33 S
-0.3 (T) 157.12 325.33 S
-0.3 (.  PLEASE REPLACE FILE COPIES.) 161.81 325.33 S
-0.3 (software product liability) 252 290.33 S
-0.3 (safety critical systems) 432 290.33 S
-0.3 (software) 252 276.83 S
-0.3 (software development) 432 276.83 S
-0.3 (software-controlled products) 252 263.33 S
-0.3 (software practice) 432 263.33 S
1 11 Q
-0.59 (V) 80 218.67 P
-0.59 (oyne Ray Cox settled into the radiation machine for the eighth routine treatment of his largely cured) 86.72 218.67 P
(cancer) 80 204.67 T
(. The operator went to the control room and pushed some buttons. Soon, the machine went) 112.37 204.67 T
-0.04 (into action and the treatment began. A soft whir and then an intense searing pain made him yell for) 80 190.67 P
(help and jump from the machine. The doctors assured him there was nothing to worry about. What) 80 176.67 T
(they didn't know was that the operator had inadvertently pushed an unusual sequence of controls) 80 162.67 T
(that activated a defective part of the software controlling the machine. He didn't die for six months) 80 148.67 T
(but he had received a lethal dose of radiation. This software defect actually killed two patients and) 80 134.67 T
79 378 577 389 R
7 X
V
1 10 Q
0 X
-0.3 (Jody Armour and W) 79 382.33 S
-0.3 (atts S. Humphrey) 161.84 382.33 S
FMENDPAGE
%%EndPage: "33" 42
%%Page: "34" 42
612 792 0 FMBEGINPAGE
74.09 30.47 587.91 749.5 R
3 H
2 Z
0 X
0 K
N
76.07 728.55 366.96 745.9 R
7 X
V
3 7 Q
0 X
(ABSTRACT \321 continued from page one, block 19) 76.07 741.24 T
92 54 567 727 R
7 X
V
1 11 Q
0 X
-0.56 (severely injured several others. The \336nal decisions in the resulting lawsuits have not been made) 92 719.67 P
(public.) 92 705.67 T
-0.22 (Software defects are rarely lethal and the number of injuries and deaths is now very small. Soft-) 92 670.67 P
(ware, however) 92 656.67 T
(, is now the principal controlling element in many industrial and consumer prod-) 162.83 656.67 T
-0.63 (ucts. It is so pervasive that it is found in just about every product that is labeled \322electronic.\323 Most) 92 642.67 P
(companies are in the software business whether they know it or not. The question is whether) 92 628.67 T
(their products could potentially cause damage and what their exposures would be if they did.) 92 614.67 T
(While most executives are now concerned about product liability) 92 579.67 T
(, software introduces a new) 403.2 579.67 T
(dimension. Software, particularly poor quality software, can cause products to do strange and) 92 565.67 T
-0.85 (even terrifying things. Software bugs are erroneous instructions and, when computers encounter) 92 551.67 P
-0.31 (them, they do precisely what the defects instruct. An error could cause a 0 to be read as a 1, an) 92 537.67 P
-0.15 (up control to be shut down, or) 92 523.67 P
-0.15 (, as with the radiation machine, a shield to be removed instead of) 235.21 523.67 P
(inserted. A software error could mean life or death.) 92 509.67 T
FMENDPAGE
%%EndPage: "34" 43
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 42 1
%%DocumentFonts: Helvetica-Bold
%%+ Helvetica
%%+ Helvetica-Narrow-Bold
%%+ Times-Roman
%%+ Palatino-Roman
%%+ Helvetica-Narrow
%%+ Helvetica-Oblique
%%+ Times-Bold
