In order to better understand the strengths and weaknesses of the current
version of Hackystat, and to help guide future improvements, please take a
few minutes to answer the following questions.  Your identity will be removed
before performing any analysis on this data.  There are no right or wrong
answers: we want to know what your personal experience was. 

Most questions ask you to respond with a number from 1 to 5, where 1
indicates the "best" and 5 indicates the "worst".  The last question of
each section requests your comments as the response. 

I. INSTALLATION/CONFIGURATION

Please provide us with your opinions regarding the installation of
Hackystat sensors and configuration of the Hackystat server.  

1. Installing the Eclipse IDE sensor was:
   (Very Easy)  1  2  3  4  5  (Very Difficult)

2. Installing the Ant sensors (JUnit, JBlanket, BCML) were:
   (Very Easy)  1  2  3  4  5  (Very Difficult)

3. Configuring Hackystat to track our team's work on SiteWatch
   (i.e. defining the project, and configuring the workspace roots) was:
   (Very Easy)  1  2  3  4  5  (Very Difficult)

4. Please provide any feedback you can on the problems you experienced
   during sensor installation and server configuration, as well as any
   suggestions you have to make this easier in future.

II. OVERHEAD OF USE

In this section, we are interested in learning about the "overhead" you
experienced with Hackystat--in other words, how much work was required
after installation and configuration to gather data and perform analyses:

5. The amount of overhead required to collect Hackystat data was:
   (Very Low)  1  2  3  4  5  (Very High)

6. The amount of overhead required to run Hackystat analyses was:
   (Very Low)  1  2  3  4  5  (Very High)

7. Please provide any feedback you can on Hackystat overhead after
   installation and configuration, as well as any suggestions you have to
   reduce the overhead more in future.

III. USABILITY and UTILITY

This section asks for your opinion on the usability and utility of the
three primary analyses used by Hackystat. We define "usability" to mean the
ease of invoking an analysis and understanding what the results mean.  We
define "utility" to mean the usefulness of the analysis; does the analysis
provide information that is actually helpful to you.

8. The Project Member Effort analysis (showing the cumulative time spent by
   each project member) was:
   (Highly Usable)  1  2  3  4  5  (Not Usable At All)
   (Highly Useful)  1  2  3  4  5  (Not Useful At All)

9. The Project Member File analysis (showing the files worked on by each
   project member) was:
   (Highly Usable)  1  2  3  4  5  (Not Usable At All)
   (Highly Useful)  1  2  3  4  5  (Not Useful At All)

10. The Course Project Analysis (showing a comparison of project data
   between all of the SiteWatch projects) was:
   (Highly Usable)  1  2  3  4  5  (Not Usable At All)
   (Highly Useful)  1  2  3  4  5  (Not Useful At All)

11. Please provide any other feedback you can on the usability and utility
    of Hackystat analyses, as well as any suggestions you have on how we
    can improve usability and utility in future.

IV. FUTURE USE

In this section, we are interested in learning whether you would consider
Hackystat to be feasible (i.e. appropriate, useful, beneficial) for use in a
professional software development context.

12. If I was a professional software developer, using Hackystat at my job
    would be:
    (Very Feasible)  1  2  3  4  5  (Not Feasible at All)

13. Please provide any other feedback you can on the feasibility of
    Hackystat in a professional setting, as well as any suggestions you
    have on how we could improve its feasibility in future. 


Thanks very much!
Cheers,
Philip

