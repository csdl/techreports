%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -*- Mode: Latex -*- %%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 05-01-evaluation.tex -- Thesis proposal - PRI 
%% Author          : Aaron A. Kagawa
%% Created On      : Mon Sep 23 11:52:28 2004
%% Last Modified By: Aaron Kagawa
%% Last Modified On: Mon Mar  7 14:01:42 2005
%% RCS: $Id$
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%   Copyright (C) 2004 Aaron A. Kagawa
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


\chapter{Evaluation Methodology}
\label{chapter:evaluation}
This chapter discusses the proposed evaluation methodology of this
research. The main thesis of this proposed research is that Priority Ranked
Inspection (PRI) can distinguish documents that are more in need of
inspection (MINI) from those less in need of inspection (LINI).

One approach of implementing PRI is through Hackystat, thus I will create a
Hackystat Extension called hackyPRI. This extension will provide a
Hackystat analysis, which will distinguish MINI documents from LINI
documents. This determination is based on a ranking function of different
process and product measures. Some measures include: reported defects, unit
tests, test coverage, active time, and number of changes.  Each measure
will implement a different ranking function and will be individually
calibrated. See Chapter 4: The Hackystat PRI Extension for more details.

It is important to note two limitations of this research. First, I am not
defining a set of measures that represent the PRI ranking function for
all software projects. Instead, by using hackyPRI I will be able to go
through a methodology to best calibrate the measures to accurately reflect
the determination for the project I am studying. Second, PRI is more
beneficial for organizations that have limited inspection resources. PRI is
of less use for organizations that have the necessary resources to
thoroughly inspect every document, although this is yet to be studied.


\section{Subjects Used in the Evaluation}
In this evaluation, I will study the implementation and inspection process
of the Hackystat System developed in the Collaborative Software Development
Laboratory (CSDL), of the University of Hawaii at Manoa. Like most
organizations, CSDL's inspection resources are limited and therefore
inspections are conducted, if at all, on a weekly basis regardless of the
number of ``ready'' documents. CSDL primarily inspects source code grouped
by Java packages; therefore, I will use the term 'packages' when referring
to CSDL's use of PRI. I will use the term 'documents' when referring to the
general idea of inspections.

Although I am a member of CSDL and have been contributing to Hackystat, I
will minimize any possible data contamination by doing two things. First, I
will ensure that the inspection participants are ``blind'' to the document
selection method. There are two methods of selection that will be used in
this evaluation; selection without aid of PRI and selection with the aid of
PRI. I will work with inidividual authors to select documents based on
their subjective selection or with the aid of PRI and keep that decission a
secret from the rest of the participants. Second, I obviously will not
participate in the inspections themselves. It has been advised by Dr. Dan
Suthers, that ensuring that the inspection requests should be ``double
blind''. ``Double blind'' means that the experiementer should not know what
the PRI determination of MINI or LINI. This prevents any sort of consious
or unconsious hints via body language, speach, or any other action that
will give the impression of whether the experimenter wants the reviewer to
find defects in the document. However, I'm the evaluation methodology I
will use, this is not possible.

The use of CSDL in my study indicates another limitation on this research.
The most accurate and thorough evaluation of PRI should inspect
\textit{all} documents to evaluate if PRI correctly classifies MINI and
LINI documents. However, because I am using CSDL's inspection resources,
which are limited, this is not possible. Furthermore, CSDL conducts
inspections to increase quality and spread knowledge. It would be
detrimental to this development group, if I required the inspection of many
packages that did not provide that return on investment.


\section{Evaluation of Thesis Claims}
To evaluate this thesis, I have decomposed it into three claims based upon
the three intended benefits of PRI.

\begin{enumerate}
\item PRI can enhance the volunteer-based document selection process. 
\item PRI can identify documents that need to be inspected that are not
  typically identified by volunteering.
\item MINI documents will generate more critical defects than LINI
  documents.
\end{enumerate}


To evaluate my thesis claims, I have created three different evaluation
methodlogies. The evaluation methodologies include; a questionnaire,
working with authors to select documents for inspection, and the analysis
of a log of inspection and results. The methodologies do not necceasarily
corrolate one-to-one with the three thesis claims. Instead, each
methodology will provide supporting evidence for all of my thesis claims.
The following sections will detail the methodologies used to evaluate my
thesis statement.


\subsection{Evaluation 1 - Questionnaire}
The first evaluation methodology that will be used is a quantitative
questionnaire. The goal of the questionnaire to obtain the authors'
subjective feelings about code they have written and compare their feelings 
with the PRI MINI and LINI determination. 

In this questionnaire I will ask the developers of Hackystat to provide a
numerical ranking, based on their subjective feelings, of what packages
they would volunteer for inspection. With these results I will be able to
compare the developers' subjective rankings against the PRI ranking In
addition, I will present each developer with the results of the hackyPRI
analysis, which provides the PRI determination of MINI and LINI and its
ranking. Next, I will ask the developers to re-rank the packages based on
the new information. Appendix \ref{appendix:questionnaire} contains the
questionnaire that will be used in this evaluation. To conduct this
evaluation, I will provide each developer with a list of Hackystat packages
that they are currently working on. This will be determined by assessing
the developers' active time and commits to a particular package. 

This evaluation will indicate whether PRI is really needed. The findings
could indicate that developers can correctly distinguish, using their own
subjective reasoning, what packages need to be inspected. There are three
possible results from this evaluation. First, I may find that developers
automatically have a sense of what code is MINI and what code is LINI. This
would indicate that PRI provides little added value.  Second, developers
have no idea what code needs to be inspected. The third possible result
represents a middle ground between the two previous results, sometimes the
developers are correct and sometimes they are wrong.  The last two results
will indicate that PRI provides some benefit.


\subsection{Evaluation 2 - Inspections}
The second evaluation methodology that will be used is the selection of
packages for inspection and the actual inspection of the package. The goal
of this methodology is to evaluate the effectiveness of the MINI and LINI
determinations and PRI's ability to help the selection process. 

This evaluation methodology is decomposed into thre parts. First, working
with the author of a package to select packages for inspection. Second, the
inspection of the selected package. Third, the recordation of the results
of the inspection. The following sections detail the specific steps
required to acheieve the two parts.

\subsubsection{Part 1 - Package Selection}
In this part of the evaluation methodology I will work closely with the
various authors who contribute to the Hackystat project to select a package
for inspection. To accomplish this, I will create an inspection weekly
schedule. Each week a different Hackystat developer will be required to
work closely with me to select one package for inspection. This selection
process will have the following steps.

\begin{enumerate} 
\item Explain to the developer that the goal of this calboration is to find
  the document that is more in need of inspection. Using PRI is not
  required.
\item Ask the developer if they have any packages they would like to be
  inspected. If so, record the package name and the package's MINI or LINI
  determination and skip to step 6. If not, continue to the next step.
\item Present developer with a list of PRI MINI packages that he/she has
  authored. Work with author to select a package from this listing. If a
  document is selected, then move to step 6. If not, continue to the next
  step.
\item Present develop with a list of PRI LINI packages that he/she has
  authored. Work with author to select a pacakge from this listing. If a
  document is selected, then move to step 6. If not, contiune to the next
  step. 
\item If we have reached this step, the it can be determined that the
  author does believe he/she has authored any packages that are more in
  need of inspection. Therefore, I will select a document from the PRI MINI 
  listing. According to the author this package should not generate any
  crtical issues. However, according to PRI this package should generate
  critical issues. The results will be recorded.
\item Once a document has been selected, the author is required to send a
  request for inspection to the inspection participants (generally all
  present CSDL members). (Part 2 of this evaluation methodology).
\item Inspect the package (Part 2 of this evaluation methodology).
\item Record results (Part 2 of this evaluation methodology).
\end{enumerate}

This process was designed to ``blind'' the method used in selecting the
package. The inspection participants, which includes all CSDL members
exluding myself and the author of the package,  will not know how the
package was selected. This ``Blinding'' of the selection method was created 
to ensure that the participants will not conciously or unconsiously
persuade the results of the inspection. 

\subsubsection{Part 2 - Inspection Request and Inspection}
This part of the evaluation methodology requires little change from CSDL's
orginial inspection process definied in the Hacksytat Software Review
Guidelines \newline(http://hackystat.org/hackyDevSite/doc/Review.html). 

After a package has been selected in Part 1, the author is required to send 
an email request for inspection. Again, this email will ``blind'' the
selection method from the participants. It will simply state that the
author request the inspection of a particular package. 

\subsubsection{Part 3 - Record Results}




There are two possible results of this evaluation. First, the packages that
were selected were correctly categorized by PRI. This finding will support
my claim. Second, the packages that were selected did not reflect the PRI
weighting function.



\subsection{Evaluation 3 - Collection log}
During the evaluations of the previous two claims, CSDL will have conducted
at least 12 inspections.  In addition, I have and will collect information
on past and future inspections on Hackystat packages. In total, I believe I
will have data on 20 inspections and information on the PRI weighting
functions and rankings..

Currently, Hackystat and its extensions are comprised of 167 packages. As I
previously stated, an accurate and thorough evaluation of PRI requires the
inspection of all packages within the PRI rankings. However, because of
CSDL's limited resources this is not possible. At best this will take 3
hours per inspection, totaling 501 hours of inspection. This is
unrealistic.  Therefore, my proposed evaluation will investigate a small
percentage of the system, 20 of the 167 packages, in hopes that this
cross-section will provide adequate and acceptable results.

To evaluate this claim, I will monitor the validity of the PRI weighting
function, adjusting the calibration as necessary, throughout each
inspection. To accomplish this, I will collect specific pieces of
information when conducting inspections. The following is a specific list
of the information collected:

\begin{itemize}
\item Inspection date
\item Hackystat module, package, and inspection ID
\item PRI determination (MINI or LINI)
\item PRI measures and values
\item Subjective discussion of the validity of the PRI weighting function
  before the inspection
\item Number of issues generated and the categorization of these issues
  according to severity
\item Retrospective discussion after the inspection was conducted to
  indicate possible areas of improvement. 
\end{itemize}

This information will help me keep track of the progress of the inspections
and the validity of the PRI weighting function. See Appendix
\ref{appendix:log} for a copy of the full log. As I previously stated, the
calibration of the PRI weighting function is an ongoing and evolving
process.  This information will help keep track of that evolution.  The end
goal of this evaluation is to create a best practices recommendation of the
types of process and product measures and their calibration that will
provide the best PRI results for different projects.

\section{Evaluation Timeline}
The following timeline  provides a timeline for the evaluation of this thesis:
\begin{table}[htbp]
  \begin{center}
    \label{tab:eval-timeline}
    \caption{Evaluation Timeline}
    \begin{tabular}{|l|l|l|} \hline
      {\bf Timeline} & {\bf Evaluation Activity} \\ \hline
February 9, 2005 & Pilot trial of the developer workspace rankings \\ \hline
February 16, 2005 & Request developer workspace rankings \\ \hline
February 16, 2005 & Process developer responses and create a plan of what
will be inspected \\ \hline
February 23, 2005 & Start 4 weeks of inspection, inspecting 2 packages a
week \\ \hline
March 30, 2005 & Hand pick 2 packages to inspect that was not
volunteered \\ \hline
March April 6, 2005 & Finished analyzing the results.  \\ \hline
    \end{tabular}
  \end{center}
\end{table}


\section{Initial Results of Evaluation}
\label{sec:intialresults}
The use of PRI to provide the determination of MINI and LINI has been
promising. The initial implementation of the system has proven that it is
technically possible to do what I have envisioned. In addition, I have
already recommended the inspection of a few package that were ``more in
need of inspection'' and the defects and issues identified have confirmed
that the PRI ranking was correct. See the inspection log
(\ref{appendix:log} for a detailed description of the inspection results.

I will continue to discover new measures to add to the PRI weighting
function, fine tune the numerical weights associated with the measures, and
continue to recommend inspections.















