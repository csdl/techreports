@inproceedings( Fish90Videowindow, 
  author =	{Robert S. Fish
		and Robert E. Kraut
		and Barbara L. Chalfonte}, 
  title =	{The Videowindow System in Informal Communications}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{1-11}, 
  annote =	{N/A} )

@inproceedings( Ishii90Teamworkstation, 
  author =	{Hiroshi Ishii}, 
  title =	{Teamworkstation: Towards a Seamless Shared Workspace}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{13-26}, 
  annote =	{
This paper introduces TeamWorkStation (TWS), a new desktop real-time shared
workspace characterized by reduced cognitive seams.  TWS integrates two
existing kinds of individual workspaces, computers and desktops, to create a
virtual shared workspace.  The key ideas are the overlay of individual
workspace images in a virtual shared workspace and the creation of a shared
drawing surface.  Because each co-worker can continue to use his/her favorite
application programs or manual tools in the virtual shared workspace, the
cognitive discontinuity (seam) between the individual and shared workspaces is
greatly reduced, and users can shuttle smoothly between these two workspaces.
   This paper discusses where the seams exist in the current CSCW environment
to clarify the issue of shared workspace design.  The new technique of fusing
individual workspaces is introduced.  The application of TWS to the remote
teaching of calligraphy is presented to show its potential.  The prototype
system is described and compared with other comparable approaches.} )

@inproceedings( Watabe90Distributed, 
  author =	{Kazuo Watabe
		and Shiro Sakata
		and Kazutoshi Maeno
		and Hideyuki Fukuoka
		and Toyoko Ohmori}, 
  title =	{Distributed Multiparty Desktop Conferencing System: MERMAID}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{27-38}, 
  annote =	{
This describes a distributed multiparty desktop conferencing system
(MERMAID) and presents its preliminary brief evaluation, obtained as a result
of daily use.  MERMAID, which is designed based on group collaboration system
architecture, provides an environment for widely distributed participants,
seated at their desks, to hold real-time conferences by interchanging
information through video, voice, and multimedia documents.  This system is
implemented by using narrow-band ISDN, high-speed data network, and UNIX-based
EWSs with electronic writing pads, image scanners, video cameras,
microphone-installed loudspeakers, etc.  The system provides participants with
the means for sharing information in such multimedia forms as video images,
voice, text, graphics, still images, and handdrawn figures.} )

@inproceedings( Austin90Determinants, 
  author =	{Laurel C. Austin
		and Jeffrey K. Liker
		and Poppy L. McLeod}, 
  title =	{Determinants and Patterns of Control Over Technology in a
Computerized Meeting Room}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{39-51}, 
  annote =	{
Groups completed a prioritization task in a "low structure" computerized
meeting room.  All group members had equal access to a public screen used to
complete the task.  How groups distributed control of the technology, the
determinants of which group members took control, and the consequences of
control were studied.  Groups adopted either a dedicated scribe strategy, where
one group member controls the public screen throughout the session, or a
non-dedicated scribe strategy, where more than one member takes control of the
screen during the session.  Proficiency with the computer interface and social
influence within a group are factors that predict whether a given member will
take control of the technology.  Dedicated scribe groups scored better on the
task but reported a smaller increase in satisfaction after working in the room
than non-dedicated scribe groups.} )

@inproceedings( Losada90Collaborative, 
  author =	{Marcial Losada
		and Pedro Sanchez
		and Elizabeth E. Noble}, 
  title =	{
Collaborative Technology and Group Process Feedback: Their Impact
on Interactive Sequences in Meetings}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{53-64}, 
  annote =	{
We analyzed group collaborative behavior by detecting patterns of
interactive sequences in meetings using time series analysis.  This is in
contrast to previous work in which frequency counts of interactions were
analyzed.  Researchers have reported a decrease of these interaction
frequencies associated with the use of computer-supported collaborative
technology [Appl86, McGu87, Sieg86, Wats88].  We found that if group process
feedback is given to people participating in a computer-supported collaborative
technology meeting, the number of socio-emotional interactive sequences
increases significantly above the expected level determined by log-linear
analysis.  In contrast, when using collaborative computer technology alone (no
feedback), there is a substantial reduction in the number of socio-emotional
interactive sequences below the expected level.  These findings have
implications for the efficient use of computer technology in terms of
maximizing its collaborative potential.} )

@inproceedings( Galegher90Computer, 
  author =	{Jolene Galegher
		and Robert E. Kraut}, 
  title =	{
Computer-Mediated Communication for Intellectual Teamwork: a Field
Experiment in Group Writing}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{65-78}, 
  annote =	{N/A} )

@inproceedings( Lee90Sibyl, 
  author =	{Jintae Lee}, 
  title =	{Sibyl: a Tool for Managing Group Decision Rationale}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{79-92}, 
  annote =	{
We describe SIBYL, a system that supports group decision making by
representing and managing the qualitative aspects of decision making processes:
such as the alternatives, the goals to be satisfied, and the arguments
evaluating the alternatives with respect to these goals.  We use an example
session with SIBYL to illustrate the language, called DRL, that SIBYL uses for
representing these qualitative aspects, and the set of services that SIBYL
provides using this language.  We also compare SIBYL to other systems with
similar objectives and discuss the additional benefits that SIBYL provides.  In
particular, we compare SIBYL to gIBIS, a well-known "tool for exploratory
policy discussion", and claim that SIBYL is mainly a knowledge-based system
which uses a semi-formal representation, whereas gIBIS is mainly a hypertext
system with semantic types.  We conclude with a design heuristic, drawn from
our experience with SIBYL, for systems whose goal includes eliciting knowledge
from people.} )

@inproceedings( Shepherd90Strudel, 
  author =	{Allan Shepherd
		and Niels Mayer
		and Allan Kuchinsky}, 
  title =	{Strudel - an Extensible Electronic Conversation Toolkit}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{93-104}, 
  annote =	{
This paper describes the conceptual model of Strudel, a toolkit of generic
components for conversation and action management.  To empower work groups to
more effectively conduct their computer-based communication, coordination, and
information sharing activities, Strudel packages within a simple model of task
and action the semi-structured message, active message and conversation
management paradigms.  To facilitate acceptance and use within varying work
cultures, we define this model in terms of a set of extensible components,
which are implemented as a prototype software toolkit that is efficient,
portable, customizable, and extensible.  Issues considered briefly in this
paper include threading in conversations that are converging or multi-party,
and interoperability between active message systems.} )

@inproceedings( Yakemovic90Report, 
  author =	{K. C. Burgess Yakemovic
		and E. Jeffrey Conklin}, 
  title =	{
Report on a Development Project Use of an Issue-Based Information System}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{105-118}, 
  annote =	{
It has long been recognized that certain kinds of vital information --
usually informal and unstructured, often having to do with why certain actions
are taken -- are usually lost in large projects.  One explanation may be that
this kind of information, while important, is too unstructured to be readily
captured and retrieved.  We report on a field study in which a simple
structuring method (IBIS, for Issue-Based Information System) was used over an
extended period of time to record and allow retrieval of a significant quantity
of precisely this kind of information, using very simple technology.  We draw
some implications for hypertext and groupware, and for the prospect of
supporting the design process with technology.} )

@inproceedings( Benson90Social, 
  author =	{Ian Benson
		and Claudio Ciborra
		and Steven Proffitt}, 
  title =	{
Some Social and Economic Consequences of Groupware for Flight Crew}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{119-129}, 
  annote =	{N/A} )

@inproceedings( Hart90Computer, 
  author =	{Paul Hart
		and Deborah Estrin}, 
  title =	{
Computer Integration: a Co-Requirement for Effective Inter-Organization
Computer Network Implementation}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{131-142}, 
  annote =	{
Inter-organization computer networks (IONs) provide significant
opportunities for improving coordination between firms engaged in mutually
dependent activities.  This research paper focuses on how IONs affect
information processing requirements, and production and transaction costs when
they interconnect firms with internally integrated computer systems and when
they are used only as substitutes for conventional media.  We conclude that
significant improvements in inter-organization coordination result when IONs
support exchanges between internally integrated firms.  However, while IONs
reduce production costs, they can simultaneously increase transaction costs
including those associated with penetration into another firm's computing
resources, and segmentation in the marketplace.} )

@inproceedings( Engelbart90Knowledge, 
  author =	{Douglas C. Engelbart}, 
  title =	{
Knowledge-Domain Interoperability and an Open Hyperdocument System}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{143-156}, 
  annote =	{N/A} )

@inproceedings( Harrison90Coordinating, 
  author =	{William H. Harrison
		and Harold Ossher
		and Peter F. Sweeney}, 
  title =	{Coordinating Concurrent Development}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{157-168}, 
  annote =	{
Development of any large system or artifact requires the coordination of
many developers.  Development activities can occur concurrently.  The goal of
coordination is to enhance, not restrict, developer productivity, while
ensuring that concurrent development activities do not clash with one another.
   This paper presents a formal model of concurrent development, in which
development consists of a collection of modification activities that change
files, and merges that combine the changes.  We define a notion of consistency
called coordination consistency that ensures that changes are not inadvertently
destroyed and that the changes of each modification activity are correctly
propagated to subsequent modification activities.  We briefly present a set of
protocols for concurrent development using a hierarchy of stores that ensure
coordination consistency.} )

@inproceedings( Brothers90Icicle, 
  author =	{L. Brothers
		and V. Sembugamoorthy
		and M. Muller}, 
  title =	{Icicle: Groupware for Code Inspection}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{169-181}, 
  annote =	{
ICICLE ("Intelligent Code Inspection Environment in a C Language
Environment") is a multifarious software system intended to augment the process
of formal code inspection.  It offers assistance in a number of activities,
including knowledge-based analysis and annotations of source code, and computer
supported cooperative discussion and finalization of inspectors' comments
during inspection meetings.  This paper reports the implementation of ICICLE
and groupware issues encountered during testing; it is directed towards an
audience interested in the implementation of groupware as well as those
concerned with usability of software systems for computer-supported cooperative
work (CSCW).} )

@inproceedings( Neuwirth90Issues, 
  author =	{Christine M. Neuwirth
		and David S. Kaufer
		and Ravinder Chandhok
		and James H. Morris}, 
  title =	{
Issues in the Design of Computer Support for Co-Authoring and Commenting}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{183-195}, 
  annote =	{
This paper reports on a project to develop a "work in preparation" editor,
or PREP editor, to study co-authoring and commenting relationships.  As part of
the project, we have identified three issues in designing computer support for
co-authoring and commenting: (1) support for social interaction among
co-authors and commenters; (2) support for cognitive aspects of co-authoring
and external commenting; and (3) support for practicality in both types of
interaction.  For each of these issues, the paper describes the approach the
PREP editor takes to address them.} )

@inproceedings( Nardi90Ethnographic, 
  author =	{Bonnie A. Nardi
		and James R. Miller}, 
  title =	{An Ethnographic Study of Distributed Problem Solving in
Spreadsheet Development}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{197-208}, 
  annote =	{
In contrast to the common view of spreadsheets as "single-user" programs, we
have found that spreadsheets offer surprisingly strong support for cooperative
development of a wide variety of applications.  Ethnographic interviews with
spreadsheet users showed that nearly all of the spreadsheets used in the work
environments studied were the result of collaborative work by people with
different levels of programming and domain expertise.  Cooperation among
spreadsheet users was spontaneous and casual; users activated existing informal
social networks to initiate collaboration.} )

@inproceedings( Mackay90Patterns, 
  author =	{Wendy E. Mackay}, 
  title =	{Patterns of Sharing Customizable Software}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{209-221}, 
  annote =	{
The act of customizing software is generally viewed as a solitary activity
that allows users to express individual preferences.  In this study, users at
two different research sites, working with two different kinds of customizable
software, were found to actively share their customization files with each
other.  This sharing allowed the members of each organization to establish and
perpetuate informally-defined norms of behavior.
   A small percentage of people within the organization were responsible for
most of the sharing.  One group of these were highly-skilled software
engineers, who were usually the first to try new software.  They used
customization as a way to experiment with and learn about the software and made
their files available to others through various broadcast mechanisms.  This
group did not try to determine whether their customizations were useful to
other users.  The second group were less skilled technically but much more
interested in interpreting the needs of their colleagues and creating
customization files tailored to those needs.  They acted as translators between
the highly technical group and the rest of the organization.
   The spontaneous sharing of customization files within an organization has
implications for both organizations and for software designers.  Managers
should 1) recognize and support the role of translators, 2) recognize that not
all sharing is beneficial, and 3) provide opportunities for the exchange of
customization files and innovations among members of the organization.
Software designers should 1) provide tools that allow users to evaluate the
effectiveness of their customizations through reflective software, 2) provide
well-tested examples of customization files with the first release of the
software, 3) explicitly support sharing of customizations, and 4) provide tools
to support the activities of translators.} )

@inproceedings( Clement90Cooperative, 
  author =	{Andrew Clement}, 
  title =	{Cooperative Support for Computer Work: a Social Perspective
on the Empowering of End Users}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{223-236}, 
  annote =	{N/A} )

@inproceedings( Greif90Commercial, 
  author =	{Irene Greif
		and Esther Dyson
		and Barry James Folsom
		and John Landry
		and Sheldon Laube}, 
  title =	{
Commercial CSCW Or How to Get Group Software Out of the Labs and Into Real
Use}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{237-238}, 
  annote =	{
This panel will examine the opportunities and the challenges for
commercialization of group software in the 90's.
   A number of new group software products -- usually labelled "groupware" --
have shipped since we last met at CSCW 88.  We can now look back on the
successes and failures of these products and assess the industry's current
understanding of the "groupware" product category.  We'll also look at the
prospects of groupware moving out of the limelight as group support is
integrated into conventional products over the coming years.} )

@inproceedings( Kiesler90Computer, 
  author =	{Sara Kiesler
		and Robert Heinmiller
		and James Ostell
		and Sharon Traweek
		and Keith Uncapher}, 
  title =	{Computer-Supported Cooperative Work in Science}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{239-240}, 
  annote =	{
This panel will discuss cooperative work and communication in science.
Although scientific work varies across disciplines, it shares some
characteristics: communication is its principle product; ongoing interaction
and cooperation is necessary (and in some disciplines such as high energy
experimental physics, group research dominates); computing technology is
pervasive or becoming pervasive.  Hence as compared with some domains such as
assembly-line manufacturing or high schools, CSCW technology seems particularly
appropriate.
   The CSCW community has not paid much attention to the scientific enterprise
and to scientific communities as cooperative work domains.  Whereas there seem
to be many opportunities for CSCW applications in science ranging from shared
data bases to "committeeware," there are also reasons why CSCW may not develop
as envisioned.  Both technical and cultural aspects of science pose barriers to
more "cooperative work." For instance, norms against informal publication of
results and proprietary attitudes about discoveries complicate assumptions that
more information sharing is better for science and scientists.  The purposes of
this panel are to highlight the major opportunities and problems of CSCW for
science, and to discuss how social system and technical system designs might
address these opportunities and problems.} )

@inproceedings( Wulff90Animating, 
  author =	{Wendie Wulff
		and Shelley Evenson
		and John Rheinfrank}, 
  title =	{Animating Interfaces}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{241-254}, 
  annote =	{
We briefly mention some requirements for prototyping tools in user interface
and system design.  Then, we introduce Animating Interfaces as one
collaborative, iterative approach to the rapid conceptual prototyping and
simulation of interfaces and associated functionalities.  We give a description
of the Animating Interfaces process, followed by an illustrated example of the
technique.  In the example, we use the technique to conceptually design
interface conventions and system functionalities for part of a product intended
to support collaborative multi-media information use and management.  We finish
by commenting on the role of the Animating Interfaces technique in the
following: uncovering user task knowledge and designer system knowledge;
incorporating work and work-context information into the design process;
simulating interfaces and system functionalities; and provoking reflection,
evaluation and innovation.} )

@inproceedings( Hellman90User, 
  author =	{Riitta Hellman}, 
  title =	{
User Support: Illustrating Computer Use in Collaborative Work Contexts}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{255-267}, 
  annote =	{
It is relevant for the users of a computerized information system to
perceive the organizational context of collaborative work and corresponding
information processes.  It is possible to reflect these in a context support
system.  In order to demonstrate this, a theoretical framework for the
realization of such support systems is presented.  A context support system can
be built around four types of module: 1) images of information media, 2)
descriptions of jobs composed of task lattices, 3) illustrations of physical
work units, and 4) visualizations of databases.  The general module structures
as well as some examples are presented.  Both the framework and the examples
are built around the idea of hypermedia as a potential environment of
implementation.} )

@inproceedings( Grudin90Interface, 
  author =	{Jonathan Grudin}, 
  title =	{Interface}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{269-278}, 
  keywords =	{Users, User Interfaces, Designers}, 
  annote =	{N/A} )

@inproceedings( Beard90Visual, 
  author =	{David Beard
		and Murugappan Palaniappan
		and Alan Humm
		and David Banks
		and Anil Nair
		and Yen-Ping Shan}, 
  title =	{A Visual Calendar for Scheduling Group Meetings}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{279-290}, 
  annote =	{
Scheduling group meetings requires access to participants' calendars,
typically located in scattered pockets or desks.  Placing participants'
calendars on-line and using a rule-based scheduler to find a time slot would
alleviate the problem to some extent, but it often is difficult to trust the
results, because correct scheduling rules are elusive, varying with the
participants and the agenda of a particular meeting.  What's needed is a
comprehensive scheduling system that summarizes the available information for
quick, flexible, and reliable scheduling.  We have developed a prototype of a
priority-based, graphical scheduling system called Visual Scheduler (VS).
   A controlled experiment comparing automatic scheduling with VS to manual
scheduling demonstrated the former to be faster and less error prone.  A field
study conducted over six weeks at the UNC-CH Computer Science Department showed
VS to be a generally useful system and provided valuable feedback on ways to
enhance the functionality of the system to increase its value as a groupwork
tool.  In particular, users found priority-based time-slots and access to
scheduling decision reasoning advantageous.  VS has been in use by more than 75
faculty, staff, and graduate students since Fall 1987.} )

@inproceedings( Bullen90Learning, 
  author =	{Christine V. Bullen
		and John L. Bennett}, 
  title =	{Learning From User Experience with Groupware}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{291-302}, 
  annote =	{N/A} )

@inproceedings( Reder90Temporal, 
  author =	{Stephen Reder
		and Robert G. Schwab}, 
  title =	{The Temporal Structure of Cooperative Activity}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{303-316}, 
  annote =	{N/A} )

@inproceedings( Patterson90Rendezvous, 
  author =	{John F. Patterson
		and Ralph D. Hill
		and Steven L. Rohall
		and W. Scott Meeks}, 
  title =	{
Rendezvous: an Architecture for Synchronous Multi-User Applications}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{317-328}, 
  annote =	{
Rendezvous is an architecture for creating synchronous multi-user
applications.  It consists of two parts: a run-time architecture for managing
the multi-user session and a start-up architecture for managing the network
connectivity.  The run-time architecture is based on a User Interface
Management System called MEL, which is a language extension to Common Lisp
providing support for graphics operations, object-oriented programming, and
constraints.  Constraints are used to manage three dimensions of sharing:
sharing of underlying information, sharing of views, and sharing of access.
The start-up architecture decouples invoking and joining an application so that
not all users need be known when the application is started.  At present, the
run-time architecture is completed and running test applications.  As a first
test of the complete Rendezvous architecture, we will implement a multi-user
card game by the end of the summer.} )

@inproceedings( Crowley90Mmconf, 
  author =	{Terrence Crowley
		and Paul Milazzo
		and Ellie Baker
		and Harry Forsdick
		and Raymond Tomlinson}, 
  title =	{
Mmconf: an Infrastructure for Building Shared Multimedia Applications}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{329-342}, 
  annote =	{N/A} )

@inproceedings( Knister90Distedit, 
  author =	{Michael J. Knister
		and Atul Prakash}, 
  title =	{
Distedit: a Distributed Toolkit for Supporting Multiple Group Editors}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{343-355}, 
  keywords =	{
Groupware, Collaboration technology, Group editors, Distributed systems}, 
  annote =	{
The purpose of our project is to provide toolkits for building applications
that support collaboration between people in distributed environments.  In this
paper, we describe one such toolkit, called DistEdit, that can be used to build
interactive group editors for distributed environments.  This toolkit has the
ability to support different editors simultaneously and provides a high degree
of fault-tolerance against machine crashes.  To evaluate the toolkit, we
modified two editors to make use of the toolkit.  The resulting editors allow
users to take turns at making changes while other users observe the changes as
they occur.  We give an evaluation of the toolkit based on the development and
use of these editors.} )

@inproceedings( Malone90What, 
  author =	{Thomas W. Malone
		and Kevin Crowston}, 
  title =	{
What is Coordination Theory and How Can It Help Design Cooperative
Work Systems?}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{357-370}, 
  annote =	{N/A} )

@inproceedings( Markus90Why, 
  author =	{M. Lynne Markus
		and Terry Connolly}, 
  title =	{Why CSCW Applications Fail: Problems in the Adoption of
Interdependent Work Tools}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{371-380}, 
  annote =	{N/A} )

@inproceedings( Moran90Workaday, 
  author =	{Thomas P. Moran
		and R. J. Anderson}, 
  title =	{The Workaday World As a Paradigm for CSCW Design}, 
  year =	1990, 
  booktitle =	{
Proceedings of ACM CSCW'90 Conference on Computer-Supported Cooperative Work}, 
  pages =	{381-393}, 
  annote =	{N/A} )
