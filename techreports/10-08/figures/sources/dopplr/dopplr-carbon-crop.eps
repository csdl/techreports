%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: dopplr-carbon-crop.pdf
%%Creator: Adobe Acrobat 9.0.0
%%For: rbrewer
%%CreationDate: 1/26/09, 11:08 AM
%%BoundingBox: 0 0 580 564
%%HiResBoundingBox: 0 0 579.0911 563.0052
%%CropBox: 0 0 579.0911 563.0052
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 1200 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c041 52.342996, 2008/05/07-21:37:19        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
   dc:format="application/pdf"
   xmp:CreateDate="2009-01-26T20:43:50Z"
   xmp:CreatorTool="Safari"
   xmp:ModifyDate="2009-01-26T11:07:57-10:00"
   xmp:MetadataDate="2009-01-26T11:07:57-10:00"
   pdf:Keywords=""
   pdf:Producer="Mac OS X 10.5.6 Quartz PDFContext"
   xmpMM:DocumentID="uuid:7d516210-3092-cf4c-9b05-1714419c8f5d"
   xmpMM:InstanceID="uuid:37b4fb91-5e43-2948-9c5c-530a501be84e">
   <dc:creator>
    <rdf:Seq>
     <rdf:li>Robert Brewer</rdf:li>
    </rdf:Seq>
   </dc:creator>
   <dc:description>
    <rdf:Alt>
     <rdf:li xml:lang="x-default"/>
    </rdf:Alt>
   </dc:description>
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">DOPPLR_ Robert Brewer</rdf:li>
    </rdf:Alt>
   </dc:title>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
/0 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 31 
/Lookup <~
>t[ll#R(A3WgK#c&e,<NR=g)JC0+L=*#04h2(:!T68UP"G%+qd:Hq)EToFt'K5GH<-lsK2Nd,ajZ([bQ
khc@?!3+cS@fWt<0GU_jXoLWc)#r.iz^TFEr^TFEr^TFEr^TFEr^TFEr^TFEr^TFEr^TFEr^TFEr~>
>>
/CSD add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -563.005 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
1.52588e-05 0 mo
1.52588e-05 563.005 li
579.091 563.005 li
579.091 0 li
cp
clp
[1 0 0 1 -16.817 0 ]ct
gsave
18 -13.5694 mo
594 -13.5694 li
594 -37.5694 li
18 -37.5694 li
18 -13.5694 li
clp
false sop
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: KVXQMX+LucidaGrande Initial
ct_T42Dict begin
0.004 -0.203 0.84 0.781
 256 array 0 1 255 {1 index exch /.notdef put} for  /KVXQMX+LucidaGrande
Type42DictBegin
[<00010000000b000b000b000b63767420f0e8efce000000bc000006b66670
676d751410fe0000077400000d33676c796640cd4c8e000022dc00002268
68656164f245ecb1000014a800000036686865610c5602d7000014e00000
0024686d7478ad5e15c300001504000000946c6f636192729baa00001598
0000004c6d617870069e0e2b000015e4000000206e616d65c576e1c40000
1604000000257072657026e247160000162c00000caf6764697200000000
0000000000000000062b0019000005c80025000005c80025000000000000
0000000000000000043e001800000000ffdb00000000ffe800000000ffdb
0000fe75ffe8000000000000fed800000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000080000000800000004000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00c5006f000cff3bff91fff400bf00680014ff41ff98ffec000000000000
00000000000000000000000000000082ff7e00df00d200c900b400ad009b
00de00d200c500be00b900ab00e300d200c600b900ad00950062000000a4
009d0085000000aa00a10094007200ad00a100940085000000c500000000
0000000000000000000000000000012800000000000000000000000000f7
00f700970141004a00f70000000000000000000000000000000000940094
009400000000000000000000000000000000000000000000000000000000
00000000000000000000000000e6ff1a0000000000000000000000000000
0000000000deff22007c007c027502e400750075009a009400ac00a00000
00000000000000000069000000a50073007b00c501ed006201bc0066009d
00880064008f0250ffea05c9001603780016006f04a00019000000000000
00000000000000000096005800790064039cfff1062b000f0750000f02af
fff1007b00000000000000000000000000000096005800790064039cfff1
062b000f0750000f02affff1007b0000006f0073000000000000000000b9
008c010a007e00c50031004f009a00420000000000000000000000000000
0000000000000000012800f700a00063009400820082009700c600b300b3
007c007b009100000000000000000000000006440000000004a000190000
00000800043e0018000004000000000000000534000000000000ffe70000
ff780000000000c500940000fed80000000000e100760063003c002d001e
000fff1fff3bff48ff65ff79ff9dffbd00de00b900ad00a600de00d200c5
00bf00b900a900910197007c0062005c005602cc01ed0197007c006f0062
0056004a011d010d009e00940035000000000000000000000000000005c8
00250000050300000000000008000000000000000400000000000000047b
000000000000ffdb00000000ffe70000000000000000ff3b000000000000
00000192011700f700c800c300b800ad00a6009c0092008a0080007b0074
0068005a0050001e003a00000192011700f700e500d200c500b900ad008a
0080007b00740068005e0054004a000000000141003e00de00de00000000
000000000000000005d50019000005660000000000000800000000000000
0400000000000000043e001800c503c200de00000000ffe7000000000000
0000fe00000000000000000000cd00c500ad00a100940088007c0075006f
0063003100f700c600b900a0006300c500b300a10088007c0075006f0063
0056003100f700c600b900c600940082006f0063003e003200190000ff3a
ff7eff9dffce0057006f02b3012801830088008800000000000000000000
000000000000000000ac008800c501ed006201bc001800de013e00000000
0000000000000000000000000000000000000069000000a50073007b00c5
01ed006201bc0066009d00880064008f0250ffea05c9001603780016006f
04a000190000000000000000000000000000007c00ac00c5009600000000
00000000000000000085005d006500000000000000000000000000000000
000000000000000000000000080000000000000004000000000000000000
000000000000000000000000000000000000000000000000000000000000
000005ed01b0009400d200b600ac007b007b007c00000000000000000000
000000000000000000b904a000c50063007a005100410087014100de0128
0068009d0064007500d2012000de00d100b4000000000000000000000000
0000000000000000006100ac00d0006f006f036603660000000000000000
000000000000000000000000000000000000004a004a004a000000000000
000000000000000000000000000005ed00000000000008000104005c0000
04000000000000000000000000000000ffdb000000000000000000000000
000000000000000000000000003e050300d8011200ad009300d800f700ad
00b700790067050300d800920000000000000069000000a50073007b00c5
01ed006201bc0066009d00880064008f0250ffea05c9001603780016006f
04a000190082006e002a002a002a002a000040405249483c3b3a39383736
3534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918
17161514131211100f0e0d0c0b0a090807060504030201002c0118b01843
58456ab0194360b00c2344231020b00c4ef04d2fb000121b21231120332f
592d2c0118b0184358b0052bb000134bb0145058b100403859b0062b1b21
231120332f592d2c0118b01843584eb0032510f221b000124d1b2045b004
25b00425234a6164b0285258212310d61bb0032510f221b0001259592d2c
b01a435821211bb00225b0022549b00325b003254a612064b01050582121
211bb00325b0032549b0005058b0005058b8ffe238211bb0003821591bb0
005258b01e38211bb0003821595959592d2c0118b0184358b0052bb00013
4bb0145058b90000ffc03859b0062b1b21231120332f592d2c4e018a10b1
0c194344b00014b1000ce2b00015b90000fff03800b0003cb0282bb00225
10b0003c2d2c0118b0002fb00114f2b00113b001154db000122d2c0118b0
184358b0052bb00013b90000ffe038b0062b1b21231120332f592d2c0118
b018435845646a23456469b01943646060b00c2344231020b00cf02fb000
121b2121208a208a525811331b212159592d2c014bb0c85158b10b0a4323
43650a592d2c004bb0c8515800b10a0b4323430b592d2c00b00c2370b101
0c3e01b00c2370b1020c453ab10200080d2d2cb0122bb0022545b0022545
6ab0408b60b0022523442121212d2cb0132bb0022545b00225456ab8ffc0
8c60b0022523442121212d2cb000b0122b2121212d2cb000b0132b212121
2d2c014bb0c85158b00643b00743650a592d2c2069b04061b0008b20b12c
c08a8cb8100062602b0c642364615c58b00361592d2cb1000325456854b0
1c4b505a58b0032545b0032545606820b004252344b0042523441bb00325
204568208a2344b00325456860b003252344592d2cb00325204568208a23
44b003254564686560b00425b0016023442d2cb00943588721c01bb01243
588745b0112bb00d2344b00d7ae41b038a45186920b00d23448a8a8720b0
a05158b0112bb00d2344b00d7ae41b21b00d7ae4595959182d2c208a4523
456860442d2c456a422d2c01182f2d2c0118b0184358b00425b004254964
23456469b0408b6120b080626ab00225b00225618cb0194360b00c234421
8a10b00cf6211b21212121592d2c01b0184358b0022545b002254564606a
b00325456a6120b00425456a208a8b65b0042523448cb00325234421211b
20456a4420456a44592d2c012045b00055b018435a584568234569b0408b
6120b080626a208a236120b003258b65b0042523448cb00325234421211b
2121b0192b592d2c018a8a45642345646164422d2cb00425b00425b0192b
b0184358b00425b00425b00325b01b2b01b0022543b04054b0022543b000
545a58b003252045b040614459b0022543b00054b0022543b040545a58b0
04252045b04060445959212121212d2cb0032520b0072587052e23208ab0
0425b00725b0142b1021c4212d2cc02d2c4b525845441b2121592d2cb002
43583ded181bed592d2c4b505845441b2121592d2c01184b52588a2fed1b
212121592d2c4b53234b515a58b003254568b003254568b0032560545821
21211bb00225456860b0032523442121591b212121592d2cb00243583dcd
181bcd592d2c462346608a8a462320468a608a61b8ff8062232010238ab1
0c0c8a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d
2c2045b0032546524bb013515b58b0022546206861b00325b003253f2321
381b2111592d2c2045b00325465058b0022546206861b00325b003253f23
21381b2111592d2c004bb0c8515800b00743b006430b592d2c8a10ec2d2c
b00c4358211b2046b0005258b8fff0381bb0103859592d2c20b0005558b8
100063b003254564b00325456461b0005358b0021bb04061b00359254569
535845441b2121591b21b0022545b00225456164b028515845441b212159
592d2c21210c6423648bb84000622d2c21b08051580c6423648bb8200062
1bb200402f2b59b002602d2c21b0c051580c6423648bb81555621bb20080
2f2b59b002602d2c0c6423648bb84000626023212d2c184b5358b00425b0
0425496423456469b0408b6120b080626ab00225b00225618cb00c234421
8a10b00cf6211b218a11231220392f592d2cb00225b002254964b0c05458
b8fff838b008381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2cb00a2b2310203cb0172b2d2cb00225b8fff038b0282b8a102320d0
23b0102bb0054358c01b3c59201011b00012012d2c4b53234b515a58381b
2121592d2c01b0022510d023c901b00113b0001410b0013cb001162d2c01
b00013b001b0032549b0031738b001132d2c4b53234b515a5820458a6044
1b2121592d2c184b5358b00425b004254964b00325b00325496468b0408b
6120b080626ab00225b00225618cb00c234421b004251023b00cf61bb004
25b0042511122320392f59cc21212d2c0118b0184358b005254623456461
1b21b00425b004254a59b00e23442310b00eec2310b00eec2d2cb01b4358
20b0016045b000515820b0016020452068b0005558b0206044211b212121
591b20b0016020452068b0005558b8ffe06044b01c4b50582045b0206044
1b21591b21212159591b21592d2c4b53234b515a58381b2121592d2c4b54
58381b2121592d2c4b52587d1b7a592db800532c4bb800095058b101018e
59b801ff85b800441db9000900035f5e2db800542c2020456944b001602d
b800552cb800542a212db800562c2046b003254652582359208a208a4964
8a204620686164b004254620686164525823658a592f20b00053586920b0
00545821b040591b6920b000545821b0406559593a2db800572c2046b004
25465258238a592046206a6164b0042546206a61645258238a592ffd2db8
00582c4b20b0032650585158b080441bb04044591b21212045b0c05058b0
c0441b2159592db800592c2020456944b001602020457d691844b001602d
b8005a2cb800592a2db8005b2c4b20b003265358b0801bb040598a8a20b0
032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a23
5920b0032653582321b801408a8a1b8a235920b80003265358b0032545b8
018050582321b8018023211bb003254523212321591b2159442db8005c2c
4b535845441b2121592db8005d2c4bb800095058b101018e59b801ff85b8
00441db9000900035f5e2db8005e2c2020456944b001602db8005f2cb800
5e2a212db800602c2046b003254652582359208a208a49648a2046206861
64b004254620686164525823658a592f20b00053586920b000545821b040
591b6920b000545821b0406559593a2db800612c2046b00425465258238a
592046206a6164b0042546206a61645258238a592ffd2db800622c4b20b0
032650585158b080441bb04044591b21212045b0c05058b0c0441b215959
2db800632c2020456944b001602020457d691844b001602db800642cb800
632a2db800652c4b20b003265358b0801bb040598a8a20b003265358b002
2621b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b800
03265358b0032545b8014050582321b8014023211bb00325452321232159
1b2159442db800662c4b535845441b2121592db800672c4bb800095058b1
01018e59b801ff85b800441db9000900035f5e2db800682c2020456944b0
01602db800692cb800682a212db8006a2c2046b003254652582359208a20
8a49648a204620686164b004254620686164525823658a592f20b0005358
6920b000545821b040591b6920b000545821b0406559593a2db8006b2c20
46b00425465258238a592046206a6164b0042546206a61645258238a592f
fd2db8006c2c4b20b0032650585158b080441bb04044591b21212045b0c0
5058b0c0441b2159592db8006d2c2020456944b001602020457d691844b0
01602db8006e2cb8006d2a2db8006f2c4b20b003265358b0801bb040598a
8a20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a
1b8a235920b0032653582321b801408a8a1b8a235920b80003265358b003
2545b8018050582321b8018023211bb003254523212321591b2159442db8
00702c4b535845441b2121592db800712c4bb800095058b101018e59b801
ff85b800441db9000900035f5e2db800722c2020456944b001602db80073
2cb800722a212db800742c2046b003254652582359208a208a49648a2046
20686164b004254620686164525823658a592f20b00053586920b0005458
21b040591b6920b000545821b0406559593a2db800752c2046b004254652
58238a592046206a6164b0042546206a61645258238a592ffd2db800762c
4b20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b
2159592db800772c2020456944b001602020457d691844b001602db80078
2cb800772a2db800792c4b20b003265358b0801bb040598a8a20b0032653
582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b0
032653582321b801408a8a1b8a235920b80003265358b0032545b8018050
582321b8018023211bb003254523212321591b2159442db8007a2c4b5358
45441b2121592d000001000000060106017216715f0f3cf5011b08000000
0000c5a3d10600000000c5a3d106000cfe5d06bf06440000000900010000
000000000001000007bcfe5000000d1ef776f7430d210001000000000000
000000000000000000250600010002880000028800c8043200c1050f0082
050f0134050f00aa050f00d0050f0069050f0089050f009c028800e10585
0011049a00bf05fe00bf044400bf06e400bf06370068046c00bf050f00bf
046b0067050900c50419006f0509006f0475006f02f1005004fd006f04f7
00c5025000c5077800c504f700c504ea006f050900c5034600c502fe0045
04240012062a000c000000200020003a007400f2013401cc028802e40392
0438047604e005900612063206d6078c07fe087a093209da0a660b0e0bae
0bf40cb00d140d2e0dcc0e260eb80f4a0f900fe8104e1134000100000025
00770003004f0007000100100030007b000005e00d330003000100000001
00120001000000000006001300005055594c4c4c2b4c7563696461477261
6e6465000000b800712bb800672bb8005d2bb800532b410e000002460010
02460002007f02440001023f023c0001002b023e023cb2012befbb023d00
01023d023cb2141f00bd023c0010023c000201870188b21a1f40b80189b3
10163900410e0188001001880002018301850002002b018401850002002b
01860185b2022b80bb017f000100df017c406601dfe016171cd4d516171c
7b7c161b0f7b1f7b2f7b037b7c19d1d216171c767716171c6d7016171c6c
6f16171c6b6e161b5f6e7f6b026b6e7f721a747514151c676a14151c6669
14151c6568141b8f65a065d06503656885711a1973167a43192179431921
02b90352034ab2022b10bd034600500346000200400339b20b0e39b9ffc0
0338b20e0e39b9ffc00338b3090c3950410b032d0001033003310003002b
02f402f30008002b02e3b2be022bb802dcb3be641f40b802dbb3313a3940
b802dbb2232739b9ffc002dbb2141439b9ffc002d9b2333939b9ffc002d9
b22a2e39b9ffc002d9b2212339b9ffc002d9b2171939b9ffc002d9b20e11
39b9ffc002d0b2111139b902800278b2022b10412b027400500274000200
10025d0050025d0002000b024c001b024c006b024c0003000b024b001b02
4b0002023a02040016001f023802040012001f023202310002002b023002
310002002b022f0231001e001f022e0231b21e1f20b80231b2121639b901
f701e3b2032b0a412001f4000101ef01ee0002002b01ed01ee0002002b01
ec01ee0002002b01eb01ee0002002b01e801e70003002b01e601e7000400
2b01e501e70002002bffca01e3b30b1139b9411d01e70001007601e70086
01e70002019401920002002b019301920002002b019201900006002b0191
01900007002b018f01900002002b018e0190b2022bbfbf01900001007001
900080019000020157b292042bb80153b291042bb8014fb297042bb80136
b37f032b40b80139b21218394109012401250003002b011001110003002b
0104403bfc022b10f850f80240e61a1a399a9b032b9c9b042b9b970a2b93
92042b9192062b9297042b9597042b9897022b9697032ba097019f97af97
bf9703bc034803490004002b0349b285022bb9ffc00343b31011391fbe03
44000100e00344000103350334b2032b2041120333003003330040033300
5003330004033303140003002b033203140003002b032f0314b2032b2fbf
03140001000002f3002002f3000202f0b2bd062bb802e2b2bf082bb9ffc0
02e1b2172839b9ffc002e1b20e1139b802e0b2870a2bb802dfb3bf042b40
b802d7b323253940b802d7b2151639b9ffc002d2b2101139410d02c602c5
0006002b02c202c00006002b02c102c00006002b028cb285022bbc027602
770004002b0277b285022bb9ffc00271b31011391fbe0272000100e00272
000100400260b2151639b9ffc00260b20a0b39b9ffc0025fb2171839b9ff
c0025eb2242939b9ffc0025ab31011391f4114025b000100e0025b000100
0f024a0001001602490026024900020009022d0019022d0002ffc0022bb2
111539b9ffc00229b30d113920b80223b2121639bd022202200002002b02
210220b2042bc9411402200001021e02200003002b021f02200002002b01
f601cf0003002b01e001b50020002101df01b5b2262120b801dfb21e2139
411a01dd01dc0002002b01db01dc0002002b01da01dc0002002b01d901dc
0002002b01d801d70003002b01d701d60002002b01d601d4b2022bb0bf01
d6000101d501d40002002b01d301d4b2022b69410b01d2000100b901d200
0101d201d40002002b01d101d4b2022b20b801d0b2090c39b9ffca01cfb3
0b11392bbf01a300a401a300b401a30003ffe001a6b2131539410d018d01
8c0003002b018b018c0003002b018a018c0002002b0156b286022bb80155
b280032bb80154b286052bb80152b287052bb80151b288052bb80150b288
032bb8014eb285032bb8014cb285022bb80138b287022bb80131b2bf032b
b80122b285022bb8010e400b85022bfafb042bfb85022bb8ffc0400af510
11391ff601e0f601b8ffc04009b1151c3940e51a1a39b8ffc0402eaf0d0f
3900b40140b450b460b470b480b4c0b4d0b4e0b4f0b409b4af641fe8e704
2b898a072b8a8b062b8c8b062bb8ffc0b78e3032398e8d032bb8ffc04014
8d1e23398d8b022b8b85082b8281042b8180032bb8ffc0b3804a4d39b8ff
c0b3803f4339b8ffc0b380343939b8ffc0b380282e39b8ffc0400c801d23
39807e022b7f7e062bb8ffc0400c7d4549397d7e062b7e85082bb8ffc040
20881e23398887022b8785082b8685062b83840a2b8485062b7085808502
bf8501410a03530354000e03500351000e034e034f000e034eb203641f41
55034c034d000f031b031c031d000c030f03100311000c030c030d030e00
0c0327030d0329000d0321031c0323000d031e03100320000d0327003c03
21003c031e003c031b003c030f003c030c003c02ad02ae02af000c02a102
a202a3000c029e029f02a0000c02b9029f02bb000d02b302ae02b5000d02
b002a202b2000d02b9003c02b3003c02b0003c02ad003c02a1003c029e00
3c02810282000e027e027f000e027c027d000e027cb203641f4175027a02
7b000f021002110212000c020d020e020f000c020102020203000c01fe01
ff0200000c000b0211009b02110002000f021000500210009f021000bf02
1000df02100005001f020d003f020d007f020d0003001f01fe0001021901
ff021b000d0213020e0215000d0219003c0213003c0210003c020d003c02
06003c0201003c01fe003c01bd01be01bf000c01b101b201b3000c01ae01
af01b0000c01c901af01cb000d01c301be01c5000d01c001b201c2000d01
c9003c01c3003c01c0003c01bd003c01b1003c01ae003c016d016e016f00
0c016101620163000c015e015f0160000c01610166b2171f1f4142016600
3f0166007f016600030179015f017b000d0173016e0175000d0170016201
72000d0179003c0173003c0170003c016d003c0166003c0161003c015e00
3c012c012d000f01260127000f01280129000e012a012b000e0118011900
0f01120113000f01140115000e01160117000e01050106000e0102010300
0e01000101000e010040a803641ffeff0f1b37151836151535151234150f
33150c3215093115063015032f15002e1526270e28270f2a2b0e2c2b0f22
230e24230f1e1f0e201f0f0f10110c090a0b0c0607080c0304050c000102
0c000340131a230003131f06031c1f1f0f3f0f7f0f032003011f034f03bf
03ff03041b011d0d18071a0d1510170d1204140d901b012c3c2a3c283c26
3c243c223c203c1e3c1b3c183c153c123c0f3c093c063c033c003c503301
b0124b004b5442b013014b004b5342b0332b4bb8032052b0322b4bb00950
5b58b101018e59b0332bb00288b8010054b00488b8020054b012435a5b58
b80119b101018e851bb900010100b04b60858d59b1020042b00188b02353
58b00188b0405158b02088b810005458b1020142595959b0374b5058b102
0042592b1db0644b5358b0801d59b0324b5358b0901d59004bb03a51b01b
23422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b7374732b2b2b
2b2b2b2b2b2b2b2b2b2b2bb1282645b02a4561b02c4560442b2b2b2b2b2b
2b2b2b2b2b2b002b2b2bb8010045b0fe4561b8010223442b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b737373732b2b2b2b2b2b2bb8027c45b8027a4561b8
027e23442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2bb8034e45b8034c4561b8035023442b2b7473012b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73742b2b2b0173742b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b74752b2b732b2b2b
2b2b2b2b2b2b2b2b2b2b752b2b2b2b2b73737473742b2b2b2b2b73742b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b73732b2b2b732b73742b2b2b0073742b
2b2b2b2b2b2b2b2b2b00732b2b2b2b2b2b2b2b73742b2b2b2b2b2b73742b
2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b737373732b2b2b2b2b2b2b2b2b2b
2b2b2b2b732b2b2b732b0143581b592b2bb018b0234b53422b2b732b2b2b
2b2b732b2b2b2b2b2b732b2b2b01b8017c20456a44b8017d20456a44b801
7e20456a44b8017f20456a44b8018020456a44b8018120456a44b8018220
456a44b8018320456a44b8018420456a44b8018520456a44b8018620456a
44b8018720456a44b8018820456a44b8018920456a4473732b2b2b732b2b
b8023b20456a44b8023c20456a44b8023d20456a44b8023e20456a44b802
3f20456a44b8024020456a44b8024120456a44b8024220456a44b8024320
456a44b8024420456a44b8024520456a44b8024620456a44b8024720456a
44732b732b2b7373b109322b4bb05052424bb008524bb008505bb01a2342
4bb0c8524bb036505bb00c23420000>
[8809 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> KVXQMX+LucidaGrande AddT42Char 
1 116 3 <000100c1fed8037105c800030055402b7903011602260286020346035603
02039f01010f001f00020c0601030203bf000114000100200103021000b8
fff0b705026802040065022b2b01383800183f3f313087054d2b877dc401
5f5e5d5d5f5d5d005d13013301c102159bfdebfed806f0f91000>KVXQMX+LucidaGrande AddT42Char 
1 232 4 <00020082ffdb048e05ed000b001300a84077270401280a01e70c01030a01
890a01860801291001591089109910a910e91005190b290b02690b011901
290102190169010216072607021607660702160501160566050267130103
1301030b010c0d010a0f010511010b030f0e010012011c05109b06070c9b
00190e8a09128a034015097c0214037b022b2b011a18104ded10ed003fed
3fed3130015f5e5d5d5f5e5d5d5d5d5d5d005d715d715d715d715d715d5d
5d5d717105220011100033320011100027201110212011100282e5fee501
1de9e9011dfee3ed0139fecbfecc2501af015b015e01aafe56fea5fe9cfe
5794027c026efd8cfd8a0000>KVXQMX+LucidaGrande AddT42Char 
1 484 5 <000101340000044a05ed00090058403089049904b904c9040404100b1148
03040152049b050614050605060707019b0008a8078b0401a82002010002
10020202b8ffc0b613184802020b0a1112392f2b5d71ed32fded002fed32
3fdd3130872b2b10c4002b712135211105352511211501340128fed801ee
01289404904a987bfaa79400>KVXQMX+LucidaGrande AddT42Char 
1 616 6 <000100aa0000042205ed001900dd409e370f010a121a1202fa1201f80d01
f71001c810018a13ba13da13ea1304270a01f80a010a081316487807013b
084b08020820171a4808132813022c08010c151c150236024602020a0201
0816181602d816e816020a0501ca05fa05028605014710015710010c9b0f
0b1f0b020b0b099b11060e070117990018068a111789400b000f111f1102
0f11cf11df11ef11040d031b11d5020f000119031a007b022b015f5e5d2b
015f5e5d711810c41a4ded10edc4002fed323f3939fdd65e5ded3130015d
715d5d715d717171715d005d2b5d5d2b5d715d5d5d5d5d71713335362537
3635342623220735363332161514060f0106072115aa56010671da95829a
d1c5c2d0fc7fad4ced250283adc9ed65c5c27c8e77ae5de0b985ce9341c9
b7ad0000>KVXQMX+LucidaGrande AddT42Char 
1 920 7 <000100d0ffdb042f05ed001e0115401e250c01761201391e491e591e0307
1b01e717010910391002e910f9100202b8fff8401a171b48a818b818026a
0e7a0e8a0e0345055505650503b9190119b8ffd0400a0c11480415141502
0915b8ffe040811215486a07011c0e2c0e5c0e6c0e040c041c042c04030c
075c076c0703380d480d02f80d011c08151848a91401031f064f065f0603
0f06cf06020b0618089c0b40141d0b9c3030129b110f9b1407009b300101
01039b1d192f187f188f18030d8b1640151848161109068a09111618044f
1a011a000010000260007000900003002f5d71d45d1739ed2f2f2f2bed5d
003ffdd65ded3ffdd6ed2b001a18104ded393130015f5e5d715f5d2b5d71
5d5d5d005d2b5e5d2b5d5d5d5d2b5d715d7171715d373516333236351021
23353720113421220735363320111005041114042322d0d47a8db1fe4b4e
45019afef294b2afa501c6fecb0166feecf1890bb854a583013885010121
e353ac3bfea9fefb6f53fecbd1ee0000>KVXQMX+LucidaGrande AddT42Char 
1 1296 8 <000200690000048205c8000a000d007f40542a0dfa0d020d181216480703
6703028703e703020803014a0b01070b270b370b03070b370b02a604010d
0b01520b8e03041403030409060c9a9001010101000406000c8c04018c08
060009500902090f100301032f5d10d65d32cded32ed002f3f12392f5ded
393931308705102b042b10c4015d5d7171005d5d712b5d21112135013311
331523110121110303fd66029ab9c6c6fd6e01e601a3950390fc7ca1fe5d
02440292>KVXQMX+LucidaGrande AddT42Char 
1 1480 9 <00020089ffdb047c05ee0014002000ec403909121912291203f72001eb17
fb1702f10a015a076a0702480901380948095809980904ca1c01361cb61c
02260101270d770d870d0304030103b8ffe0401b0c0f480a141a145a146a
140409690c015700010407140794070304b8ffe8404d0c0f480606160626
06038c1d01161d01090a010c0008189b300240020202020e08109b0f1101
0d11139b0e071e9b081910400e114810100b158b051b008a0b4000050111
0322057c02210b7b022b2b015f5e5d1a18104dfdc510ed12392f2b003fed
3ffdd65e5ded1112392f5ded12393130015e5d5d5d5d2b5d5d5d005e5d2b
5d5d5d5d5d5d715d5d5d5d71013633321215140023220011100021321715
26232001342623220615141633323601608dd6c2f7feebd5f5feec013d01
2084c6d185fe86025697867db4ab8d7f9702ffb7feffc9e7fed6018a015e
018101aa38ac50fc66a8c0a876bae1b70000>KVXQMX+LucidaGrande AddT42Char 
1 1828 10 <0002009cffdb048a05ed0015002100dc401db61dc61d027a108a1002c907
0142125212621203360f0109180c0f480db8ffe840170c0f482a1a012906
011512551265120303051305020905b8ffd840400d1048390501861e961e
024a046a0402860a960a020a200c0f48090c190c290c030c199b060e2f08
3f08020808141f9b0e07009b0f011f01020e01039b141901b8ffc0401c0e
11480101110b1c068a11168b0b40001101110323117c02220b7b022b2b01
5f5e5d1a18104ded10fdc51112392f2b003ffdd65e5ded3fed12392f5d12
39ed3130015e5d2b5d5d5d5d002b5e5d5d5d5d2b2b5d5d5d5d5d37351633
321211062322003534003332001110002122031416333236353426232206
e9bc84b8cf96bfbbfefc0115d2f10116feadfedf744199857db1ab8b8195
09a74101390117b90113c6e3012bfe7dfeb0fe82fe3f042bacc6aa78bde7
b700>KVXQMX+LucidaGrande AddT42Char 
1 2160 11 <000200e1000001a6043e000300070057b70004100420040304b8ffc0b31d
244804b8ffc04029151948049e050f0f011f012f01030d0301401d244801
40151948019e000704038500400809008530302b011a18104ded3939002f
ed2b2b5f5e5d3fed2b2b5d31303335331503353315e1c5c5c5c5c50378c6
c6000000>KVXQMX+LucidaGrande AddT42Char 
1 2284 12 <000200110000056e05c80002000a0096405ea70901990401960501090001
080a010602010004030913520301037f0a09140a0a090205060813520601
06800708140707080400059270028002020202070109080306030a030760
0a900a020a08090a030f013f01cf01ff0104010106072f3333192f5d1733
182f5d002f17333f333312392f5ded33328705102b872bc410c0c0871810
2b872bc410c0c03130015d5d5d5d5d5d010b01010321032301330103adfc
fd02d7a1fd8da3c3024bd002420236027efd82fdca019afe6605c8fa3800
0000>KVXQMX+LucidaGrande AddT42Char 
1 2496 13 <000300bf0000044505c8000c0016001e00fd4032e60801491401e9140109
1c391c491c591c04491c591ca91cf91c046d1c7d1c8d1c03351a451a027d
138d13021330010d4811b8ffd0402c0e11483906019906010c0a9c0aac0a
03b604c6040203041304230403090c1c4c1c020c104c10020d9703010ab8
fff840511a1d480c0b011103400b500b020f131f13021405071693174001
00179330301e9201030d92003a074a078a0703070d1b7e05127d090f091f
09029f0901170d7e00400f094f0902090320096f021f006b022b2b015f5e
5d1a18104ded325d7110edd4ed12395d002fed3fed2b001a18104ded3931
30015f5e5d5d5f5e5d2b5d5e5d5d005e5d5d5d5d712b2b5d5d5d5d715d71
5d3311213216151005041114062327333237363534262b01353332363534
2123bf0180deedfed0016bf0e2e42be74482ecb13b43a8b9feae5205c8a8
9efef3726ffedeb4be9d1d379584af859083da000000>KVXQMX+LucidaGrande AddT42Char 
1 2848 14 <000200bf0000059605c8000a001600af40523913018913e913023c12010c
124c1202860e01020e420e0209070901e709f70902480958096809b80904
0b09014908b908f908032408013408014206520602250501050515054505
c5050404041404020a04b8ffe040290e11480a0f4a0f6a0f030d030f116f
11021106169201030b9200107d070b7e004018076f0217006b022b2b011a
18104ded10ed002fed3fed3130015f5e5d5f5e5d002b5e5d5d715d5d715d
5d5d5d715e5d5d5d715d7133112132041716111000212521203736111027
2e012b01bf01ecdc010f639dfe7afe9efee3010d012078817f4dd6d7ad05
c86275bafed0fe8ffe6a9d9ba501160105955b43>KVXQMX+LucidaGrande AddT42Char 
1 3108 15 <000100bf0000042b05c80005002140110103039200037e00400704700206
006b022b2b011a18104ded002fed3f3130331133112115bfd2029a05c8fa
d59d0000>KVXQMX+LucidaGrande AddT42Char 
1 3172 16 <000100bf0000062605c8000c010b4016c80801a803b80302d70301030f03
01023803b8030204b8fff040a4141748d804010b041b042b044b04042902
e90202370201040214022402440204020901460956098609030d0a01390a
490a890aa90ab90ac90ae90a0704090809820304140303040a0203027f0b
0a140b0b0a000301090308090b04020a0004070a030002030003030b087f
060b80004010062006400650069006b006c006070006200630069006b006
f006060c0f060113030e066e028f0001000070000209030d006b022b015f
5e5d5d2b015f5e5d5e5d711a18104ded10ed1139192f00182f3f12173910
cc1117395e5d8705102b877dc48718102b877dc43130015d5d5d5d5d5d5d
5d5d2b5d005f5d5f5d5d5d33112109012111231101230111bf0123019a01
a60104c4fe68cbfe7405c8fb870479fa3804b4fbaf0454fb49000000>KVXQMX+LucidaGrande AddT42Char 
1 3500 17 <00020068ffdb05d005ed000b0017010840c6240c012b12018602f60202f6
0a01c90a01180401f80401270401c70401190801f90801260801c6080136
160106164616e616033a14010a144a14ea14034910e91002460ee60e0217
0b470b02c70b01290b01190b590b690b790bd90b05480701c80701160701
1607560766077607d60705480501c805011605011605560566057605d605
051701012901011901590169017901d901050c0d010317010313010c1101
09032f0f012015010008011a06129206040c9200130f7d09157d03401909
6f0218036c022b2b011a18104ded10ed003fed3fed3130015f5e5d5d5d5f
5e5d5d5d5d005d71715d715d715d715d715d715d715d5d5d715d715d715d
715d715d715d5d5d71710520001110002120001110002532121110022322
021110120313feccfe890179013b013a017afe86fec0e3f8f9dcddf8f625
01ab015f016101a7fe5afea0fe99fe5b9d0147012a01210146feb9feddfe
defeb400>KVXQMX+LucidaGrande AddT42Char 
1 3864 18 <000200bf0000044805c8000a0013009f4030350401950401081128113811
03e81101750d850db50dc50d04420652066206030906190629060310180c
0f48d70e010eb8ffc0403f0a0f48150301050375038503f5030409440454
04020b923f09af09cf09df090409090013920103000f7d050b0a7e004000
052005020c031505700214006b022b2b015f5e5d1a18104ded3210ed002f
3fed11392f5ded3130015d005e5d712b5d2b715d5d5d715d713311212016
151400212319013332363534262b01bf0193010ceafec0fee45d55bbcca0
bb8105c8b5cfecfef4fdb402ebac9d857200>KVXQMX+LucidaGrande AddT42Char 
1 4092 19 <000200bf000004fa05c8000c001300ae40742707013906010606260602e6
06012e113e114e110311380d1148260f01260f360f020603f6030209450f
01160401a707019a07015e126e127e12030918151948070a010a09015209
7e0807140808070d9207010b0b08001392010300107e050705080d0c7e00
400f080112031508700214006b022b2b015f5e5d1a18104ded321139392f
ed002f3fed1139392f1239ed31308705102b2b10c4015d2b5d5d5d5d5d00
5e5d5d712b715d715d713311213216151005012101231901332011342123
bf01c0d5e3fed501eefefefe5bc444018cfeb48405c8bcb3fed87cfd4b02
72fd8e030f0137e5>KVXQMX+LucidaGrande AddT42Char 
1 4708 21 <000200c5ffe7049a062b000e001700fd40bc020901051201e90601e60601
591579158915a915040d081f2348170f01671001481001e810016a1701aa
17ba1702b716010916015916d91602e90c010c100c0f487a0301991101b9
110166080107091709025a096a090208131813581303680a01170a270a57
0a03870a970a02130623063306037a0aaa0a02130a230a330a0315072507
b507030d12ad12020c14cc14ec14fc140401001703159505100f0f1f0f02
0c030f0d11970b16001384080d030f85004019086902180065022b2b011a
18104ded393910ed002f3fed32325f5e5d3fed32323f3130015d5d5d5d5d
5d5d7171717171715d71005d2b5d5d715d5d715d7171712b715d5d5d5d17
1133113633321215100223222707131633201110232207c5c579f2c4e1ff
d0c1801818988a011cfca59d0c0637fd47e4fee2f8fef2feb59487010f88
01b1017eb300>KVXQMX+LucidaGrande AddT42Char 
1 5660 24 <0002006fffe703e604570011001600ea405737100101101b1f4824043404
02c404e40402050335034503550304a503f5030259036903023a0601ca06
ea06025506f50602450701450755076507031316231602d316f316023a16
01120e220e320eb20ec20ee20e060eb8ffd0400a1a1e480509850902090d
b8ffe040441a1f480c14012c145c14ec14fc140403740a012f0a01400450
046004030f04010e0512970d0d02159708100097110f970216120d138511
0b0d850540180b6902170566022b2b011a18104ded10c6ed1139003ffdd6
ed3fed11392fed3130015f5e5d5d5d5d5f5d712b005e5d2b5d5d5d715d71
5d5d715d5d715d712b712506232200353400333212110721122132370121
10232203e1c68df0fed1010bd0c5d701fd532b01507bb3fd6001dfe2e323
3c013ffef7013cfee8fefe3dfe7d4201d5012f00>KVXQMX+LucidaGrande AddT42Char 
1 7244 31 <0002006fffe7047b0456000b001300d040981a0e2a0e021813281302070c
01270701170527050218012801021801280102280b880b0208109810020c
0d0a1d0a020d0a1d0a2d0a03020812080202081208220803020412042204
030d5502010d021d02020e0a0b010a07010505010501010c0d0103130103
11010c0f011603100a200a0210082008021f042f04020012011706109706
100c9700160e84091284034015096902140366022b2b011a18104ded10ed
003fed3fed3130015f5e5d5d5d5d5f5e5d5d5d5d5d5d5d5d005e5d5d5e5d
5d715d715e5d5d5d715d5d5d717105220011100033320011100027201110
21201110026ee9feea0117efef0117fee8f20139fecbfecc190135010301
060131fecffefcfef6fed09401a601a1fe5dfe5c0000>KVXQMX+LucidaGrande AddT42Char 
1 7828 33 <000100c50000031d0456000d005b401f470b01490c590c02a90cb90c0207
0401090c030a079508000a100a022f030ab8ffc040171f23480a95051001
0f00030d8500400f076a020e0065022b2b011a18104ded32002f3f3ffd2b
5f5e5dd6ed11333331305e5d5d71713311331536333217152623220711c5
c575df1e213327bb7e043ecce405b811defd3400>KVXQMX+LucidaGrande AddT42Char 
1 7968 34 <00010045ffe702ae05160014006c400c9802d80202070201f702010eb8ff
d040371519481b012b013b015b01040d0a049709070f139712109700160f
125f12020f0c5f0c0209030c120a070d8505044016126902150465022b2b
011a1810cd4ded393910c65f5e5d5d003ffdd6ed3fcded393931305d2b5d
7171052226351123353335371521152111143332371506020b96a88888c5
011cfee4b827385b19ac99027e94c513d894fda6d50d88190000>KVXQMX+LucidaGrande AddT42Char 
1 8348 36 <0001000c0000061c043e000c018c404a7a0b8a0b02340bf40b02f506010b
061b063b06031403010b031b033b0303080101f80101e60101e807012808
019808e8080207080177088708f70803280501170501d705e705f7050305
b8fff840da0c104838045804f8040337020127029702a702c70204170a01
090a190a390a590a890ad90ae90af90a08060c160c360c560c0409001900
3900e900f90005a8090107092709021709370947095709b709c709e70907
07090809880607140606070a050605870b0a140b0b0a040c0b0c88030414
0303040002030287010014010002040507080b06010f0c0a090306050013
0c003f0301100301030120090a1f062f06020640242a4806401e21480607
4008012008400870088008a008c008065008c00802080504200b700b800b
a00b04500b010b0b02700101012f5d3333192f5d713333c45d71723218cd
2b2b7132321a1910cd5d71323200183f17333f173387052b877dc4871810
2b877dc48718102b877dc48718102b877dc43130015d715d5d5d5d715d71
5d2b5d71715d715d715d5d5d71005d715d5d5d5d21013313013313013301
2303010143fec9c1ee0101c5e10111a9fe9ec6e6fefc043efcb70349fcb7
0349fbc20349fcb70000>KVXQMX+LucidaGrande AddT42Char 
1 0 0 <00020100000005000500000300070014b706020400060204002fcdd4cd00
2fcdd4cd3130211121112521112101000400fc400380fc800500fb004004
80000000>KVXQMX+LucidaGrande AddT42Char 
KVXQMX+LucidaGrande /CharStrings get begin
/space 1 def
/slash 3 def
/zero 4 def
/one 5 def
/two 6 def
/three 7 def
/four 8 def
/six 9 def
/nine 10 def
/colon 11 def
/A 12 def
/B 13 def
/D 14 def
/L 15 def
/M 16 def
/O 17 def
/P 18 def
/R 19 def
/b 21 def
/e 24 def
/o 31 def
/r 33 def
/t 34 def
/w 36 def
end
KVXQMX+LucidaGrande /Encoding get
dup 32 /space put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 54 /six put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 98 /b put
dup 101 /e put
dup 111 /o put
dup 114 /r put
dup 116 /t put
dup 119 /w put
pop
end
%ADOEndSubsetFont
/YYMPBD+LucidaGrande /KVXQMX+LucidaGrande findfont ct_VMDictPut/YYMPBD+LucidaGrande*1 [32{/.notdef}rp /space 14{/.notdef}rp /slash /zero /one /two /three /four /.notdef /six 2{/.notdef}rp /nine /colon 6{/.notdef}rp /A /B /.notdef /D 7{/.notdef}rp /L /M /.notdef /O /P /.notdef /R 15{/.notdef}rp /b 2{/.notdef}rp /e 9{/.notdef}rp /o 2{/.notdef}rp /r /.notdef /t 2{/.notdef}rp /w 136{/.notdef}rp]YYMPBD+LucidaGrande nfYYMPBD+LucidaGrande*1 [7 0 0 -7 0 0 ]msf529.318 -31.5694 mo(1/26/09 10:43 AM)[4.42401 3.66803 4.42401 4.42407 3.66797 4.42407 4.42401 2.21198 4.42401 4.42401 2.21198 4.42401 4.42401 2.21198 4.83002 0 ]xsh18 -31.5694 mo(DOPPLR: Robert Brewer)[5.24295 5.43895 3.87096 3.87096 3.73103 4.42403 2.21196 2.21196 4.42403 4.29799 4.40298 3.89905 2.86298 2.61795 2.21196 4.02498 2.86298 3.89905 5.39697 3.89905 0 ]xshgrestore
gsave
18 696.431 mo
594 696.431 li
594 672.431 li
18 672.431 li
18 696.431 li
clp
false sop
.750271 .679713 .654902 .901945 cmyk
%ADOBeginSubsetFont: KVXQMX+LucidaGrande AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal KVXQMX+LucidaGrande gcheck setglobal} if
1 64 2 <000100c8000001bf00f70003001b400d01b00003af0040040500af30302b
011a18104ded002fed313033353315c8f7f7f7000000>KVXQMX+LucidaGrande AddT42Char 
1 4340 20 <00020067ffe704390456001d002700fa4025290d390d490de90d04090601
0a212a2102fa2101e80301e90b01d90be90bf90b03d7070107b8fff84029
2124487907890702eb22016b227b228b2203050601aa22017522852202e7
24011725e72502c4010101b8ffe040492023480c011c015c0103fc010179
0301c903d90302190429040202131213221303091f98af09010909000211
0f970f0e010b030e0c9711101917971c1626960216001a091e851a150eb8
ffc040100b0f480e2385054029156802280566022b2b011a18104dedc42b
10c4ed321139003fed3ffdc63ffdd65f5e5ded111239392f5ded3130015e
5d5d5d715d712b7171715d005d5d5d715d2b715d715d5d71717125062322
263534242133353423220735363332161511143332371706232203112722
06151416333202f5b1a487b2012b01172fc29cb5c7aeb6ad680d190e4351
8a4342a2c864487b8aa3a981b2bf83bd60a351a4adfe14a9046d20010e01
19027b6447620000>KVXQMX+LucidaGrande AddT42Char 
1 5044 22 <0001006fffe703b70456001500cd4069090c290c390c03c90c011c0d010c
0d1c0d6c0d9c0dac0dcc0d0675020185020117020177028702023c014c01
022404013404d404e40403e905013405440502140f01040f140f640f940f
a40fc40ff40f070ba8010185019501a501c501f501050610018610010897
09b8ffc0402c0d1448090b97061014960f131f13020d131196001609130e
8303400f132f134f13030e0317136902160366022b2b015f5e5d1a18104d
ed10c6003ffdd65e5ded3ffdd62bed3130015d715d5d005e5d715d5d5d71
5d5d715d5d5d715d71052200351000213217152623220615141633323715
06026ddcfede011f01017f9da76997b7bc98878fbf190146f80109012823
a531e3bdb7e245aa3a00>KVXQMX+LucidaGrande AddT42Char 
1 5324 23 <0002006fffe70444062b000e001700fd4079390201051601e51601f91301
d90f01d40f010a071a07028a07da0702bb0bcb0b02a40bb40b02ca10fa10
02b510c51002bb01019201b201026617010a173a17020b6b048b049b0403
04200d1048090801b908e908f90803160826083608b608040414010b1201
0b12ab12bb12eb12040c8c0aac0a02a60a010ab8fff0403e0c0f48930801
037f16016f027f02ff02030f051f052f057f05df05050d050c000f0b1197
0910001701159503160f0b00850e13840640190e6802180666022b2b011a
18104ded10ed3232003fed32322f3fed32323f3130015f5e5d5d5d5f5d00
2b5d5d5e5d715d5d5d712b5d5e5d715d5d5d5d5d5d5d715d5d5d5d717121
3506232202351012333217113311032623201110333237037e78f2c4e1ff
d0c17fc6c69989fee5fca49dcce5011ef8010f014a940269f9d5033b87fe
4ffe83b30000>KVXQMX+LucidaGrande AddT42Char 
1 5980 25 <000100500000032d064400140047402d300701140824083408030b970c0e
97090112000397060f02a00cb00c020c3014011412060085045003d00302
032f5dcdfd3939dd5dc65d002f3fed39393ffdd6ed31305d710111231123
3533351021321715262322061d01211501b0c69a9a0162637e8550614701
0f03aafc5603aa94820184219c295d7e97940000>KVXQMX+LucidaGrande AddT42Char 
1 6120 26 <0002006ffe5d044404560019002301054033431501392301391001361b01
270c01d90c01b602d602f60203b51cd51c022b1f01ab1fbb1fcb1f03890c
c90c02850695060204b8ffe840730c0f483609012a093a094a09aa090409
0d190d02e90d01260d360d460d033a07011a07011a1f010b1a010ba30d01
1a042a043a0403062101c921e92102051ea51ee51e030c03260a01e60a01
0f0a1f0a2f0a8f0adf0a050d05120f1b101d970e101a0622950800970103
97181c1b0611851200b8ffc040100c0f480020840b4025126802240b6602
2b2b011a18104dedc42b10ed3232003ffdd6ed2fed32323fed32323f3130
015f5e5d5d715f5e5d5d5d5d5d005e5d5d5d715d5d715d712b5d5d5d715d
5d5d717171715d1337163320113506232202353400333217353311140607
06212201112623220615103332c917aba6014d6df9c3e60106d0b683c635
4981fef0be02078299889afbabfe97ab510161abe4011cf1f80138947cfc
eafff54e89031b01c387dabefe9b0000>KVXQMX+LucidaGrande AddT42Char 
1 6496 27 <000100c50000043d062b0011008c4065b90f01290f390f790f890f990f05
7607860702d607e60702db0deb0dfb0d030d201a1d48880e980e023c104c
10ac10037410017203820302040614062406030300041004700480040409
05010010030e9505100a000a8509031185004013096802120065022b2b01
1a18104ded3210ed002f2f3fed32323f31305f5e5d5f5d5d5d71712b5d5d
7171015d331133113633321615112311342623220711c5c59ce28da8c547
52b5a0062bfd47e4b397fcf402cc7967edfd4100>KVXQMX+LucidaGrande AddT42Char 
1 6696 28 <000100c50000018a062b0003001b400d010000038500400405008530302b
011a18104ded002f3f313033113311c5c5062bf9d500>KVXQMX+LucidaGrande AddT42Char 
1 6748 29 <000100c5000006bf0457001b00e940460404010408011a1001fa10011a17
01fa17012a123a12022a193a1902391301a113b113c113e11304391a01a1
1ab11ac11ae11a0405070175079507a507c507e5070573030103b8ffd840
5e1215480606014606560602060a01360a460a0226087608021604260476
049604b60405f70b01f70601119509101896180711131a05030510010f15
0e000e850d031b8500400f0d0100000109031500140d653b07148515401c
1d15853c302b011a18104ded322b015f5e5d5d1a18104ded3210ed002f33
333f3f111733ed3fed3130015d5d005d5d5d715d712b5d5d715d715d7171
715d715d715d5d3311331536333217363332161511231134232207112311
3423220711c5c590e2da4f8ce0909ec69399a8c69695aa043ecce4e4e5a9
98fcea02f7bad9fd2802f7bbdafd2800>KVXQMX+LucidaGrande AddT42Char 
1 7064 30 <000100c50000043d0456001100784053b90f01a910012d0f3d0f4d0f7d0f
8d0f9d0f06770701d707e70702db0deb0dfb0d030d201a1d48180e010406
1406240603090003100302100310030e950510010f0a000a850903118500
4013096802120065022b2b011a18104ded3210ed002f2f3f3fed32325f5e
5d31305e5d712b5d5d717171015d33113315363332161511231134262322
0711c5c59ce28da8c54752b5a0043ecce4b397fcf402cc7967edfd410000
>KVXQMX+LucidaGrande AddT42Char 
1 7536 32 <000200c5fe75049a0456000e001700d34098130901580d01240f01040f01
2810581002f71001b817c817028803011916016916e91602380c480c02b6
0a012a0a3a0a4a0a03250635064506031212b212022714011d1401270a01
970aa70a02f90c01b911c911028a09ba0902250935090225073507450703
0d0f1d0f2d0f030b0c0d1c0d020c03010f1703159505100d0f11970b1600
1b1384080f030e850040190869021800650219853f2b2b011a18104ded32
3210ed003f3fed32323fed32323f5f5e5d5e5d3130015d5d5d5d5d5d7100
5d715d5d5d5d5d5d715d5d5d715d71715d13113315363332121510022322
2719011633201110232207c5c579f2c4e1ffd0c180988a011cfca59dfe75
05c9cce4fee2f8fef2feb594fdfa028e8801b1017eb3>KVXQMX+LucidaGrande AddT42Char 
1 8144 35 <0001001200000418043e000600a1406d080601f70201f80101f704010705
01e705f70502f802019702a702c702d702e70205c806d806e80603470657
066706034800010406050688030414030304000203028701001401010006
03001502040503010f040005017005f0050205000605030003017003f003
02030302012f3333192f5d711733182f5d7133003f17333f32328705102b
877dc48718102b877dc43130015d5d5d5d5d5d715d5d005d712101330901
330101a6fe6cc5013c014db8fe53043efcb3034dfbc20000>KVXQMX+LucidaGrande AddT42Char 
KVXQMX+LucidaGrande /CharStrings get begin
/period 2 def
/a 20 def
/c 22 def
/d 23 def
/f 25 def
/g 26 def
/h 27 def
/l 28 def
/m 29 def
/n 30 def
/p 32 def
/v 35 def
end
KVXQMX+LucidaGrande /Encoding get
dup 46 /period put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 112 /p put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBD+LucidaGrande*1 [32{/.notdef}rp /space 13{/.notdef}rp /period /slash /zero /one /two /three /four /.notdef /six 2{/.notdef}rp /nine /colon 6{/.notdef}rp /A /B /.notdef /D 7{/.notdef}rp /L /M /.notdef /O /P /.notdef /R 14{/.notdef}rp /a /b /c /d /e /f /g /h 3{/.notdef}rp /l /m /n /o /p /.notdef /r /.notdef /t /.notdef /v /w 136{/.notdef}rp]YYMPBD+LucidaGrande nfYYMPBD+LucidaGrande*1 [7 0 0 -7 0 0 ]msf555.63 693.431 mo(Page 1 of 2)[3.87097 3.86401 4.36792 3.89905 2.21198 4.42401 2.21198 4.29797 2.57599 2.21198 0 ]xsh18 693.431 mo(http://www.dopplr.com/traveller/rbrewer/carbon)[4.34702 2.61795 2.61795 4.40298 2.21196 3.66801 3.66801 5.39697 5.39697 5.39697 2.21196 4.40298 4.29799 4.40298 4.40298 2.02301 2.86298 2.21196 3.58395 4.29799 6.53804 3.66801 2.61795 2.86298 3.86401 3.62604 3.89905 2.02301 2.02301 3.89905 2.86298 3.66801 2.86298 4.40298 2.86298 3.89905 5.39697 3.89905 2.86298 3.66801 3.58395 3.86401 2.86298 4.40298 4.29799 0 ]xshgrestore
gsave
18 672.325 mo
594 672.325 li
594 -13.5694 li
18 -13.5694 li
18 672.325 li
clp
18 672.325 mo
594 672.325 li
594 -13.5694 li
18 -13.5694 li
18 672.325 li
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
18 124.367 mo
18.7579 124.367 li
18.7579 123.61 li
18 123.61 li
cp
.156741 .118563 .123629 3.0518e-05 cmyk
f
593.242 124.367 mo
594 124.367 li
594 123.61 li
593.242 123.61 li
cp
f
.757895 lw
0 lc
0 lj
10 ml
[.757895 .757895 ] .757895 dsh
true sadj
18.7579 123.989 mo
593.242 123.989 li
@
18 13.4306 mo
154 13.4306 li
154 -13.5694 li
18 -13.5694 li
cp
gsave
/1 
<<
/CSA /0 get_csa_by_name
/MappedCSA null
/HiVal 31 
/Lookup <~
>"D6c#R(A3Ulg^=&If0LP^e-4B2hk3)\j(f1FOXO5Vb.rF'i;Y9g(]@SVW"`Iq`U,-QO9/MKEnXXI>Mt
iRe,1!2IX9A-T4;2&`:kX8kWg,l,1\z^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!^TFR!~>
>>
/CSD add_res
/1 /CSD get_res idxcs
clp
[1 0 0 -1 16.817 563.005 ]ct
[136 0 0 27 1.18298 549.575 ]ct
snap_to_device
<<
/T 1
/W 180 
/H 35 
/M[180 0 0 -35 0 35 ]
/BC 8 
/I true
/D[0 255 ]
/DS cf /ASCII85Decode fl /RunLengthDecode filter
/O 2
>>
%%BeginBinary: 1
idximg
JeiqRJeiqRJeiqRJeiqRJeiqRJeiqRJeiqRJeiqRJeiqRJeiqRJeiqRJeiqRJeiqRM\c(&qA&N4nItF*
nJ(L)q%`r7r!`W.pD*l:!!!?.r"]85r=/`8!!E08!!E',!!3$6rs&66q$m9<nJ1R+nItF*nJ(s6oFUg6
!"Sl:!Wi?&r"]PF!Y5bN$P*^LrY>JCq%!T<!>ZFNq%!H/rYGMDp_NZ9!s/H<(@`.2&cWI5'Cc_*'_)b1
(B4mC('FgA!X&Q'('=^N!!3'7#Rpn<!u;X]%h8FP"pb85()?l\r"]G:!"T5K(B4m>('+pGr"]D9$4dIZ
nJ1R+nItF*nJ(L)q%iu?q\BD@!Y,t]%1`gC('"@>$P!pf%1`pF('OpR#8R:MqA'5<%fmFU%epe?%flGA
!X/rInJ1R+nItF*pD!K=nIYL3rsnl@"UGVC('G-C('Y3Y#8RaZ%JghC%fd@F&,I%F%1`m`%M&7L!=o2,
('4pU(@`.;&bZh,'Cc_*'_)b1(B4m@('O^L!!<`;p_F#@#o3s\%JghE%fd@F%i,rY('P-X%2KE`p_El@
!;[H4#6G\2(%Dn+'Cc_*'_2e8&G[+A%f$kC":PPH"8EW8#n%LX%h8CO"U>PC('"mA('OjP!>Z.Tp_El@
!;[H4%LEp@(%Dn1'DiI5'(H\+&G[+A%f$kB%LrILpD*o4%i,Tb%K$tG#Qb,E('"mC('aj?%g<^a%M&7L
!"T&9r!`c7%KleJnJ1R+nItF*nJ(L)q%iu?q%iu?!<<Z)('=OI((L'M":bGJ('+.@!!W?;rsnf>q%!Q1
!u;[B(%Dn+'Clb9'(H\+&G[+A%f$kC%LrgV"8EW8"TfGK%gr4D!!E08!<<Z-%0-G-(B4m>('+pGr"]D9
#m(2EpD*Q?nIb:)nIk@+nIYL3rsni?":kJ:%gVkF"U#5L%1`pI(A\dI!"\c=rsnf>!=o2,('4jI(@`.0
&b-P)'(H\7&G6V1(B4m@('OpR#8R[Rq%a/:%gWp[%h87K!<<Z((B4m>('+pGqA',@%MnRLndtj6nItF*
nJ(L)q%iu?q\BD;":Gt\!"TP8('Y6M!>Z+T%JLV=!"\c=!"Ju=p_El@!;[H4!"Ke7(%Dn+'Cc_*'_)b1
('"gE%f@(E%0Q_:rY>PF!Y,)D#QY5B#8S'a%h87K!<<Z((B4m>('+pGqA',4";^MBnIb:)r=\c9nJ(L)
q%`u@!rWT2!Y5bFr>#\?$kEI@!!r].#Q>J?%1`pB('+CGp(dZ=!r<B/"VqUKqA')=%fdC8(%Dn+'Cc_*
'_)b1('"X<!!*?0q%a,<"V)"N#QOo(('4R<"8<Q3%06);!!rB#!sfYB%JghA!rrOU~>

%%EndBinary
grestore
np
.55761 .472114 .467414 .125368 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica Initial
ct_T42Dict begin
0.004 -0.219 0.93 0.734
 256 array 0 1 255 {1 index exch /.notdef put} for  /SBVPMX+Helvetica
Type42DictBegin
[<00010000000b000b000b000b637674208de93e9e000000bc0000036c6670
676d11e0c3ca0000042800000a0c676c79666f6ebada0000141400003140
68656164f1e6eb2a00000e3400000036686865610a22075500000e6c0000
0024686d74780d5f17a700000e90000000f46c6f6361573164c800000f84
0000007c6d61787008a10af900001000000000206e616d655f7978770000
10200000002270726570bc836e3100001044000003cf6764697200000000
000000000000000005c0001005bd00280580001a042f001f0000ffd90000
ffda0000ffd9fe55ffe605c70010fe6dfff1033b000000b9000000b902fe
3f3c00c0008d009b00af000600a800c00028005e009800c9016a00b9015c
00b400d6011e002e0080000400b8004c00cc01ffffd1006600a400af0074
00c2009500b1000c0028006d0015004c008e0125ff7a000c0040004c0062
0084ffa200240038008600bd0039005e008e00edffa9ffb3004000520055
00aa00ab00c200cb012302b10413ffaeffe4000800510074008400aa00d1
ff4cffaf0012002c004200500051008400be012503daff680018003b0098
009c009f00a100c100ec018201b4ff68ff76ffd0ffe100020018001c0053
0053007d01b401e103af0486ff9cffeafffe001f0028002a005200600093
00a300aa00af00af00c001000145016b0174019301950240028202b40485
0517fefd00060029004700470048006f008800b400b900c400f200f901ef
02180310037403c5ff35fff3000b004b004c005200550065007600760087
0087008e00ab00bb0106013001430150017d0194019501d3022a02550258
0277027802e6034e035c037903d3047304b2058c0598060bfef5ffbbffc7
ffd50017001d005b0072007e009c00c200d000f400fa01030106011c0125
013b0142015e015e0180019b02b901a101b9025001c001d002aa01df01e3
01ef01fb0205020c0215022b0274029302ab02c202ce03690395039903df
03f5043e050205a105e5062507dbfe62fe89feceff3bffe1fff800030008
002100390042004e005f0061006f00700034007f008e00ad00ad00af00bd
00c400c500c900c900c900e3011c00ed00f800f901000112011a0132014d
014d014e014f01660169019e01ba01ba01be01e301ef01f6020002000209
02110217021c02530262026d028002d50280031b032a034a035a03af03af
03c803d603fb03fb04050413041504470449008c046d049a049a04a604a8
04b204cf0539053e054e055605800589058c036305d105d6067e068e06b2
06ef06f00728074c076f078c00b400c900c000c100000000000000000000
00000004012400af0032006e0063014401620096014301a10161008a0074
0064018801ef01700028ff5d037e0347023000aa00be007b0062009a007d
0089035c00a1ffd803aa00d70093006c0000008000a70442001d0597001d
00820030002a002a002a002a002a40292a292827262524232221201f1e1d
1c1b1a191817161514131211100d0c0b0a090807060504030201002c4523
466020b02660b004262348482d2c452346236120b02661b004262348482d
2c45234660b0206120b04660b004262348482d2c4523462361b0206020b0
2661b02061b004262348482d2c45234660b0406120b06660b00426234848
2d2c4523462361b0406020b02661b04061b004262348482d2c0110203c00
3c2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed515823
20b04d44235920b09051582320b00d44235921212d2c20204518684420b0
01602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b
2d2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c
2045b00325456164b050515845441b2121592d2c20b0032552582359212d
2c69b04061b0008b0c6423648bb8400062600c642364615c58b0036159b0
02602d2c45b0112bb0172344b0177ae5182d2c45b0112bb01723442d2c45
b0112bb017458cb0172344b0177ae5182d2cb002254661658a46b040608b
482d2cb0022546608a46b040618c482d2c4b53205c58b002855958b00185
592d2c20b0032545b019236a4445b01a23444565234520b00325606a20b0
09234223688a6a606120b0005258b21a401a4523614459b0005058b21940
1945236144592d2cb9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b
2d2cb93b21e7830b2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845
441b2121592d2c0120b003252349b04060b0206320b000525823b0022538
23b002256538008a63381b212121212159012d2c456920b00943b0022660
b00325b005254961b0805358b21940194523616844b21a401a4523606a44
b209191a45652345604259b00943608a103a2d2c01b005251023208af500
b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b00625
10f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d
2c764520b003254523616818236860442d2c7645b0032545236168231845
6860442d2c7645b0032545616823452361442d2c4569b014b0324b505821
b0205961442db8002b2c4bb800095058b101018e59b801ff85b800441db9
000900035f5e2db8002c2c2020456944b001602db8002d2cb8002c2a212d
b8002e2c2046b003254652582359208a208a49648a204620686164b00425
4620686164525823658a592f20b00053586920b000545821b040591b6920
b000545821b0406559593a2db8002f2c2046b00425465258238a59204620
6a6164b0042546206a61645258238a592ffd2db800302c4b20b003265058
5158b080441bb04044591b21212045b0c05058b0c0441b2159592db80031
2c2020456944b001602020457d691844b001602db800322cb800312a2db8
00332c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a
1b8a235920b0032653582321b801008a8a1b8a235920b0032653582321b8
01408a8a1b8a235920b80003265358b0032545b8018050582321b8018023
211bb003254523212321591b2159442db800342c4b535845441b2121592d
b800352c4bb800095058b101018e59b801ff85b800441db9000900035f5e
2db800362c2020456944b001602db800372cb800362a212db800382c2046
b003254652582359208a208a49648a204620686164b00425462068616452
5823658a592f20b00053586920b000545821b040591b6920b000545821b0
406559593a2db800392c2046b00425465258238a592046206a6164b00425
46206a61645258238a592ffd2db8003a2c4b20b0032650585158b080441b
b04044591b21212045b0c05058b0c0441b2159592db8003b2c2020456944
b001602020457d691844b001602db8003c2cb8003b2a2db8003d2c4b20b0
03265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b0
032653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a
235920b80003265358b0032545b8018050582321b8018023211bb0032545
23212321591b2159442db8003e2c4b535845441b2121592db8003f2c4bb8
00095058b101018e59b801ff85b800441db9000900035f5e2db800402c20
20456944b001602db800412cb800402a212db800422c2046b00325465258
2359208a208a49648a204620686164b004254620686164525823658a592f
20b00053586920b000545821b040591b6920b000545821b0406559593a2d
b800432c2046b00425465258238a592046206a6164b0042546206a616452
58238a592ffd2db800442c4b20b0032650585158b080441bb04044591b21
212045b0c05058b0c0441b2159592db800452c2020456944b00160202045
7d691844b001602db800462cb800452a2db800472c4b20b003265358b080
1bb040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321
b801008a8a1b8a235920b0032653582321b801408a8a1b8a235920b80003
265358b0032545b8018050582321b8018023211bb003254523212321591b
2159442db800482c4b535845441b2121592db800492c4bb800095058b101
018e59b801ff85b800441db9000900035f5e2db8004a2c2020456944b001
602db8004b2cb8004a2a212db8004c2c2046b003254652582359208a208a
49648a204620686164b004254620686164525823658a592f20b000535869
20b000545821b040591b6920b000545821b0406559593a2db8004d2c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db8004e2c4b20b0032650585158b080441bb04044591b21212045b0c050
58b0c0441b2159592db8004f2c2020456944b001602020457d691844b001
602db800502cb8004f2a2db800512c4b20b003265358b0801bb040598a8a
20b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b
8a235920b0032653582321b801408a8a1b8a235920b80003265358b00325
45b8018050582321b8018023211bb003254523212321591b2159442db800
522c4b535845441b2121592db800532c4bb800095058b101018e59b801ff
85b800441db9000900035f5e2db800542c2020456944b001602db800552c
b800542a212db800562c2046b003254652582359208a208a49648a204620
686164b004254620686164525823658a592f20b00053586920b000545821
b040591b6920b000545821b0406559593a2db800572c2046b00425465258
238a592046206a6164b0042546206a61645258238a592ffd2db800582c4b
20b0032650585158b080441bb04044591b21212045b0c05058b0c0441b21
59592db800592c2020456944b001602020457d691844b001602db8005a2c
b800592a2db8005b2c4b20b003265358b0801bb040598a8a20b003265358
2321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b003
2653582321b801408a8a1b8a235920b80003265358b0032545b801805058
2321b8018023211bb003254523212321591b2159442db8005c2c4b535845
441b2121592d00010000000000007e07e05b5f0f3cf50011080000000000
c5a3d10600000000c5a3d106000bfe3b077105e500000009000100000000
0000000100000629fe2900000c01f865fced0b9100010000000000000000
000000000000003d05120042023900000187009c04ac005c023900aa0239
00af04730040047300c4047300400473003104730034047300420473004b
0473004204730049023900e304ac005c0473009c0556001e0556009705c7
005a05c700a5055600af04e300af05c700a1023900c90400002306aa0097
05c7009c06390050055600af05c700b40556006004e3002105c700aa0556
0034078d00250556002a04730052047300760400003b0473003804730048
0239001c0473003d0473008401c700840400008001c7008906aa00840473
00840473003b0473007602aa00890400004202390017047300800400000b
05c700120400000b040000150000003400340056008a00bc00dc014a0170
01fc02a802f6038a03d40486051c0548057005f2067e0702079207f40838
086a08a208ba08fc098809de0a5c0ab20b3c0c080c360c7e0cdc0da80e0a
0ed40f3e0fc0102c10f6114211ea123a126812d812fa137613d2144a14bc
150215e21632168c172217d0180a18a000010000003d006f0003006b0007
000200100010005d000007e80a0c00040001000000010012000100000000
0006001000004c4d5a5252432b48656c7665746963610000b800532bb800
492bb8003f2bb800352bb8002b2b4118008001a6009001a600a001a60003
0069018b0079018b0089018b0099018b00040089018b0099018b00a9018b
00b9018bb2040840ba0179001a014a400b041f5414191f180a0b1fd2b801
06b49e1fd918e3bb0119000d00e10119b20d0009410a01a0019f0064001f
01a50025017a00480028019ab3296c1f60410a01a9007001a9008001a900
03008001a9000101a9b21e321fbe012c00250401001f0126001e0401b61f
e7312d1fe531b80201b21fc227b80401b21fc11eb80201400f1fc01d9e1f
bf1d671fbe1d671fab27b80401b21faa29b80401b61fa91d6c1f931eb801
9ab21f921db80101b21f911db80101b21f751db80201b61f6d29961f6431
b8019ab21f4c96b802abb21f391db80156400b1f3638211f351de41f2f27
b80801400b1f2d1d4c1f2a31cd1f241db802abb21f201eb8012540111f1c
1d931f3a1d4c1f1e1d45273a1d4527bb01aa019b002a019bb2254a1fba01
9b0025017ab349293896b8017bb348283125b8017a403648289629482725
294c1f252946272729482756c80784075b07410732072b07280726072107
1b071408120810080e080c080a08080807b801acb23f1f06bb01ab003f00
1f01abb308060805b801aeb23f1f04bb01ad003f001f01adb70804080208
000814b8ffe0b40000010014b801abb41000000100b801abb60610000001
0006b801adb300000100b801ad401f040000010004100000010010020000
01000200000001000002010802004a00b0018db806008516763f183f123e
113946443e113946443e113946443e113946443e113946443e1139466044
3e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff1d59
2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b74752b2b2b65422b2b4b5279b376706a6645
6523456023456560234560b08b766818b080622020b16a704565234520b0
03266062636820b003266165b070236544b06a234420b176664565234520
b003266062636820b003266165b066236544b0762344b10066455458b166
406544b27640764523614459b36242725d456523456023456560234560b0
89766818b080622020b172424565234520b003266062636820b003266165
b042236544b072234420b1625d4565234520b003266062636820b0032661
65b05d236544b0622344b1005d455458b15d406544b26240624523614459
2b2b2b2b456953427374b8019a2045694b20b02853b049515a58b0206159
44b801a620456944750000>
[12609 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd

1 0 1 <> SBVPMX+Helvetica AddT42Char 
1 0 0 <00020042000004d005bd00030007003fb800532bb800082fb800092fb800
0810b80000d0b800002fb8000910b80003dcb80004dcb8000010b80007dc
00ba0007000000562bba0002000500562b3031331121112711211142048e
b8fce205bdfa43b8044dfbb30000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/space 1 def
end
SBVPMX+Helvetica /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/YYMPBE+Helvetica /SBVPMX+Helvetica findfont ct_VMDictPut/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 223{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf154.421 12.9569 mo( )sh160 13.4306 mo
176 13.4306 li
176 -2.5694 li
160 -2.5694 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[16 0 0 16 143.183 549.575 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 32 
/H 32 
/M[32 0 0 -32 0 32 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 32 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
6&CJ:DJsB.Eg<;kUp$\gSXGIoKmeE!Jo>CT[q/T09XM4-XJrD)YHb.+XJr8$W2m)&Z*^O3['6=1YFh/+
M9X9BrtPFL]YD(c\@oeucI^V(lg*7(aiUL[ruStlH@'sgG`9elcd^XtbK7l>['Zm'T!O,WX5R,=&g\WU
Mf3<FD/F`qUSFlrX.u&LNeW18HZF+^Oc#NH?VO5%Yc+b-ri@!<X/`.rWiN/"WM?8hWiie6Z*L+6Y'GQC
ci!eXlb0pC[^3BR`l-'IfAPcgp=74/XmuDj*P]:2Fa8:ZT[M68e_8R$`Po3RR[f\%PdeTFQC2)I(E/0e
CMRa%F.&i'XKA\/T9>(bJVT&7IWh3`]!nJeB2Z1BWiiG)YcY%/Wi)_nX/2MbSY;aIUTpu&X/E#*Q\3N3
rVneO_7?t\[^EKU`Q6BHd`Thfm_,s/Ye&Nfs1u3cH$FIoc-t4pf%AX#Ya^u1R?iYfQdOUHg=8Tu:*Y^M
CM[g1QD1.LT9GnIU6LImP_t<TNJWURXL`nNRq]:7Wi`>)YH+_(YHb:1Wi;_fVPKo]TrG;hUoLZ"X00Ru
rr4nN`4NXo]>D1h]>__3cHO&E_9L69\?4B!_>hHXEdDnmb0SJadDaM_c+9:<\YG=_S#j>ac.tggcH^Nf
I;Ne;NM*,BQ%=%9T9katM2I+GR$s@uGCk!MIsu.B[&0n,Xf&(qXg5:AX.uDaSu/<VVPg8nXg#=HZa[Tk
hu<X5dD<K/`R!&P^;e@BbJ)$5b/h`Ub.-[8hqS+GX)N30]?JaO`ibZFc*adKP+\G/^;R[nN1Lo^J??)8
MgoP\K:/:#R!rmbHAd]?LPU\>L]3TJS<ebbR='F3ZEU1*YH4h/YHYLF\?rE6SY<*[U84QcX/iY4Xg,UM
c/\j(hS[+A_p?uogWI[dbfe#K_TKj8_oLBT_<'5$^o2-qY/ec2bGL5HX1u-@NL?c9P..a7bf>1@^<NL`
ZAO*IGa+PXLP'PT?u'S(KRnf6KSl%]R\H:7YHX(6DmugGYH4h0X0]XV^V[RdW1fuYU8=`_WN3&%XJ`&&
\'!q7nB/\fcHP2)h<X+KdaH:Wc,n&I`4Nq0ZF&0IpqreER)I"^Xg=dJFdJ5\UQC_)P,5^u`6WnT`8'"S
Tot1WDhNt/Mg&lB=]eg3@W-L>LP1GGU9(PrOb&7.B54u[WirD#Xfeq?V4+Ei\Z2!fUnsunX/;_jXK/G"
YI)O?s4PfCajJ2^_7RtGhq65o_9U':]=52[c0!dWs8Tp(Ha0`][?P]I5;G`1E-c,BQCO_dcdlRXe%hfa
IWC""H?+aoMN;jc<DH:c<aB9UG(57!KpS^BYF'$.@rH\"Y-"XoWN*&#U5t1qS>)OEU7n]jXKS\'WN)2Y
TsM)Ili5\Z`QuiS_PjB?`QQEE^;S7@cb?oq[)W(E([&`-LT--2[Y@[<*#U"Y7870-KW_;U`dZFlfuQr\
<JdN8H#\_(Ob%=R;bKVO:K_+=BQANNIY*]GR[Sk^LPC)\X/i%qY,J7pR#mMjOd(rsYHkRC['d'1V6$Mo
X1,FPmeP)Ia3ViC]<SE6Ye%E`cdgClfZqOUa27?(hU1Q2P_,[<^RAn*.iT9>+##TJDN:g%XF@RlW4pNF
Wij%0P'M,7V2fn8=AMU\6pjIA=C#BOC1_dTNL-/mGase=[]?=)WM?MlTpq4)L5(,1OK-%8^q.7`Vl?`'
XKSh7_=6j5]>2n:`O`(@S=>G$V8:jFimuZ#aMl!@b.Z'bc'3ald\)t53[PaX%L`[Y,Y<9PPCA"g_l^\u
^l?USTpC"FT;[^#CfjJ+76s'q5u1?X>[_)TH]FSaK5m$KI'KfQX.u>fW1]QAN/W@(GD_]XZFI?SZ)F_)
Wh$DrZbc)(]tM>4d)EVuTp^aTF-Wo._T^E\b/2'6jitiWj3=$DbKH<MCc`s^&IepF!u*"1:k!+pL7bQj
bGJggeZ"XTE13YkO_Rol8jkj*1bqEd852r`?ZV^4P(9-`X-U&lZEC$sWNW1fO,SgEA70eCN/NpgUp7,)
XKnh*X0Kb?r5$(d`6-!,W1&Ei?rhH0PF7oE_TBF%bi$7c[DBhEMp'AJZuS5S(_6iS!!!-1&:P?6/kCoB
eA865[b8olH?5ISTqZC.<)6%L4Z>)Q5"AFI='p*NY*j.0Mg0QPW26PmV5^AeQAU<>HYZr#G_D*<Q`.6j
WN*M4XL#"Ep%uY:_S"+2YF^f#H"g>cEIj=@WQ*>n[)LV#eE?,AOF4sp`li3a-Q!6p!s&B%"+COl)C\FJ
eCM[#h7'&FPD4=GSu/5s?<^T<<CfDA7o3H$?=72_WiMYH]:X=iXJi%qWiN,"WK3(3SWJ\ZLm=R!Lm,'L
WN*%sXei/$a5m$:^q%,(dB9:U\"o:EQ)M.%UT;Yg\$a)cWl4H#^o31$bL4RM;CWqR0,=p#%t5W]5UA0m
PLS.,Rc2DSMOKKPL75--AmSeVD-g.15YY<gB4>7ZFK;U<I[lCFFI]>/Wi<#!Vj`j>RAm!FN1$iMS!B>>
YH"S'YcFh,Yf#)Ze\\`3d^lBUU:eFDQD_R2XfeM9caC-lftYr#or#0`X2<<$?T]r)5=m^I$[s-a;*d,q
=,k_acDT!uSW^@j\Z)7!N+5jnHAc3590cQaEKbERAT!s"SXkb#HZGLTUSOumWL8UGR>lolR>@W,L7>*1
O/]CbXf8J(Y-k71Z*LpM`l5.)PCeCd[$\M/K8ZhHY0";j]#)eBlLLD!bIu-MY!sU768]T3+FX\W1a5b(
7l581\]N+1\=T"p^S@QiI!K$p='8^,;b]ea<a9<K?<h&]Fel-l]WIg!XeMYkTWFH7URRR-PbO86L67n$
SW'bKPd%0oXfe^sX/N;?[(jSjaK(bfUW'"@UmdXPaf`k%TsV2XWjB'uk*rclCkt.o4>%lp+atmU3#s8#
7meb<Bg^;%Zf9`WZ)a@`R:B`3:/=VZ9MA)L<)Zaq<`E11?$X#^W2?buW2Z5_YC`C?NgQ?(OeShDX-em5
Q&h$/L9%GXWi`.g['d$Q^mqjWZG+)\Tt\LG_Q]W2\$`BkS@,B(\$i]@g=M(nbp#SD*@E3X(k*ka)ET;d
,qL;i@NU$Xg=Fp/Nh)b_R@%r$>YR[T6U=C<7T<8Y8P;l^@VU7CM4oL,WhZIuS#q^0W0s'>Pae_VV5]rH
QC*u'YDT]jWMQnuTu4`ZXhq<Acb$N\SZ']KY/7]EUTq#+e=tCHfY?:KYI_s_L<Mq78gG8f&UkEH/KQr&
(`=A=.q:91YclEVgp)E_J=hC/?!L&e3]fo.77C*R770O>>@VE!H%Us1^UKN2CRg`SP,jq6M27_+U7A?`
O,K9nT!FutPb51_Xf9P&H,A(PZdHCWKS68KZ^nhBP)Pj1][Et6nBfV6X06]I'sMpV0hro&"b$Up2]EJk
2\-9/,!'C/[q^l5\E2P0U6M<rDdcpF5=7h0;+X5W=%>GA9jM=HKm8-BUU%7^VLtY&R$Xn:MiO@)WL&[C
Wh,'.RAmF#WIgeEWh6,X^4jMBfW`c1R#[uG];h%$\tXk<Vo-d+jMT-P]Wnh9d58^=?8kb%$[rL"+>OlH
1HZN[$m&&TLo<[peC2"\Jq%lYBQ/f>9h%fJ8PN,d<DZ:Z85EZ=P'h>!ZG3`NW3iA/Y,ne'OH?07Uo:#^
XfS@hO-clOYE=+(X0%qhi7uZUmbu:/YbSD.YHtU?[^*'<R]"$HaORB6Yc>(3TW`TsEe1T#***au,U"Th
2*!?7*>0JlR)W_iJ_]=r^0b2S@:*iKDc',&;G^(_;,C(e;bp>(JrtG)G(#:S_7mXqYcG48U5OtqSt).1
QC4PKR?X2:['#L@Vm35#Xo88Er:@>6Z)Fn5Z`KaeVQ754Yck[dak*uYhpo$1F`;;1=c1jBINB7J.jlDW
*?cge-m:!:ZG^99L8_B0f4\`'@VC+aGudC-;H$@e:/Otm<(p>0MMch4Hu*DY\"]_,Z^I/YU5Xh`Qa*lo
UTCc(QA^s$N/`OILmP0JWp/OCs5(E#c`s7G[(X#?Q(kLs[&gIETW>K(YKH.IY$k[PCf=feIXWOR(+21$
+WW$l6n'!%>YS6g8OZTna4kQKFa&4YNf.488PMoQ8k`#Z<)#keI"?g$I=-KaH@B1,FanCDJt86_Ko_aq
R@0bOSW/;kQYgY_C2&=%]Y7rdKq`s.K=SI\S[,SrN/a7/[&TItZYjc4EGUH\h:;c5)_i0;-81$2&J6!,
*>9/01G'LT1L(P,*Y8f3K<Vh-F)cDOHua[Q<DZOer^n/(:fL:hA:o5UJ8f[YG^X[E@U<JWBk)1FN/!@T
rf8mqR?NVhT7:<^CgCLbDh=KnBjb@]DImsjVkU;sW1BQNX0/Cr\W^Q9CgCLbFd'`M#R(D@ILZW!4<PI_
*>fM+(*b.I*(Vdi$P3FG%21F+C2.R,F)5]3F^S9N;G9ML;,g\%??C[?H$!kGFa8C_>?tKB@TcuDLm!UU
N00$VO,f<^PFH;mAme\MA7TFk@:<GK?X-uGQF<rtZa-$cV6-u/Z+5$_@U`DI@:jFu!sA]1IKflW"YhhY
,Tn';&02uE.PP$=":,25#6tSI&Sc-"Ao)<rEGT/q>Z4<c8QJu#@V^C7GB[tGF)lDKH<ac]<*3=(AW<:E
P*:fTKT1qWQ_9^R?t!8G?t*b^BOY=Q<E<F/A"C36['Z`kLnUoW\$2iD>[giC?sdP\B*8>>IK9KP!XCGM
2(p9n$Oe+(2*=T6#6b>7"U5/<$k$]`BOGOiBQRfqCM$aL9hn_qBQ%g6E-$/;E,fi<GBd4l;bpJ!<c=%e
Tp_+&L51PDR@Th+>?kQ;>[1WD@qJqL=&)h%=ELLF]"G/=NfTU-[CEQ8?s-l;>?tNA@q,QAIK9EM!s0&i
4&na$*"W]#.RdB74Tkik!WrQ."UGEE@U*DTB4uBr>\S.m@pWJNE-cP:GB@eFDJa<0D/aGj:eF\d=''O/
OeSS;P*M8pQ^sD*IpH/^=^#$7>[:`9;+aef>ZZ<TT=;D?XJ_bfZF[36O'Ysq>$G69=^>85(BFL:!<N<>
2'u1.8Mr.O02$%P1FNA-"T/@1"9iCH>[h>[BQ7Tg@Vg.,EccMSH>$o9G&;/9C2Id)CMHaD9N+qn=a60i
S"?7DR[fn;Q&1KB>Zb04<a&X0>$4j&8lJbp>^`WCXgkaGZ`pmK[@j1E?!(99=BSd/=B6@A!<<-$!Ws8u
,!8b0>#SI0Cf`2@*!?<F!s/T'!e:~>

%%EndBinary
grestore
np
346.168 15.2306 mo
346.926 15.2306 li
346.926 4.62006 li
346.168 4.62006 li
cp
.0708324 .0509346 .053254 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
%ADOBeginSubsetFont: KUDAAA+Helvetica-Bold Initial
ct_T42Dict begin
0.004 -0.02 0.766 0.738
 256 array 0 1 255 {1 index exch /.notdef put} for  /KUDAAA+Helvetica-Bold
Type42DictBegin
[<00010000000b000b000b000b6376742067412940000000bc000003866670
676dd065e7a40000044400000a13676c7966e700b08a000012f80000047c
68656164f09becd000000e5800000036686865610986070d00000e900000
0024686d74782075026100000eb40000001c6c6f636103dc052c00000ed0
000000106d617870086b0afc00000ee0000000206e616d65c9d4fbc70000
0f000000002770726570fd52896600000f28000003cf6764697200000000
000000000000000005c0001105c2002d0597001d0442001d0000ffda0000
ffdb0000ffdafe53ffef05d0000afffdffed03340000012200000122dffb
011400af000700b7007e000400d200aa0109002300ed013200d9011d012a
00d800fe00db00e2001a008b00a0001a004500e801f6000900e901280132
00360082009e009fff700070003f003f00e801050015003800e9ff7bffc8
fff90042008a00c401070113011dffb9002f00870087009a009c010c0262
ffb10018004c00770080008200c900daffb2ffea001a003600e50111012f
043bffdd00020005001a0039008900aa00b701210123012a015bffe50002
00180023005c00aaff4dff76ffb2ffef001a002f004e007b008a00e1011f
0126012b019a01de03edff80ff8e0007001c004e005500630063006d0081
0098009c00ad011f01260162041c051500390044004b0063008e00cc00e8
00f2010001290142017802d503ea03f0043b049affc400050055005c0060
009f0103011d012401550164017001ad01b401c301f602370261033903d5
047004a100020055008800a100bd00c700d300dd00eb00ed00fa00fd0104
012b013e014f017b019d01ad01e20233025d027d028c02da02ef033103de
0407048b058505bbff04ffd5fffa0007001e002a003b0047005100580065
00650066006e0075007f00840107009700b100c300cc00df00df010a0110
012f013101470154015b016b0179009101a401ba01dc01e401e601e901f6
0213021f0223022f0276027d0282028902ad02b202b902ed03110374037d
03c003de03f60415045d04c004c004df052d0574061c064b0751fe94fedf
ff2dff90ff9affea0016001600240029002d003e0104006d006d00840087
0089008e009c00a400ab00ae00b200b2fffb013900c400d100df00e100ef
00f70121011c011c012101320138015001510154016c016d017f019801a4
01aa01b601ba01bb01bb00d701d701fb01fb01fe00190209022d025b0261
02790279029a009802d302da02ef030c03210328032d034b0353fff103ad
03b103f20425045a0471047b048a0498049f051c053d0557055a05700595
05b605cb05d605ef05f4061d068706a406b406d307080734079807fe0122
01320120012500b400be0082009603700132012400430184011d015600cc
010500ed00c500fb00f900c000a7011d00fe035500880026ffa100b8ff88
00dd00bd00b5037c003c00910293024aff3f03a803090132fff700820030
002a002a002a002a002a0000402a292827262524232221201f1e1d1c1b1a
191817161514131211100f0e0d0c0b0a090807060504030201002c452346
6020b02660b004262348482d2c452346236120b02661b004262348482d2c
45234660b0206120b04660b004262348482d2c4523462361b0206020b026
61b02061b004262348482d2c45234660b0406120b06660b004262348482d
2c4523462361b0406020b02661b04061b004262348482d2c0110203c003c
2d2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320
b04d44235920b09051582320b00d44235921212d2c20204518684420b001
602045b04676688a4560442d2c01b9400000000a2d2c00b9000040000b2d
2c2045b00043617d6818b0004360442d2c45b01a234445b01923442d2c20
45b00325456164b050515845441b2121592d2cb00143632362b0002342b0
0f2b2d2c2045b0004360442d2c20b0032552582359212d2c69b04061b000
8b0c6423648bb8400062600c642364615c58b0036159b002602d2c45b011
2bb0172344b0177ae5182d2c45b0112bb01723442d2c45b0112bb017458c
b0172344b0177ae5182d2cb002254661658a46b040608b482d2cb0022546
608a46b040618c482d2c4b53205c58b002855958b00185592d2c20b00325
45b019234445b01a23444565234520b00325606a20b009234223688a6a60
6120b0005058b21a401a4523604459b0005258b219401945236044592d2c
b9187e3b210b2d2cb92d412d410b2d2cb93b21187e0b2d2cb93b21e7830b
2d2cb92d41d2c00b2d2cb9187ec4e00b2d2c4b525845441b2121592d2c01
20b003252349b04060b0206320b000525823b002253823b002256538008a
63381b212121212159012d2c456920b00943b0022660b00325b005254961
b0805358b21940194523616844b21a401a4523606a44b209191a45652345
604259b00943608a103a2d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2c764520b0032545
23616818236860442d2c7645b00325452361682318456860442d2c7645b0
032545616823452361442db8002a2c4bb800095058b101018e59b801ff85
b800441db9000900035f5e2db8002b2c2020456944b001602db8002c2cb8
002b2a212db8002d2c2046b003254652582359208a208a49648a20462068
6164b004254620686164525823658a592f20b00053586920b000545821b0
40591b6920b000545821b0406559593a2db8002e2c2046b0042546525823
8a592046206a6164b0042546206a61645258238a592ffd2db8002f2c4b20
b0032650585158b080441bb04044591b21212045b0c05058b0c0441b2159
592db800302c2020456944b001602020457d691844b001602db800312cb8
00302a2db800322c4b20b003265358b0801bb040598a8a20b00326535823
21b0c08a8a1b8a235920b0032653582321b801008a8a1b8a235920b00326
53582321b801408a8a1b8a235920b80003265358b0032545b80180505823
21b8018023211bb003254523212321591b2159442db800332c4b53584544
1b2121592db800342c4bb800095058b101018e59b801ff85b800441db900
0900035f5e2db800352c2020456944b001602db800362cb800352a212db8
00372c2046b003254652582359208a208a49648a204620686164b0042546
20686164525823658a592f20b00053586920b000545821b040591b6920b0
00545821b0406559593a2db800382c2046b00425465258238a592046206a
6164b0042546206a61645258238a592ffd2db800392c4b20b00326505851
58b080441bb04044591b21212045b0c05058b0c0441b2159592db8003a2c
2020456944b001602020457d691844b001602db8003b2cb8003a2a2db800
3c2c4b20b003265358b0801bb040598a8a20b0032653582321b0c08a8a1b
8a235920b0032653582321b801008a8a1b8a235920b0032653582321b801
408a8a1b8a235920b80003265358b0032545b8018050582321b801802321
1bb003254523212321591b2159442db8003d2c4b535845441b2121592db8
003e2c4bb800095058b101018e59b801ff85b800441db9000900035f5e2d
b8003f2c2020456944b001602db800402cb8003f2a212db800412c2046b0
03254652582359208a208a49648a204620686164b0042546206861645258
23658a592f20b00053586920b000545821b040591b6920b000545821b040
6559593a2db800422c2046b00425465258238a592046206a6164b0042546
206a61645258238a592ffd2db800432c4b20b0032650585158b080441bb0
4044591b21212045b0c05058b0c0441b2159592db800442c2020456944b0
01602020457d691844b001602db800452cb800442a2db800462c4b20b003
265358b0801bb040598a8a20b0032653582321b0c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b80003265358b0032545b8018050582321b8018023211bb003254523
212321591b2159442db800472c4b535845441b2121592db800482c4bb800
095058b101018e59b801ff85b800441db9000900035f5e2db800492c2020
456944b001602db8004a2cb800492a212db8004b2c2046b0032546525823
59208a208a49648a204620686164b004254620686164525823658a592f20
b00053586920b000545821b040591b6920b000545821b0406559593a2db8
004c2c2046b00425465258238a592046206a6164b0042546206a61645258
238a592ffd2db8004d2c4b20b0032650585158b080441bb04044591b2121
2045b0c05058b0c0441b2159592db8004e2c2020456944b001602020457d
691844b001602db8004f2cb8004e2a2db800502c4b20b003265358b0801b
b040598a8a20b0032653582321b0c08a8a1b8a235920b0032653582321b8
01008a8a1b8a235920b0032653582321b801408a8a1b8a235920b8000326
5358b0032545b8018050582321b8018023211bb003254523212321591b21
59442db800512c4b535845441b2121592db800522c4bb800095058b10101
8e59b801ff85b800441db9000900035f5e2db800532c2020456944b00160
2db800542cb800532a212db800552c2046b003254652582359208a208a49
648a204620686164b004254620686164525823658a592f20b00053586920
b000545821b040591b6920b000545821b0406559593a2db800562c2046b0
0425465258238a592046206a6164b0042546206a61645258238a592ffd2d
b800572c4b20b0032650585158b080441bb04044591b21212045b0c05058
b0c0441b2159592db800582c2020456944b001602020457d691844b00160
2db800592cb800582a2db8005a2c4b20b003265358b0801bb040598a8a20
b0032653582321b0c08a8a1b8a235920b0032653582321b801008a8a1b8a
235920b0032653582321b801408a8a1b8a235920b80003265358b0032545
b8018050582321b8018023211bb003254523212321591b2159442db8005b
2c4b535845441b2121592d000001000000010000a03931bd5f0f3cf50011
080000000000c5a3d10600000000c5a3d106000effd7062105ef00010009
0001000000000000000100000629fe2900000c01f7dcfcdb0b7e00010000
000000000000000000000000000705c7009a063900650473002f02390089
031d00820473001a0639000e00000034008a011e0152019c0200023e0001
00000007006a0003006c0008000200100010005c000007e80a1300040001
0000000100120001000000000006001500004a58554146412b48656c7665
746963612d426f6c6400b800522bb800482bb8003e2bb800342bb8002a2b
b10840ba019000145df44009011f04000b1fd819eebe012e000d00e6012e
000d00b0012e400c0d000963833c1f63838348294109014b00370401001f
014500240401001f0144b224ab1fb8013eb224231fb8013db224231fb801
02b2371d1fb80100400937241ffd37621ffc37b80801401b1ff824931ff7
24931ff6243f1ff524311fd1371d1fd037471fcd41b80801b21fcb2ab802
01b21fca24b80401400f1fc824811fb537291fb4373b1fb227b80401b21f
b141b80401b61fa437811fa384b80401b21fa22ab80401b21fa124b8019a
b21fa024b8019ab61f9f243f1f9683b80401b21f9527b80401b21f8227b8
0401b21f7084b80801b21f6fb3b80801b21f6eb3b802abb61f6d24261f62
24b80101400b1f5d246c1f5c24391f5441b80125b21f4d27b80401b61f4c
27cd1f4b41b80401b21f4024b8019ab21f3683b80401b21f3524b80201b2
1f3224b8019ab61f2c24bb1f2884b80801b21f2241b8040140131f20244c
1f1d24261f2ca0961f2c245e1f412ab801a8b748282a2448279636b801f4
b21f4d27b801f4b21f9527b801f4b21f6e27b801f4b21f6327bd01a70047
0029015a00250199b348296fb3b80190b21f83b3b8019ab348283725b803
e840121fb327482784274827362748272527482755b80154402c07970764
07550733072b072907260721071e071b071408120810080e080c080a0808
08060804080208000814b8ffe0402b000001001406100000010006040000
01000410000001001002000001000200000001000002010802004a00b806
008516763f183f123e113946443e113946443e113946443e113946443e11
394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b
2b2b2b18011db0964b5358b0aa1d59b0324b5358b0ff1d592b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b65422b2b2b4b5279b35279eb56456523456023456560234560
b08b766818b080622020b1eb794565234520b003266062636820b0032661
65b079236544b0eb234420b152564565234520b003266062636820b00326
6165b056236544b0522344b10056455458b156406544b252405245236144
59b35045484e456523456023456560234560b089766818b080622020b148
454565234520b003266062636820b003266165b045236544b048234420b1
504e4565234520b003266062636820b003266165b04e236544b0502344b1
004e455458b14e406544b250405045236144592b2b456953420000>
[1149 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 104 1 <00030065ffd705ea05ef000b001b001c00414027160c16121914191a971a
0505411c17030b410f091c02371c131b1a1e083713191d1edf21eb56182b
2b4ef44ded4e10f64d1139ed2f003fed3f3ced3130005d24123534022322
0215141233240706212027261110373621201716110103dfd7d7b7b7dada
b702c2dfa7fec4fec4a7e0e0a7013c013ca7dffd3edc010ef9f8010ffef2
f9f9fef27ad3acacd3018d0195cbacaccbfe6b030c00>KUDAAA+Helvetica-Bold AddT42Char 
1 276 2 <0003002fffdc043a045f00060021002200ab4049460887149701990a0406
0109050610051a4b05461049208601850f871f0a03160317131613174808
4c164c17491a5c165c175a1adc01db04e91de720f720104a014610880583
100402b8019540334f0e5f0e6f0e030e0e1b062422210717122c1b0b1603
02220336177b221e600c800c020c1a24021f0e951e1923249821484e182b
2b4ef44dfde44e10f65d4d1139e4ed2f111239003fedcd3f3ced12392f5d
fd313000715d01715d000607212e01233616171617160721161716333237
3637210607062322001110003b0101d06d0e01bb077b5b88da4740130b02
fd1606613b5358371e1701230b5a8cfcd0fec2011fe51403747c6a7175eb
666e61804b8da44229321b3061649f010c012e011b012e000000>KUDAAA+Helvetica-Bold AddT42Char 
1 572 3 <00020089000001aa05cb00030007003b40224c004c015c005c010401b102
000406070a0917171a0006270107190809b2215045182b2b4ef43c4dfd3c
4e456544e6003f3f3f4ded3130005d012111210121112101aafedf0121fe
df0121fedf04c40107fe77fbbe00>KUDAAA+Helvetica-Bold AddT42Char 
1 676 4 <00010082000002fb045c0013004ab900030147b3020f0d06b80147401913
070d060c0a200230024002031517171a020e0b270c191415b80164b32150
66182b2b4ef44dfdc4d44e456544e64d5d003f3f3fed1139d4ed31300016
17112e01232207061511211121153637363302dd0b131b2a0dac3b21fee1
011042315080045c0101fedc0302703f83fdf70442be6d2843000000>KUDAAA+Helvetica-Bold AddT42Char 
1 824 5 <0001001a0000045704420006009e404f270654066406a506b50605040601
1002470457047a0274037704064701880087059705a705b705c803e701f7
01090320040427120505060220010127120006000602050401000603020a
0802020001b8010cb2030506b8010cb6041907656066182b19764e10f418
4dfd3939fd39391910c618003f3c3f3c3c3c123905872e2b7d104b51587a
59c4872e182b7d104b51587a59c43130015d7100715d0121012101211303
250132fe77fed3fe790140e30442fbbe0442fcdc>KUDAAA+Helvetica-Bold AddT42Char 
1 1024 6 <0001000e000006210442000c0039b8002a2b00b800052fb800082fb80000
2fb800032fb8000a2fba000200050000111239ba000700050000111239ba
000c00050000111239303101211b012101210b012101211302870121a6aa
0129fec4fedbabadfed8fece0132aa0442fcef0311fbbe031afce60442fc
f2000000>KUDAAA+Helvetica-Bold AddT42Char 
1 0 0 <0002009a0000053d05c200030007003e402105061d02010004071d03000a
05041d0303021a0906071d0100190809aa216c3c182b2b4ef43c4dfd3c4e
10f63c4d10fd3c003f3cfd3c3f3cfd3c313033112111271121119a04a3b8
fccd05c2fa3eb80452fbae000000>KUDAAA+Helvetica-Bold AddT42Char 
KUDAAA+Helvetica-Bold /CharStrings get begin
/O 1 def
/e 2 def
/i 3 def
/r 4 def
/v 5 def
/w 6 def
end
KUDAAA+Helvetica-Bold /Encoding get
dup 79 /O put
dup 101 /e put
dup 105 /i put
dup 114 /r put
dup 118 /v put
dup 119 /w put
pop
end
%ADOEndSubsetFont
/YYMPBF+Helvetica-Bold /KUDAAA+Helvetica-Bold findfont ct_VMDictPut/YYMPBF+Helvetica-Bold*1 [79{/.notdef}rp /O 21{/.notdef}rp /e 3{/.notdef}rp /i 8{/.notdef}rp /r 3{/.notdef}rp /v /w 136{/.notdef}rp]YYMPBF+Helvetica-Bold nfYYMPBF+Helvetica-Bold*1 [9.09474 0 0 -9.09474 0 0 ]msf302.211 12.9569 mo(Overview)[7.07571 5.05667 5.05667 3.5379 5.05667 2.52835 5.05667 0 ]xsh.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf346.926 12.9569 mo( )sh414.379 15.2306 mo
415.137 15.2306 li
415.137 4.62006 li
414.379 4.62006 li
cp
.0708324 .0509346 .053254 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 4208 23 <000100af000004aa05bd000900394018071e040409031e0100020908066b
011a0b03082500190a0bb80157b32195dc182b2b4ef44dfd3c4e10f64de4
003f3f3ced12392ffd313013211521112115211123af03fbfccc02d1fd2f
c705bdb4fe42affd6400>SBVPMX+Helvetica AddT42Char 
1 4420 25 <000100c90000019205bd00030017b8002b2bba00010000002e2b00b80000
2fb800022f303113331123c9c9c905bdfa43>SBVPMX+Helvetica AddT42Char 
1 7188 38 <00030052ffdc04470449000f003b003c00dd40382a30010a100b1b0c1c27
33481069096a10073908120c09031b320724091d100c1d3b2b022e293bb7
3b023b322a2512100705081c2722171cb8018a4023171d1f07271d2e0b02
1d350b3c073c3c1c1407292aa8241a3e1b291c4a0f2738193d3ebc019700
2100b9019600182b2b4ef44dedf4ed4e10f64de4fdc412392f003f3fed3f
ed3feded1239111217395d1112392eed2eed011112391117393130437940
28363715220001192501360f2100181e1b21001620142101212200370221
001a1d1721011521172101002b2b2b01103c2b2b2b2b818181005d015d24
16333237363d010e010f0106070615013637363534262322070607233e01
333217161511141633323637150e0123222726270e012322263534363713
010e724e5f59962168326d62315301b43e150c837a8d3b210aa805f7a3bd
767517250c1e112a2c265d2a160937ce7c95bdba978acf5a2c49a691151c
060e0d1c2f67016c082c182d5c534c2a53c69b484898fd971c220303850c
06422340486ab58895a41301e400>SBVPMX+Helvetica AddT42Char 
1 8064 41 <00020038ffda03ed05c2000b001d00774032370e470e570ea704a91b0525
0814020f1d1000081d1d07130a021d170b052e132e102911121a1f0b271a
191e1f87217242182b2b4ef44ded4e10f63c4dfde4e4003fed3f3fed3f11
39113931304379401a181c090a000101180b2600091c0b26000019022600
0a1b0826012b2b012b2b818181005d121633323635342623220615001716
1711331123350e0123220035341233f692a17da1a67a88a9018a53303dad
a23fac6fb3fefaefde015fe8d7c9cbc3d0ca0237341e4b021dfa3e956358
012dfaea0157>SBVPMX+Helvetica AddT42Char 
1 8280 42 <00030048ffda041a0449001c00240025010c40799708991aa71f03050e02
0f0514150e120f1514400c401408291a014b0bb603c701c603c71bd808d9
09d61fd823e817e8230bc711c712025c080521240f9a161d243906070716
211d1c070a1d160b2507971ca71cb71cd71c0425160f251c05190a0c0711
0e270f1d27051a27242e072719192627d421a65d182b2b4ef44dfde44e10
f64dedd4fd391239391112393912392f5d003f3fed3fed12392f3cfd3c10
ed1112393130437940460023040503050205010504061f26111012101310
141004060c25221b24260020001d26011e1d09170726000b150e26010d0e
231a2126011e0521260108180a26000d100a2600002b2b2b2b01103c2b2b
103c2b2b2b2a2b2a8101715d00715d5d00161716171615211e0133323736
37330e01070607062322001110003301262726232206070102b4d6383612
10fcef0590978d543014b1074f3152794152c8feea0118e2011f0b284aad
7ca805012304476b55516c4aa2a3c55d36473b912e501c10012301060102
0142fe26754682b38a01dc000000>SBVPMX+Helvetica AddT42Char 
1 9332 46 <000200840000013b05bd000300070036401c07e50400010006030a091717
1a06010229070300190809aa216242182b2b4ef43c4dc4fd3cc44e456544
e6003f3f3c3f4ded3130133311231133152384b7b7b7b7042afbd605bdcc
0000>SBVPMX+Helvetica AddT42Char 
1 9964 50 <00020084000003ed04490019001a005e4031b706c7060204061406271476
06740705140c021418101d05070006180b0a1a071a1a000c29091a1c012e
18291900191b1cb80106b3216242182b2b4ef43c4dfde44e10f64ded1239
2f003f3f3c3f3fed1139390112393130005d015d1333153e013332171615
11231134272623220706070e011511230184ab4caa68e4502cb71d307e40
294a382d1bb401a7042f985e529f57a2fd5102a3623c640d1642357169fd
cf044900>SBVPMX+Helvetica AddT42Char 
1 11204 55 <00010017ffef0209055a00180052b50d2e0ac00e01b8013f402504163917
03060e0a111a17171a0301062900150e150f031f030203fc1619191afc21
677d182b2b4ef44dfd5d39c42f3cfd3c104e456544e6002f3f3f3c4dfd3c
ed10fde431301333113315231114171633323637150e0123222635112335
33a8b6abab2615310d1e141f43277e5a9191055afed593fd4538130b0102
8e0908816702c5930000>SBVPMX+Helvetica AddT42Char 
1 11544 57 <0001000b000003ea042f00060102402e4201c50102006700680268036706
87048805a700a802084700480245044a0586048905c704c8050849287328
0708b80109b321677e182b2b4b5279b8ff70b40105042004b80183b70303
6d1202010205b80183401e06066d12000001050604030101050203060300
0605040a0817171a03af02ba018400000184b301af0619194ef4184dfde0
e0fd194e456544e618003f3c3f173c1239011112391239074d2e2b104ee4
4d072e2b104ee44d2b4b5179402502291203030400291206060501050203
0603000605040a0817171a020403af050001af0619194ef4184dfd3939fd
3939194e456544e618003f3c3f173c12390507102b07102b313001715d00
5d7113090133012301dc011e012bc5fe6cc0fe75042ffc980368fbd1042f
>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/F 23 def
/I 25 def
/a 38 def
/d 41 def
/e 42 def
/i 46 def
/n 50 def
/t 55 def
/v 57 def
end
SBVPMX+Helvetica /Encoding get
dup 70 /F put
dup 73 /I put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 110 /n put
dup 116 /t put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 37{/.notdef}rp /F 2{/.notdef}rp /I 23{/.notdef}rp /a 2{/.notdef}rp /d /e 3{/.notdef}rp /i 4{/.notdef}rp /n 5{/.notdef}rp /t /.notdef /v 137{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf350.716 12.9569 mo(Find and Invite)[5.55679 2.01904 5.05667 5.55688 2.28278 5.05667 5.05667 5.80246 2.28278 2.52832 5.05667 4.54736 2.01904 2.52832 0 ]xsh.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf415.137 12.9569 mo( )sh493.2 15.2306 mo
493.958 15.2306 li
493.958 4.62006 li
493.2 4.62006 li
cp
.0708324 .0509346 .053254 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 6992 37 <0002002a0000054705bd00080009008f402a880401142804251203020300
2512010102050802080701030403000207080903090904000b17171a0304
b801004009060202050625010807b80100b500190a8e5e182b194e10f44d
f43c3918fd3c393d2f1019f4394e456544e6111239182f003f3f3f173c12
39392e3c05874d2e2b872e182b4b5279b7050402030800010204877d10c4
04877d10c43130015d133309013301112311132ae801a601a6e9fdd5c766
05bdfd3e02c2fc93fdb00250036d0000>SBVPMX+Helvetica AddT42Char 
1 7804 40 <0002003bffe103d0044e001a001b00a7402fa719019818a808aa18034a08
119b14030314061d1a070d1d140b1b071b1b1710271201032702111a1d0a
2717191c1db80107b321727d182b2b4ef44ded4e10f63c4ded3939ed1239
2f003f3fed3fed12392f10ed313043794034001908250c150a26000e1310
260112110f1007190a26000500032101010204030b160d26000f120d2600
091806260104010621012b2b2b2b01103c103c2b2b103c103c2b2b2b8100
5d015d001617232e012322070615141633323637330e0123220235100033
0702d6e317af10727eac4a308892708319af1ef0bbd2fa0112d41c044eb0
d76383a86da0a1dc8977d5c50133e6011a013a05>SBVPMX+Helvetica AddT42Char 
1 10148 51 <0003003bffd90421044e000c0018001900904033980896109916a504a808
a610a916b808c808d704e50ee9140c3a08061d18070c1d120b1907191915
02270f1a1b092715191a1bb80109b321725d182b2b4ef44ded4e10f64ded
12392f003f3fed3fed31304379402c001704260b13092600001102260107
17092600050d0226010a140c260001100c26000816062601030e0626012b
2b2b2b012b2b2b2b2b81005d241235342726232206151416331200111002
212200351000330702e085304cbaa59696a3d6011efcfef7ddfefc0112e7
0674010fa6965e94fcb2abe403dafeecfef4fefdfeae012bfc010e014005
>SBVPMX+Helvetica AddT42Char 
1 10616 53 <000100890000029204470011004f40262703260d37034704040e0810020e
0911090c270805070006110a081a13012e10291100191213b80145b32162
7e182b2b4ef43c4dfde44e10e6003f3f4d3fc4fdc4111239390111123931
30005d1333153e0133321617152e0123220615112389ab15a46b05181d10
1b108892b4042fb9369b0203be0302af72fd9800>SBVPMX+Helvetica AddT42Char 
1 10756 54 <00020042ffd703b6044b002e002f012e408f38099805961299149815982a
062824252736214621472447275624572766246726790c790d790e762374
2474257426a61ea82c1303000b15052d042e13001a151b171c18152d142e
280f0b6908262536250225220d0a042b1318c61c1d1307041d2e9a2b0b2f
07090e100207002f212f1a1f18161827173e28260727281a310e1f27103e
00272e193031b221a65d182b2b4ef44dedf4fd394e10f64dfd3910f4fd39
11123939392f111239113939003f3feded3feded11121739713130437940
4c012d022615251a26210e1f21000926072101032c002100052a0721011d
121f21001b14182101200f22210021220e0d08270a21012625090a012d04
210006290421001e111c210119161c2101002b2b2b2b103c103c2b103c10
3c2b012b2b2b2b2b2b2b2b2b81005d5d015d13161716333236353427262f
01262726353436333217160723262726232206151417161f011617161514
062322262701ef082544a864983d27738f894174dbb9f26b4302aa05263e
99666945284e77c24269d9deefc70701b701505a3057575b4524161d2422
2a498198bc8e5a683d32474e40462a19131d2f2c45948fd0d9a002f9>SBVPMX+Helvetica AddT42Char 
1 11364 56 <00020080ffe303de044900170018005e403ab814c8140209130814191319
1428067703d707070800050e0a00060d0a051d120b180718180b160d2e0a
290c0b1a1a01291619191ad2216242182b2b4ef44ded4e10f63c4dfde411
12392f003f3fed3f3f3c391112393130005d015d01111417163332373635
11331123370607062322272635112501381a3083bc4425b4aa0223346793
e5532d01af042ffd39523460a85a9d020efbd19e3d2a5499528902d81a00
>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/Y 37 def
/c 40 def
/o 51 def
/r 53 def
/s 54 def
/u 56 def
end
SBVPMX+Helvetica /Encoding get
dup 89 /Y put
dup 99 /c put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 37{/.notdef}rp /F 2{/.notdef}rp /I 15{/.notdef}rp /Y 7{/.notdef}rp /a /.notdef /c /d /e 3{/.notdef}rp /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /s /t /u /v 137{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf418.926 12.9569 mo(Your connections)[6.06625 5.0567 5.05667 3.51959 2.28275 4.54736 5.05667 5.05667 5.05667 5.05667 4.54739 2.52832 2.01904 5.05667 5.05667 0 ]xsh.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf493.958 12.9569 mo( )sh555.347 15.2306 mo
556.105 15.2306 li
556.105 4.62006 li
555.347 4.62006 li
cp
.0708324 .0509346 .053254 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf497.747 12.9569 mo(Your account)[6.06625 5.05667 5.05667 3.51959 2.28278 5.05664 4.54736 4.54736 5.0567 5.05664 5.0567 0 ]xsh.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf556.105 12.9569 mo( )sh.100832 .883238 1 .0325933 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 5752 32 <00020060ffd504f605e5002f003000fe405e290f27232626360e35214726
62267a0e7724096b08180e172502590e680eaa22030a0e3a2224220a0304
1c1886142f2f2b1c3a1403043a2b0930020a0e081124221f283030111825
17490825281a321f25114900252f193132a0216a89182b2b4ef44dedf4ed
4e10f64dedf4ed12392f1211393912113939003f3fed3fed12392f10ed11
1217392efd335d7131304379404d282e111f0008022602262d2506251a26
032c002b002d2e032c002b00052a082b011d131f2b001b15182b01191801
2d042b0009270b2b01250b012e042b000729042b001e121c2b0119161c2b
01002b2b2b2b10102b2b01103c2b2b2b2b103c2b2b2b2b2b2b818181005d
0116171633323736353427262f0126272635342433320415232627262322
06151417161f01161716151404232027263701011e073463fa705cb24b4c
a2c7c3518c0112fbe70143bb0f315bdab09a5a3bd0ce95518cfe9debfeee
9b9b03024d01da7d4e92203ea0783332252d2c355cb7c6fedff5763f7394
626c3220302f223b67c4f4d28c8bee040b00>SBVPMX+Helvetica AddT42Char 
1 8836 44 <0003003dfe3b03e80449001f002d002e00b7404d36144908490958085909
880ca91ba81da927a62bb91b0b4008031622290ec40a221d1f070406291d
190a121d0a0f2e072e2e051c032e162e2d29051a300c0e270d3e26271c19
2f3087217242182b2b4ef44dedf4ed394e10f64dfde4f51112392f003f3f
ed3fed3f3fed10ed1112393931304379402c23281a1e0b1124251026231e
262600281a262600110b0e21000f0e0c0d251d222601271b2926000f0c12
2100002b2b2b01103c103c2b2b2b2b2b818181005d001716173533111407
06212226273316171633323736270e012322241110003300262322070615
1416333237363501027c5e3335a63c70fec9adec0eb70d273d83cf402603
36987daefefb0107ba0144a47fbe4625937cc24f2cfed104423e234387fc
32cc76da9ba548273c9256dd5250f7011d010d012efea1c0b25f9ab5bdaf
6384022d0000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/S 32 def
/g 44 def
end
SBVPMX+Helvetica /Encoding get
dup 83 /S put
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 37{/.notdef}rp /F 2{/.notdef}rp /I 9{/.notdef}rp /S 5{/.notdef}rp /Y 7{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /s /t /u /v 137{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf559.895 12.9569 mo(Sign out)[6.06622 2.01904 5.0567 5.80243 2.28278 5.05664 5.0567 0 ]xsh.254093 .200656 .205875 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 6396 35 <000100340000053605bd0006008f40449001a00102400154010216010178
05e601026704680588040319280225120303040025120606050105020306
0300020504080817171a0402039e0500019e0619078e5e182b194e10f418
4dfd3939fd3939194e456544e618003f3c3f173c123901874d2e2b872e18
2b4b5279400c01020100030401000102060587087d10c487087d10c43130
015d005d717172090233012301011001a601a1dffde8d3fde905bdfb1d04
e3fa4305bd000000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/V 35 def
end
SBVPMX+Helvetica /Encoding get
dup 86 /V put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 37{/.notdef}rp /F 2{/.notdef}rp /I 9{/.notdef}rp /S 2{/.notdef}rp /V 2{/.notdef}rp /Y 7{/.notdef}rp /a /.notdef /c /d /e /.notdef /g /.notdef /i 4{/.notdef}rp /n /o 2{/.notdef}rp /r /s /t /u /v 137{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf351.474 26.599 mo(Visit )[5.56076 1.85077 4.16843 1.85077 2.48438 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 7592 39 <00020076ffde042505c20011001e0070402ea607a71cd71c0322080f1e02
050000171d0507110a1e1d0b0b1427081a201a2e102e01290011191f2087
21bd5d182b2b4ef43c4dfde4e44e10f64ded003fed3f3fed3f1139113931
30437940181216060a1606142601120a142601150717260113091e26002b
2b012b2b8181005d1333113e013332121114022322272627152324363534
26232206151417163376af3ba460c8f9f6da7a543239a6026691918d7bb9
2647c205c2fdeb4d51feedfef4fefeb03b234d897de8bea9deb6d1975eb1
0000>SBVPMX+Helvetica AddT42Char 
1 9648 48 <000100890000013d05bd0003002940150000030a0517171a010229000319
0405aa216242182b2b4ef43c4dfd3c4e456544e6003f3f31301333112389
b4b405bdfa430000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/b 39 def
/l 48 def
end
SBVPMX+Helvetica /Encoding get
dup 98 /b put
dup 108 /l put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 37{/.notdef}rp /F 2{/.notdef}rp /I 9{/.notdef}rp /S 2{/.notdef}rp /V 2{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u /v 137{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf369.663 26.599 mo(our blog)[4.63528 4.63528 2.85114 2.2843 4.63528 1.85077 4.63528 0 ]xsh.254093 .200656 .205875 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 8684 43 <0001001c0000021705d20017004d402b071d060a1d03010f1439160d0612
0a1917171a0e0d1129171207120f0e1f0e020efc14191819fc21677e182b
2b4ef44dfd5d39c42f3cfd3c104e456544e6003f3f3c4dfd3c3fedd4ed31
3012373633321617152e012322061533152311231123353335b5233fb411
24171c190b5220b2b4b295950542345c0202a4020155ae8efc64039c8ea8
0000>SBVPMX+Helvetica AddT42Char 
1 10388 52 <00020076fe5504250449000e00220074402ca908a717022808201c110e06
1d15070f060e1d1c0b220e0227181a240a2e102e2129220f1923248721bd
5d182b2b4ef43c4dfde4e44e10f64ded003f3fed3f3fed11391239313043
79401c161b00051a260426001b022601051602260101190e260003170626
012b2b012b2b2b2b8181005d243635342726232207061514171633013315
363736333212111007062322272627112302c6a72546babb45252546bafe
2eaf36405b7bb6feb7749a7952303bb479d3d2805cb1bb649a7c57a603b1
8e49283cfee9fefdfea2965f351e49fddd00>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/f 43 def
/p 52 def
end
SBVPMX+Helvetica /Encoding get
dup 102 /f put
dup 112 /p put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 37{/.notdef}rp /F 2{/.notdef}rp /I 9{/.notdef}rp /S 2{/.notdef}rp /V 2{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf399.979 26.599 mo( for updates and )[2.2843 2.31763 4.63528 2.90118 2.28427 4.63531 4.63525 4.63528 4.63528 2.31763 4.63528 4.8187 2.2843 4.63528 4.63528 5.12714 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 9172 45 <00010084000003ed05c200160053402c0607070817071708270427137507
750808130d0213150000111d0607150c0a0d290a1a180115290016191718
b80106b3216242182b2b4ef43c4dfd3c4e10f64ded003f3c3fed3f113939
0112393130005d1333113637363332171615112311342726232206151123
84b440335782e9532db91e318770b6b405c2fddc512139a3599efd5102a3
7637589ad6fdc8000000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/h 45 def
end
SBVPMX+Helvetica /Encoding get
dup 104 /h put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 37{/.notdef}rp /F 2{/.notdef}rp /I 9{/.notdef}rp /S 2{/.notdef}rp /V 2{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /.notdef /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf463.642 26.599 mo(our shop)[4.63528 4.63528 2.85114 2.28433 4.16843 4.63525 4.63531 0 ]xsh.254093 .200656 .205875 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 9716 49 <0001008400000625044700260085403b0708070e060f1708170e170f2708
270e270f4819560b670b0c23250a1a1d23190a02041725211d171d0d0607
00061b1c2503130a2817171a112914b80101b21a291db80101400a00012e
25292600192728b8010db3216242182b2b4ef43c4dfde410f4edf4fd4e45
6544e6003f173c3f3f3c4deded111217390111123912393130005d133315
36373633321716173e013332171615112311342623220615112311342726
23220615112384b240345971804e2c243ca265d84e2abb6b4d6a99b71a29
7066a7b4042f984f243d3f244656539c548efd3702e86b508ea6fd9102bb
6d324b9ecffdc800>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/m 49 def
end
SBVPMX+Helvetica /Encoding get
dup 109 /m put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 37{/.notdef}rp /F 2{/.notdef}rp /I 9{/.notdef}rp /S 2{/.notdef}rp /V 2{/.notdef}rp /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf496.232 26.599 mo( for smart travel essentials)[2.2843 2.31766 4.63525 2.90118 2.28427 4.16843 6.94452 4.63531 2.77606 2.69281 2.2843 2.31763 2.77612 4.63531 4.1684 4.63525 1.92584 2.28424 4.63531 4.16846 4.1684 4.63525 4.63531 2.31763 1.85077 4.63531 1.85077 0 ]xshgrestore
gsave
451.516 94.0515 mo
592.484 94.0515 li
593.321 94.0515 594 94.7308 594 95.5674 cv
594 109.968 li
594 110.804 593.321 111.483 592.484 111.483 cv
451.516 111.483 li
450.679 111.483 450 110.804 450 109.968 cv
450 95.5674 li
450 94.7308 450.679 94.0515 451.516 94.0515 cv
clp
450 110.725 mo
594 110.725 li
594 95.5674 li
450 95.5674 li
cp
false sop
gsave
grestore
/535434496.0 
<<
/ID /535434496.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 20 20 ] 
/XStep 20 
/YStep 20 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 0 mo
20 0 li
20 20 li
0 20 li
cp
false sop
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[20 0 0 -20 -16.817 563.005 ]ct
snap_to_device
<<
/T 1
/W 20 
/H 20 
/M[20 0 0 -20 0 20 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1
"9\i1"9\i1"pP89"pP89"pP89"pP89"pP89#RC\A#RC\A#RC\A#RC\A#RC\A$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ&.fBa&.fBa&.fBa&.fBa&.fBa'bqGu'bqGu'bqGu'bqGu'bqGu+!2RH+!2RH+!2RH+!2RH+!2RH
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl1c.$G1c.$G1c.$G1c.$G1c.$G77BX677BX677BX677BX677BX6='&I)
='&I)='&I)='&I)='&I)~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)
!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"pP89"pP89"pP89"pP89"pP89#RC\A#RC\A#RC\A#RC\A
#RC\A$O[=M$O[=M$O[=M$O[=M$O[=M&.fBa&.fBa&.fBa&.fBa&.fBa()@Z$()@Z$()@Z$()@Z$()@Z$
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D.Olnt.Olnt.Olnt.Olnt.Olnt2E!HO2E!HO2E!HO2E!HO2E!HO7Rfj:
7Rfj:7Rfj:7Rfj:7Rfj:~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)
!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"pP89"pP89"pP89"pP89"pP89#mgnE#mgnE#mgnE#mgnE
#mgnE$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ&J5Te&J5Te&J5Te&J5Te&J5Te(Ddl((Ddl((Ddl((Ddl((Ddl(
+!2RH+!2RH+!2RH+!2RH+!2RH.4H\p.4H\p.4H\p.4H\p.4H\p2`EZS2`EZS2`EZS2`EZS2`EZS7n6'>
7n6'>7n6'>7n6'>7n6'>~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/535434496.0 /Pattern get_res
[.757895 0 0 -.757895 435.6 110.725 ]make_pattern set_pattern
f
2 vmreclaim
grestore
gsave
451.516 94.0515 mo
592.484 94.0515 li
593.321 94.0515 594 94.7308 594 95.5674 cv
594 109.968 li
594 110.804 593.321 111.483 592.484 111.483 cv
451.516 111.483 li
450.679 111.483 450 110.804 450 109.968 cv
450 95.5674 li
450 94.7308 450.679 94.0515 451.516 94.0515 cv
clp
451.516 94.8096 mo
592.484 94.8096 li
592.484 94.0517 li
451.516 94.0517 li
cp
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
grestore
gsave
451.516 94.0515 mo
592.484 94.0515 li
593.321 94.0515 594 94.7308 594 95.5674 cv
594 109.968 li
594 110.804 593.321 111.483 592.484 111.483 cv
451.516 111.483 li
450.679 111.483 450 110.804 450 109.968 cv
450 95.5674 li
450 94.7308 450.679 94.0515 451.516 94.0515 cv
clp
gsave
453.032 95.5674 mo
453.032 96.4046 452.353 97.0832 451.516 97.0832 cv
450.679 97.0832 450 96.4046 450 95.5674 cv
450 94.7302 450.679 94.0515 451.516 94.0515 cv
452.353 94.0515 453.032 94.7302 453.032 95.5674 cv
452.274 95.5674 mo
452.274 95.986 451.934 96.3253 451.516 96.3253 cv
451.097 96.3253 450.758 95.986 450.758 95.5674 cv
450.758 95.149 451.097 94.8096 451.516 94.8096 cv
451.934 94.8096 452.274 95.149 452.274 95.5674 cv
eclp
gsave
450 97.0832 mo
453.032 97.0832 li
453.032 94.0517 li
450 94.0517 li
450 97.0832 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
451.516 94.0517 mo
450.679 94.0517 450 94.7303 450 95.5675 cv
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
@
grestore
grestore
grestore
gsave
451.516 94.0515 mo
592.484 94.0515 li
593.321 94.0515 594 94.7308 594 95.5674 cv
594 109.968 li
594 110.804 593.321 111.483 592.484 111.483 cv
451.516 111.483 li
450.679 111.483 450 110.804 450 109.968 cv
450 95.5674 li
450 94.7308 450.679 94.0515 451.516 94.0515 cv
clp
gsave
594 95.5674 mo
594 96.4046 593.321 97.0832 592.484 97.0832 cv
591.647 97.0832 590.968 96.4046 590.968 95.5674 cv
590.968 94.7302 591.647 94.0515 592.484 94.0515 cv
593.321 94.0515 594 94.7302 594 95.5674 cv
593.242 95.5674 mo
593.242 95.986 592.903 96.3253 592.484 96.3253 cv
592.066 96.3253 591.726 95.986 591.726 95.5674 cv
591.726 95.149 592.066 94.8096 592.484 94.8096 cv
592.903 94.8096 593.242 95.149 593.242 95.5674 cv
eclp
gsave
590.968 97.0832 mo
594 97.0832 li
594 94.0517 li
590.968 94.0517 li
590.968 97.0832 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
594 95.5675 mo
594 94.7303 593.321 94.0517 592.484 94.0517 cv
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
@
grestore
grestore
grestore
gsave
451.516 94.0515 mo
592.484 94.0515 li
593.321 94.0515 594 94.7308 594 95.5674 cv
594 109.968 li
594 110.804 593.321 111.483 592.484 111.483 cv
451.516 111.483 li
450.679 111.483 450 110.804 450 109.968 cv
450 95.5674 li
450 94.7308 450.679 94.0515 451.516 94.0515 cv
clp
451.516 111.483 mo
592.484 111.483 li
592.484 110.725 li
451.516 110.725 li
cp
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
grestore
gsave
451.516 94.0515 mo
592.484 94.0515 li
593.321 94.0515 594 94.7308 594 95.5674 cv
594 109.968 li
594 110.804 593.321 111.483 592.484 111.483 cv
451.516 111.483 li
450.679 111.483 450 110.804 450 109.968 cv
450 95.5674 li
450 94.7308 450.679 94.0515 451.516 94.0515 cv
clp
gsave
453.032 109.968 mo
453.032 110.805 452.353 111.483 451.516 111.483 cv
450.679 111.483 450 110.805 450 109.968 cv
450 109.13 450.679 108.452 451.516 108.452 cv
452.353 108.452 453.032 109.13 453.032 109.968 cv
452.274 109.968 mo
452.274 110.386 451.934 110.725 451.516 110.725 cv
451.097 110.725 450.758 110.386 450.758 109.968 cv
450.758 109.549 451.097 109.21 451.516 109.21 cv
451.934 109.21 452.274 109.549 452.274 109.968 cv
eclp
gsave
450 111.483 mo
453.032 111.483 li
453.032 108.452 li
450 108.452 li
450 111.483 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
450 109.967 mo
450 110.805 450.679 111.483 451.516 111.483 cv
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
@
grestore
grestore
grestore
gsave
451.516 94.0515 mo
592.484 94.0515 li
593.321 94.0515 594 94.7308 594 95.5674 cv
594 109.968 li
594 110.804 593.321 111.483 592.484 111.483 cv
451.516 111.483 li
450.679 111.483 450 110.804 450 109.968 cv
450 95.5674 li
450 94.7308 450.679 94.0515 451.516 94.0515 cv
clp
gsave
594 109.968 mo
594 110.805 593.321 111.483 592.484 111.483 cv
591.647 111.483 590.968 110.805 590.968 109.968 cv
590.968 109.13 591.647 108.452 592.484 108.452 cv
593.321 108.452 594 109.13 594 109.968 cv
593.242 109.968 mo
593.242 110.386 592.903 110.725 592.484 110.725 cv
592.066 110.725 591.726 110.386 591.726 109.968 cv
591.726 109.549 592.066 109.21 592.484 109.21 cv
592.903 109.21 593.242 109.549 593.242 109.968 cv
eclp
gsave
590.968 111.483 mo
594 111.483 li
594 108.452 li
590.968 108.452 li
590.968 111.483 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
592.484 111.483 mo
593.321 111.483 594 110.805 594 109.967 cv
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
@
grestore
grestore
grestore
gsave
451.516 94.0515 mo
592.484 94.0515 li
593.321 94.0515 594 94.7308 594 95.5674 cv
594 109.968 li
594 110.804 593.321 111.483 592.484 111.483 cv
451.516 111.483 li
450.679 111.483 450 110.804 450 109.968 cv
450 95.5674 li
450 94.7308 450.679 94.0515 451.516 94.0515 cv
clp
450 109.968 mo
450.758 109.968 li
450.758 95.5675 li
450 95.5675 li
cp
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
593.242 109.968 mo
594 109.968 li
594 95.5675 li
593.242 95.5675 li
cp
f
grestore
false sop
.463905 .383337 .388098 .0267033 cmyk
YYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf479.558 105.42 mo(Find people and places)[5.30215 1.52567 4.55188 4.55197 2.28427 4.55191 4.55188 4.55197 4.55188 1.52563 4.55188 2.28436 4.55188 4.55194 4.55188 2.2843 4.55194 1.52563 4.55188 4.54358 4.55194 0 ]xshgsave
18 672.325 mo
594 672.325 li
594 -13.5694 li
18 -13.5694 li
18 672.325 li
clp
133.2 173.631 mo
133.958 173.631 li
133.958 172.873 li
133.2 172.873 li
cp
.156741 .118563 .123629 3.0518e-05 cmyk
f
593.242 173.631 mo
594 173.631 li
594 172.873 li
593.242 172.873 li
cp
f
.757895 lw
0 lc
0 lj
10 ml
[.757895 .757895 ] .757895 dsh
true sadj
133.958 173.252 mo
593.242 173.252 li
@
.55761 .472114 .467414 .125368 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 276 4 <000100aafed0018000da000e002d401600230e0a64080a1017171a07340a
640008190f6365182b4e10f44d3cfded4e456544e6003f4dedd4ed313017
3637363534262723353315140607aa451c0f01026dd66076d10c552d2a07
0b07daca77b415000000>SBVPMX+Helvetica AddT42Char 
1 6584 36 <000100250000077105bd000c0156409508090178077909780b8701860405
47014b02440348044d08420a8908870ac802c703c707c80b0c580b670768
0b890286038607890b9902960395079a0ba902a603a507aa0b0f0808070a
080b1908160a5707060b08040a023e284528052506060700250c0c0b0904
01030b020305060c050002080a0b0307080e17171a0705068640080304f4
0a0209f4800b0001860c190d8e5e182b194e10f4184dfd39391afd3939fd
39391afd3939194e456544e618003f173c3f173c12173901874d2eed872e
ed4b5279b4090a09080ab8019a400f120101020405030406070908090a08
b8019a400a12040403010102000c0b877d1008c5872e18052b087d10c587
0810c5872e18052b087d10c54b5179b301010002b8019ab6090a09040405
03b8019a400f090908040503040607010001020c0b870810c0870810c087
10057afd1808c4188710057afd7d08c4313001725d5d71005d7213090133
090133012309012301fd0115014cd8014c0115dafe7ed1feadfeabd1fe80
05bdfb5504abfb5504abfa4304c2fb3e05bd>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/comma 4 def
/W 36 def
end
SBVPMX+Helvetica /Encoding get
dup 44 /comma put
dup 87 /W put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 25{/.notdef}rp /F 2{/.notdef}rp /I 9{/.notdef}rp /S 2{/.notdef}rp /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [18.1895 0 0 -18.1895 0 0 ]msf133.2 153.167 mo(Welcome, )[17.1709 10.1133 4.03806 9.09474 10.1133 15.1517 10.1133 5.29314 0 ]xsh.38471 .250401 1 .0218204 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 5476 31 <000200b40000057805bd0009002700944012070d49014805590158056905
641478050816bb01300119001b011c40422321202660127112751403121e
1f141c1503211e161404261224251e0009091b071e0b02261c1b08202515
1f251603310f691b1a29082625270a192829d6219566182b2b4ef43c4dfd
3c4e10f64df4edd4edd4ed003f3c3c3ffd12392f3cfd3c39111739011112
39391239395d1112392b3130015d01323635342726232111032132171615
1406071e011f011617161715232e012f012627262321112303478ca3723d
66fe1ac702a8a86dcf6d6256570507030b122ef40a0c040c0764397afe3b
c7031c70929d391efe0a02a1315efd84a833237280c55429461421133c56
f590311bfd8a>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/R 31 def
end
SBVPMX+Helvetica /Encoding get
dup 82 /R put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 25{/.notdef}rp /F 2{/.notdef}rp /I 8{/.notdef}rp /R /S 2{/.notdef}rp /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [18.1895 0 0 -18.1895 0 0 ]msf219.6 153.167 mo(Robert)[13.1328 10.1133 10.1133 10.1133 6.05695 0 ]xsh.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf133.2 166.052 mo(You are at home in )[5.56075 4.63528 4.96042 2.28429 4.63528 2.77611 4.71031 2.2843 4.63528 2.9429 2.28429 4.63528 4.63528 6.94452 5.00212 2.28429 1.85078 4.96875 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 4308 24 <000100a10000052f05bd000b003f402108091e0302020401020a07080407
2506051a0d010a250b00190c0c0da0217670182b2b104ef43c4dfd3c4e10
f63c4dfd3c003f3c3f3c392f3cfd3c3130133311211133112311211123a1
c902fcc9c9fd04c905bdfda1025ffa4302affd510000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/H 24 def
end
SBVPMX+Helvetica /Encoding get
dup 72 /H put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma 25{/.notdef}rp /F /.notdef /H /I 8{/.notdef}rp /R /S 2{/.notdef}rp /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf207.474 166.052 mo(Honolulu)[6.01921 4.63527 4.6353 4.63525 1.8508 4.63528 1.85077 0 ]xsh.55761 .472114 .467414 .125368 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 376 5 <000100af0000018000da000300264013012a030a0517171a016400190405
64216365182b2b4ef44dfd4e456544e6003f4ded313037331523afd1d1da
da000000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/period 5 def
end
SBVPMX+Helvetica /Encoding get
dup 46 /period put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /.notdef /period 23{/.notdef}rp /F /.notdef /H /I 8{/.notdef}rp /R /S 2{/.notdef}rp /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 137{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf240.821 166.052 mo(.)sh133.2 185.757 mo(You can )[5.56075 4.63528 4.96042 2.28429 4.16843 4.63528 4.83537 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf166.547 185.757 mo(invite)[1.85078 4.63527 4.16843 1.85078 2.31764 0 ]xsh.55761 .472114 .467414 .125368 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 3876 21 <000200a50000056305bd000d00180067401f871196120232080b1e0f0200
1e17080831131a1a0d250e19191ad6217689182b2b4ef44dfd4e10f64ded
003ffd3ffd3130437940260116112515260607050704070307020705060a
10083201011608320109120b320107140032002b2b012b2b2a2b2b815d25
32373637363736351002232111032120171611140702290102d06541744a
3b1a0fd9f1fe9fc80253012fa795589bfe86fdafaa15276f598b53470111
012efb980513d7c2fed1eabdfeb20000>SBVPMX+Helvetica AddT42Char 
1 12308 60 <00020015fe4903e804490018001900ca406e8a158818a718030706170638
12481258126707770377078c1498009705981597169717a800a816104800
4b154717c915044405c605028705a600a601a705a8170524280518151716
010006150c0b0f1d080e19071919161b17171a050001af171518af0c8f16
191a1bd421677e182b2b194ef44de418fd3939fd3939194e456544e61812
392f003f3f4dfd3932192f183f3c3c3c123939014b527940121515001616
6d121717180501016d12000018872e2b107dc418872e2b10087dc418015d
71313071015d005d013306030207020623222627351e01333236373e0137
013301030321c7268362429c809c26291e2f2a10322f10053e0efe74cc01
1f01042f67fe91feecaefe66b40608a40d062118089424044efc98038200
>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/D 21 def
/y 60 def
end
SBVPMX+Helvetica /Encoding get
dup 68 /D put
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /.notdef /period 21{/.notdef}rp /D /.notdef /F /.notdef /H /I 8{/.notdef}rp /R /S 2{/.notdef}rp /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i 2{/.notdef}rp /l /m /n /o /p /.notdef /r /s /t /u /v 2{/.notdef}rp /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf186.253 185.757 mo( people to Dopplr to see your trips, )[2.28429 4.63528 4.63528 4.6353 4.63528 1.85077 5.36893 2.28429 2.31764 5.26054 2.2843 6.01921 4.63528 4.63527 4.63528 1.85077 3.2263 2.28429 2.31763 5.26056 2.2843 4.1684 4.63531 4.83536 2.2843 4.16843 4.63528 4.63525 3.23468 2.28427 2.31763 2.77612 1.85077 4.63528 4.16843 2.44269 0 ]xsh318.884 185.757 mo(find them on )[2.31763 1.8508 4.63528 4.83539 2.28427 2.31766 4.63528 4.63528 7.36136 2.2843 4.63525 5.21887 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 9424 47 <00010080000003f805bd000b00a740645902013a08011902010706170657
056705790678078705b903c903da030a05050608080709030284029402a4
020302391209090405060504066d12070708080705040305060908050204
030a00000403060a07060a061a0d09020a29000b190c0db22162b9011600
182b2b4ef43c4dfd3c3c194e10e618003f3c3c3f3c3f1112173901121739
874d2e2b087d10c104872e182b5d057d10c010083c083c3130015d00715d
7213331101330901230107112380ad01cee6fe6601b1e6feb297ad05bdfc
ab01c7fe6ffd62021c8afe6e0000>SBVPMX+Helvetica AddT42Char 
1 11844 58 <00010012000005a1042f000c0120407e4704aa09028e09014607490b8703
8a08850aca02c403c607c908c60ac90b0b66076a08650a690b7607790876
0a790b85078a0b0a4607490b0247037700780503572816282b012b043b01
3b048f018f0406090401030b020305060c050006080a0b03070a0e17171a
0705069b080304c40a0209c40b00019b0c190d677e182b194e10f4184dfd
3939fd3939fd3939fd3939194e456544e618003f173c3f173c1217395d4b
5179400c0529120607060029120c0c0b0587102b87102b4b5279b4090a09
080ab8018b401312010102070604050529120606070908090a08b8018b40
0e120404030b0c00010029120c0c0b01874d2e2b87107dc41805872e182b
087d10c505872e182b877d10c405872e182b087d10c53130015d71717100
715d1b02331b013301230b012301d7ced1cad2dbb4fec9bbdad3bbfecb04
2ffcb4034cfcb90347fbd1033dfcc3042f00>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/k 47 def
/w 58 def
end
SBVPMX+Helvetica /Encoding get
dup 107 /k put
dup 119 /w put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /.notdef /period 21{/.notdef}rp /D /.notdef /F /.notdef /H /I 8{/.notdef}rp /R /S 2{/.notdef}rp /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /.notdef /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf368.147 185.757 mo(other networks)[4.63528 2.31763 4.63528 4.63528 3.47641 2.28427 4.63528 4.63528 2.31766 6.0192 4.63528 2.77609 4.16843 0 ]xsh.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf424.232 185.757 mo( you use)[2.28427 4.16843 4.63531 4.83536 2.2843 4.63528 4.16843 0 ]xsh133.2 197.125 mo(or look for )[4.63528 2.94286 2.28429 1.85078 4.63527 4.63528 4.79369 2.2843 2.31764 4.63528 2.90115 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf173.368 197.125 mo(travellers you may already know)[2.31764 2.77611 4.63528 4.16843 4.63528 1.85077 1.85078 4.63528 2.77611 4.45187 2.2843 4.1684 4.63528 4.83537 2.2843 6.94452 4.63528 4.33516 2.2843 4.63528 1.85077 2.77611 4.63528 4.63528 4.63528 4.86871 2.28427 4.16843 4.63531 4.63525 0 ]xsh.55761 .472114 .467414 .125368 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 2784 17 <0002009c0000041705d000030020009c4047281248135813650d750d0569
0c790c0226080f100d150f0b091815120d0b04201057012a030a20ca1b24
0601120f31101f0164030309201838091a221f3120192122d3216348182b
2b4ef44ded4e10f64ded1112392fedf4fd39003feded3ffde61117390111
1239123939111231304379401a191e04081d251c051f41001a071841011e
041b410119081b4101002b2b012b2b2b8181005d015d2533152300123332
16151406070e01152334363f0136373635342623220706072301edc7c7fe
aff4d5c5ed57846039b24473502416287587a7402405b2d0d004c90107e1
af6a84805d817e8faf714f2225414662907c4582>SBVPMX+Helvetica AddT42Char 
1 4880 28 <0002009c0000052a05bd0009000a00764014370138060207011701270147
0158020507010202b8019b4017120606070207080301020806080a030a0a
010608020302b8019bb505041a0c0708b8019b400a0900190b0ca0217670
182b2b4ef43c4dfd3c4e10f63c4dfd3c11123939392f003f3f3c3f3c1239
3904872e2b877dc53130005d015d13330111331123011123019ceb02e6bd
dffd0fbe023a05bdfb5a04a6fa4304a5fb5b05bd0000>SBVPMX+Helvetica AddT42Char 
1 12192 59 <0001000b000003e1042f000b0035b800532b00b800002fb800032fb80006
2fb800092fba000200060000111239ba000400060000111239ba00080006
0000111239303113331b0117090123090123011ee9f6f9dbfe970179e6fe
f6fefee40179042ffe87017905fdfbfddb0192fe6e0225000000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/question 17 def
/N 28 def
/x 59 def
end
SBVPMX+Helvetica /Encoding get
dup 63 /question put
dup 78 /N put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 11{/.notdef}rp /comma /.notdef /period 16{/.notdef}rp /question 4{/.notdef}rp /D /.notdef /F /.notdef /H /I 4{/.notdef}rp /N 3{/.notdef}rp /R /S 2{/.notdef}rp /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf293.874 197.125 mo( to discover more coincidences.)[2.2843 2.31763 5.26056 2.28427 4.63531 1.85077 4.16843 4.16843 4.63528 4.16843 4.63528 2.80942 2.2843 6.94452 4.63531 2.77609 5.3439 2.2843 4.16843 4.63528 1.85077 4.63528 4.16843 1.8508 4.63528 4.63525 4.63531 4.1684 4.63528 4.1684 0 ]xshYYMPBE+Helvetica*1 [14.4 0 0 -14.4 0 0 ]msf313.579 64.4938 mo(Where Next? )[13.5936 8.00638 8.00641 4.7951 8.03519 3.80161 10.3968 8.00638 7.20001 4.7088 8.33759 0 ]xsh418.168 64.4938 mo( )sh421.958 64.4938 mo(You have no trips planned.)[9.60492 8.00638 8.15042 3.80161 8.00638 8.00641 7.20001 8.61118 3.80161 8.00638 8.66882 3.80161 4.00317 4.79507 3.19684 8.00641 7.28638 3.80157 8.00641 3.19684 8.00635 8.00641 8.00641 8.00641 8.00635 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 172 3 <0001005c0000046f0415000b0037401c037a050220080b7a0a0a0d17171a
067a040920030a7a00190c3f52182b4e10f44df43cfd3cf44e456544e600
3f4df43cfd3cf431301335211133112115211123115c01b4ab01b4fe4cab
01b6a801b7fe49a8fe4a01b60000>SBVPMX+Helvetica AddT42Char 
1 3044 18 <0003001e0000053d05bd0002000a000b00da405048015801680103880397
04980aa90ab809b80a06280a010007060601020809090102080a00070501
8c01030420140a0a251209090114050525120606010b0b0503090a040605
010b02010300021e0708b80159400904030206090a030508b801a840120d
0d17171a059e019e0a190c0da1218c5e182b2b194ef4184dfdfd194e4565
44e6464418003f173c3f3c4dfd3cfd3c11393f011112393912393911392f
872e2b7d104b5158b004c01bb004c459872e182b7d104b5158b003c01bb0
03c4592b1112393912393987103c3c07103c3c3130015d5d005d010b0113
3301230321032301038edfed85e10215da95fdbb9fcc0290025a0289fd77
0363fa4301b8fe4805bd>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/plus 3 def
/A 18 def
end
SBVPMX+Helvetica /Encoding get
dup 43 /plus put
dup 65 /A put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period 16{/.notdef}rp /question /.notdef /A 2{/.notdef}rp /D /.notdef /F /.notdef /H /I 4{/.notdef}rp /N 3{/.notdef}rp /R /S 2{/.notdef}rp /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf531.095 82.6832 mo(+ Add a trip)[6.06616 2.28278 6.06622 5.0567 5.54779 2.28278 5.30225 2.28278 2.52832 3.0285 2.01898 0 ]xshgrestore
18 94.8096 mo
446.968 94.8096 li
446.968 94.0517 li
18 94.0517 li
cp
.156741 .118563 .123629 3.0518e-05 cmyk
f
18 111.483 mo
446.968 111.483 li
446.968 110.725 li
18 110.725 li
cp
f
18 111.483 mo
18.7579 111.483 li
18.7579 94.0516 li
18 94.0516 li
cp
f
446.211 111.483 mo
446.968 111.483 li
446.968 94.0516 li
446.211 94.0516 li
cp
f
gsave
20.2736 96.3253 mo
431.81 96.3253 li
432.647 96.3253 433.326 97.0044 433.326 97.8411 cv
433.326 106.936 li
433.326 107.773 432.647 108.452 431.81 108.452 cv
20.2736 108.452 li
19.4369 108.452 18.7579 107.773 18.7579 106.936 cv
18.7579 97.8411 li
18.7579 97.0044 19.4369 96.3253 20.2736 96.3253 cv
clp
18.7579 108.452 mo
433.326 108.452 li
433.326 96.3254 li
18.7579 96.3254 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
grestore
gsave
21.7895 107.694 mo
433.326 107.694 li
433.326 97.0832 li
21.7895 97.0832 li
21.7895 107.694 li
clp
.365667 .295354 .300633 .000549325 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 6160 33 <00010021000004c905bd00070034401a01061e00070204080917171a00fb
0203250504fb0619088c5e182b4e10f44df43cfd3cf44e456544e6003f3f
3c4dfd3c3130011521112311213504c9fe11cafe1105bdaffaf2050eaf00
0000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/T 33 def
end
SBVPMX+Helvetica /Encoding get
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period 16{/.notdef}rp /question /.notdef /A 2{/.notdef}rp /D /.notdef /F /.notdef /H /I 4{/.notdef}rp /N 3{/.notdef}rp /R /S /T /.notdef /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf22.5474 105.42 mo(Type the name of a city or a traveller)[5.31126 4.54737 5.30223 5.30223 2.28278 2.28278 5.30223 5.30223 2.28278 5.30222 5.30223 7.57584 5.30224 2.28278 5.30223 2.28278 2.28278 5.30223 2.28278 4.54736 2.27369 2.28278 4.54736 2.28278 5.30224 3.02847 2.28278 5.30223 2.28278 2.28278 3.02847 5.30223 4.54738 5.30223 2.27368 2.27368 5.30223 0 ]xshgrestore
gsave
18 235.778 mo
133.2 235.778 li
133.2 136.494 li
18 136.494 li
18 235.778 li
clp
18 233.431 mo
115 233.431 li
115 136.431 li
18 136.431 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[97 0 0 97 1.18298 329.575 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 128 
/H 128 
/M[128 0 0 -128 0 128 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 128 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 128 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 128 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 128 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
IWKk"S=#=qH#mqCDf0E-Ci!s+Ci4*-CM[g(Ci+*2I#F5[R[KeFY,S1dQBdf:XK8S-W265_TV.dBR$sD,
P)P?ZMiNO>H@(0rLPh=eR$X%oIsQKhI!B[MF+AmcDJa0*De:eBQC+5:TqJ'IL37BG=&)C`9M.W+4?u;+
)+:L/[BZpE\[892W2Zi#YcY"-WiW2&Y-P5/X:VD4[^WTGVPp]%Xfe_(VlI!#W;`bfW2lr"YHk:2WMcbs
Yck.1Vm!YB]XP2V]!/?CYdLgBYG\A!XfJS:]=>>b_RcbGMFjYWYH+q5V6%#-[_SD\H[LU(JT=q/Ed.t9
FR/&)]"c/&iUcp6s&AmehoEOFbfI?$Yd:jV_8<ss\$rcP\%0&\]"#2^_SOC<c-=Vbf%AI#f%Sj.bJhE4
]t_>.iplL'n+HAClIFGOmdL/Ts7h$!XM_l]Zc'Jdf^/,'rrW)ts8N%FKqZ]8`5TZeHua=TI"$EeG]n7S
FaS^iH$FLWH$b:G_o^3@^sCNaf$M=@\&m.JdaZdncHjSPaMP[(]tV.n^:^n^YcY"*YHY:G_oC!Eai_;q
R$!PrPD4R[\@A)tRu)604ofEKb0/5\aNi):SXNM%)AaP;)%?WQ(CUlh%s*,\R$`qnH?*tCDf'<+DK'K1
D>nDsCi+'+D/O95IYsA[S!fqIX/_tfSXc@PVl[)*WMuhjTV.eRRQ[12R$j8+Q'I;^K7Sc6Lk^hNOH#$H
I!U6mJq&&fG(5$gH#d\7ARo@jH%V0KUT1;dMKs&K<**1)>$+Ti3CZP7:f=="\?rHI\Zr$.W2cr%Y,eM%
XK8G'Y->%.Xfe_(XgkjIY,A8%XKAJ#WN*&&X/W%uX/rB$W^3bfWN)qrW2lu#WMlc"['[9IXfeh3[C3NN
Yct=1VPU2kXh)3T[^ifLXK81tdDrr/[]H=.YctIIQ?7_@V6["Y%sE5ON0BRnj2&@A_oLd.qYpKprpp(V
qY&ae^:hS,\[JiR]"c%p\$``TZa7$G\%9)Y[^s2l`5KX4a3)]QcdU@qf$r6pcG@<9dbO$TlfdNsnEoAf
g>h2crVm<(f#l4S['mTP[F=I7qZ$El%>C_(c,.H<RsK*sI!^2<G@c#FH$t3mH?FI[GBo(K_9'p9`R*&`
e'H"Rb0\\cdacmtdF$%N_n!1d]tV5#a2Z$2^:^eVZ*^^;X166k_mueBR$<o&PELj!\?`$3P^%+Z>%XnC
]uJRKdFQ^UT9Vqd-8\7p77S^<&fDrD06DZ*R@'.rHZ="BDf9K0DK'N3DJa6,D/F3/D/=-4JrZ(bS=?%D
Vkg;jW2$8jX0/\3YH=e'Wi;hfT:_hVUc"^9T:hO2MMdIVN/*(>K7S>qIX6EoLPLM1H[pX"L3RTMAT*06
!)Rp%Y.(j?Q\03_<aAs81gEsO5X&%C;,XF$]!ANI\Z_p0X/W,$XK&4tX/rJ,Yck..Xfe_'WjT=CYGnP)
V5:&bVPa?o"KeZ(XK2?%5,bTcWMl_lU8=]cX/DhpXg#%0Vkp;pZF7*DZ*ps;W2-/bXL,RJZ*141Z*C7N
T-/I+^9"34XKAhBR!Xjl'=FWoIW]RsSscDDhnQe;_8kU-rU0\Qq>&d`^:_>#]YD(l]Xkbb[^39HZEU[@
['[9I[CsAm^qmb!_7d_'ajAGae^W*qdaH[rf&GTPjPA_TlKdN^g=tEYrVm;BQ7%pD\?`BBZGbJerr;]l
F+p[>behH>R<a"'H?ad`H?XIVI=?WpIX?<fIWTdjYfFl/`Q69HbK\A[cd:+je^W1%e^i7"cHsk[aiV]J
c-=AUahPU#[^ilPVkU/o[AoXgXItiKS=5t;VRNh7Y`F3XD0EfT!"c]eg>(E/`j(pu+Vm"4?V2^a%14aG
0KXB,Od;8pN-]G\D>nE#D/O<2DJa6,Ci+'-D/=',F+][BSt)@BUnsugWi)\jVlR/0ZEC=3riA,YVkp#Y
UnaZTT:V[ER#m;fNK&aHIslWeH@gNjKSYJ=IsZg-Ne;OtCi53$I:Zf%M6+4kWLf#e=s$I@=^+Kf7kQ5\
9heKbZ+@6F['d!7XK8G&XKSY'WiZ0&"Ke`*XKDK'"1,A@Z2Ug*W2KTm!ii3#riH:&WN<&tV`:ZTVl6Gd
V5L>lX/i1sXK8@qV5^PsX0/k;ZE^L.U7nKe[C3BIWhZ`%[&1:MO.OA,Xf88$XKo\YQ$f+:YB"E&?rhT3
PGI^+^V7G!aQ<$arrE&trs&K"pY*Ks[f3uO]Y(hd\@K)Z['Hg9Z*^gErjOhp\@TMo_8*h#^qRM$b08/Z
eC2jqfA,3>jPK([gtq/XkN(.8b38Qss81]\[B&3R^ojfHZ+eKblMCJYrri<#s6JYBrtL0ec,m`?_NfFp
H?jd_IX69aH[gPEHQ@EYH['^]Lp>(Da3)TKcd'nceBlIadFHt(f$`$qrm<XId*BbTb0/#Jai_]E^:(DP
V5pPkR[9A3VQHVYR[]e>USkW<_P2I:JW$V[W&%&5a5#Iuc-:^OTfO)TAQ9BP&cr%I+XK-iIZg"\Oc4[-
EGfZ2CMdm+DJa6.Chmm,Df9H.EI!>'R%^(DT;/$OU8+HWV5L;rZF70KYH=n-Wi;hdS!ob6R@9M1R?inm
O,]!MKnOu+I=$BiH%C^(J9Z-kR>cB0Ed<G0TW"B-H'+c$Y,X=MNHADo<EWO+:ej,21dF].WO'4BZ*^m9
Vl6VqX08V*WiE5)Xfnn/WiN5'Y,nV+['Hp<ri6R5XK&>$X08Y,Y-"_&W33)uV_b?PVl6VsWi<,(YGnM)
Yc=XuVlHbpX/`%tYd1=+Vl?i&ZE^a9WNi\5YHYFCX1#^JXfNGDZE_?=Eh^XaIWBL=?smu1On.JE^:qJ.
kk+<C/cPV@ftt>/]Y(qf\\#J`]"55T['6[:ZEg^B\$rfP\\c>'_SaC0^V@e4bKnZ:e0!B!i8itZio0%Y
j6>t'p!^_#mdp5BeA&DhZ1Qk_['Bn=Z+/!7o\03B!ri&lrr3:TWR/c$`k[^^HN&(6H$4:SH@1*iHZsa`
IXQNgJW@%WaN)KLbg=\]cd:"\bL=tmg"?;U#L_#IaiDNA`r=".`Q?*;_n`pt[BH9sVk]TLQ]IQ+S=lIH
SX#5HcG5HdO.*W*dFd$8UX.C7f\G0/_6$'85AjjQ(DR)U!t64sEdX%8PEUuRF)c&4CM[a#C]/*/Chmm*
Df0B/FFT78SYDmTV5']VSY2[NUTLf(ZF73FXKAV*XJhb]R$a;.R$<bqQ'7#\N/raHrdl&@K7SMuG^Y*j
FDboHOF;%aG)Do\QAL*>M4-i,SsYh3OagtF?sm>F7n?0:6:aj@Vm<qEZ*^g5Uo1,iXKSe/Y-"e-Y-+k,
XfS\0XfA;$YcXt-XJ`,&XKAS'WiN5#rMft&X/rE%WrK$sX!t'LY->13W33>.WiN(pUS4NaV4supXfAD%
XfJn=YcY=<Y,nt?\>lX>*k/GWZF7$C]sEBe`j1;-@VTXoH]*7Ak.S:=_TV6=mf+%"o'OuE]XbP^]"#5]
]t:th\?`HIZMq'aZa6sE[(!id`Poa7`Pfd6aiqoRd+-Uof@e^1hV[/JkiM!rp\":4`96dio@L^eXM!N\
$I$#d]=b\faOL.LrVlljqYt2UUsRB#aMEp_G]IbGHZX:PH?aa`H$+C^I=QfqKp0!ebKnP`cHjn`bKe2M
cdp[sf%AX,eCE-ueBuCP]Z/"/]YM@t]XFuK]XOl2Q^!JsTpCe'Q^aP3M0sHSaJ46@Q*o#b^U]e^S&!M&
c-"8S`40h9;LW++$474L$5Om#Eda+4P*M#VG&hJ:C2.BpBPM="Ci!m&D/O60Ed!+uS>)mVUT1DkU7nBU
Vl$K%\$iWIXfSJ#WN2ecR@'>2S=>q2P*V)_L51V?L4b,4LPCP6H$k!bFDkl.Fa.e=DgmtV[%N:<IY3iW
WKoVZX-e]aBkM!g?s6W/:/"AW6)Cj!\$36DU7nE]W3*A3Yd1I7Y-+n-Xfnk1Z)Xe'Xf\S'rhr&]WiN.u
WMlbmWi2qqW2unrX/iA$X/rA%V5:&gWN2ehVkorMU8b#\Sti3_W3!&!V6-l"Wk6!OWjK1;WN!$E['HpD
ZEUPtDm?FP_RQkg]:k(>Jq8<#KPpDC]Y;4tcKk;prt,2,n`.j/]=>Gb[^3KS]XkfU\M^RnYdCdB[^WWN
Zb*uh_oBj>a2>s:c-+,K^V\:Hg<dmhe_As=kMbIgpA+UMhtm0HiPi+,%_9mChnch+^e8gL_p.3?pA\\&
Gbrd-]Ze-OH$=@LFF/.NG^+F[H$=7PIslp%IZ(/?bKnV_cHa\\ccseZair)cgt:''f$;XidFHOba25U.
`Orgl['QBkQ%4+BUmcskPbOtAPEqDgMgfP_U9'5kMlXnQ0&+aeW3"1nfYmh"h8m=0KQE$"9eS+B*>oh<
$ZgcYQ'R\qJ9GpKC2%HsAnPdmrbNEeCMdm(E--SeR%gFVVP^8kW2HPmW2Zi%rjDg5riI`OWMlYbR@'G3
T:ML?Q'%)bKnP27LP:J=MM[%=IX6<eH#mk<CMds)C2\ToI^ZnrS<TG8TV8<8M6*>3HZO.>@p`JA;-$Ul
;G!Rc]X"cKYbn.lWiN;+Z*Ua@YHG"1XK8P+Y-"k.XKAS*WhcGiW2chrVlHetW2ZbrW3!)!W2chrX/rD&
VPC#bUSao_USO`WP+&;JWMcVlWMZSjUo15qYH5FT\>cR9-FBbNVl?\tZa7$CKUf9L[)'bt_6g,;R?3qn
JVS@@k.SRF^WZ*Amf*pqlIa"c\@92d[^W]T\@K&U[C#q;'XP'M[C<NO\\5ht_Sa@4a2Z0?ccuI5(:qH5
e^`*pdalgqgXtBEme$;HmJQhX']?C$XL#dY_R6bUY*Z#c]"uqRlhgGV-[)<3aMH$8PBqCoE-$8IEcZ>I
H$=OTFaSL_JrcS3aO/Mfc,n5WdJhKLdF?Xpg"G$.f$i'ob/h]Ea2Gd&\AuRpZ`g0nPELc7J=`R8VPBfS
NeiXMM1U,!FHrDPDBF8,fA,6:_mIJ8e(383BALnS[B6$]D,a4g.Q\pu,nqGDJ!HFjP_OF#D/!^"CM@Nu
BkhF!Chmp)CMRs;Lm4S3Ua)e7W2Q\rYHG%3Y-tgJ[^WTKYcat%U7n'DR[]\5QBmYkLkbk\1P^dDNK9'U
Kn=i(I=?QgEc5o;DesTTU:%V8Tq%dSWO'%H\?2s*M10hnC1LRN;,:.l<$+l-Z+$g<\$W3<XKJ\*XK\t4
YH=k/YH=e*Z*CF9ZEX>0$`U,(WN*#$Xf8:sWVibgXf\Y'X/N)!Y,eS'XJr>'Y,SCuW2?PqX/r4rWiN2#
Vkg&ZU84ZdYIM9VZ)kC=XfS_/YHP4;YGn\,X/;u-]=YkeSW8JPIYWjiKQ[+M^;@Lndd[&1nc)hipZU#C
]=>A]\@K&W[Bm-F['m?GY->.5Y->4=[(3`\^Vn%*^VRk._oBsOf%&<ucHOVbe^W*tdEU"bi8WGLm.0Q:
qX_n9WN!)*['m3?X/r>#['m]lf%]<_s8N$)Ff<X,_TTNPI!5L/DKU/KFE;PFG^XdYG^b'rU:\FjdaHIg
bfeDae^i6udF?h%f\"m1f@JI!cHjbY`l,^.]u.LlX/Mb`R%L4SX/W51[&g'iN.ZP;NdcA.QCO.hNksB&
gXj6VdFd+)gu[JGdEB;4YbltK2Cfae'.5@Y(Nb1nR$j1pG&D/2BPM9pD#S5KCaEq7D/X`UOIr>DUS4Ta
WN3)!YHP+2Xg>FD[C3NRZ`U4'U7I^>rfS"UMi<UOL5(A6K7\c2MM[4KLP(85KDpNIJTuB_F`__UPc;4%
Wh,ib\A#bk\@B,aXdG&uI!9RG?W8(F='ScuV7!k:XgbR7X/rM/Xff"6XfSV(YHP+1XfhZ.!OK!/X;\.=
WN*)&X/iD&W3!"uWi<"uWMlbsW2chuX8\nTVQ-MhV5U;kU77^HVPg5]S>)mYVkKfVUSaukXK](8Zam9A
V5:5qYc=_%W2HPlUS=Zl\\,VaU4EhqF+Tg:DYN#"_83e7nbE(Ss!@[BqX3"T]!f,Y]=>;VZa7'GYdCgE
Z*CO<Yct79[C!KU^qmn+rl5o"c-4P_e^`$a_o9dHe^)Lgd*Bq_fA5?Aj8S<^naGAJZ)b.A\[elEWiW;*
YHG4Eb0JJhiV!6Js"EtjXjY;.bI<CUG&qbGFE`(SF*2SOI<g!\I>48u`mW;^d*9q\b15(me^r6te^s`O
1u$R/eBZ.W`O`+QY,e\&U7n<UToXDELR>'5O,]NlR@0"qP*_PrOH>TkO0$a]g=srgb1Q^J!8[Y0#M.5=
^ULMKPnIRZ)&Xee.1gQKP+%\uKQh<NCAquNC2Ij+rbXH,CMdm+G_M9MUSFNVUSk)lX/W%tXf\b0YHY16
Za@6NXfA=oT:;.1O,]!PLl$k=JqJ^TK)UH,M26tAL]*#MM2-e:J:2cmMjg`TX.YuVYe%]f]=PSf^p0St
Mhct7JU2<H=%cFn<3!OBYH>CBVl?YtX0&S1XK/A&XKAe3XKS_-ZE^O5XK/D$WN3,&X0/G'W2ZhuW2?Mk
W2Q\sX/W.uX/M\[S"QIHR@^7TV4F!?S=cXSS!]\:T;JBLOdW&GWMcbsZ+%-DWMu_q[B6L1W2co!XK&%j
WN`]B[Bd$4MfrumVNCQ+]=l.sg%>(<o`&4qq=3q,`kT$l]=YY_Za-pFZF7'H['R*H\?rWKYctF?\%0;i
_7mOo_T'a>aOA_ha1]'tb0\MX`Q#j9bLOVJbLP;#hV@#DaL\U\[_oh_XK&8$X/i8!XLQ9pci_YDhsLFC
!<)osF+LUCbJVH-L3I]ZF*DtYHZsUUG'\R`G'\S#ZGk#6d*9h\c-4PbeC)drdaZgteBudrf%A[,cd:"[
_6oY[JWPqOKSc"fPC@=_F,H6MLjt,5Mjp8`CkSFYSsP_,Ur(U6f@A!`f%Sp7gYLiFgt9on^E:/$\ZD?C
4<5%[7P8\-Pa7SrJ9>jMCi+!)D/X?3DJoDi#'"jBOdr>Hrh0@hWrAtIW2Z_sWiE.rV5:/mXg#.7WMlVd
S=>t7PDkEWM2I%?K7nr6LPU_AM2I/hMB.P1Mi<RMLPgb8L5_OtY+_>ZZ+.?W]=YVb]XFf1.[6'XP)kEL
FD=Z=7nfkk]<\WN[&BgtVl-]$XfJG"X/rD)Y,eV.ZE^F/ri8kqWiN2%X/`8(Wi2krWi;qtX/MtsWN3"t
WiW8$VkL#_S<oS9UnF0BQ^XJ8StVmQUnXNSR?Nl)VPgGnX0An8Y,nb.Y,n_*X/rD)Y-,%1(oO4.X/iD+
['lcQB6o!shRUA;^Y\VXr;QEi%0$"kldWqk]!f5_]XRmI)7?r\ZF%*M[(*ZW[Bm9JZ*^jG\\5_m_oBju
a<\OCdE^"U]u%h6b0AMa`l5j3_oT[/^;eONf[e[!]sP)U]="d?WWf?#W2HPo/[NCGf?_[cf\Z)sn`KiN
H`PQ9_TJs2G]@YBH@1'eHZs[\H$asaI[%@]ajJN8btZO1dF?[neCE'qd+$C`cICCmeCW3obKnGU`lGNf
VNm$_K9MCSH>RkVMMI.ZRZ`u"N/N@0FaodQXeD;i^Wb6Zd)=;dhqm/Ehqd/DACA]<\$iud^U(&3Af1mh
)01(gQBmV_F`VJ<D/O3-E,]Z3DfBW5F*iS'R\6LVTqA'VW2cksW2Z_oVPKlSR[p.KVQ$SsWN)nmT:MOB
RZNPgN/iaKM2dLRNfK$TLl$tGMi@XmrehGIMM?b9Lle(!T:rO"]"#2Y]Y1t,\ZDTrOc>EdSXPXhI;`L]
4JK9rYH5:@VkU#cXK/M+W2ZhuWi<"qWN`n=Xf/2!X/rA&Wi2ntWiN;*X/W5(Xg"q1X/i4tX/N%tX0&J%
V5^8\SXc4EVPU)dVPL#^TV%mNVl-DdSt)7?V5pVqXKf"6XKJV$Vl-MpXK/??XK&:tVlHf!Whul&]!Su<
CgQSh\\c;#ht?gCp]""fq=a7@d_io:\[/o[\[T#V[^ETPZa7*N]">Pa\?r]O[^NNO\%02c^;\",ahYs>
_o^?Scd0teeBc7T_S=(2aNr2IYI2Hue^Mpoah@\a#.Cb>XfeY'I]BBJ[(XQ.eBuO]_T:<gp]&ddFf<^.
_9/j3F`DGFI!p?cH[0g[H$aX`Tt8:dbKe>Vbg4\ad*gFkeCE'rcd'JCb0\YcdF-=ad*^1`bKIf1YbHo6
O+`OgX/2o"W1oZ@NKB3lWh#N<JoQ1-XJ_\e[DU27b/Dfbhqm)C+l;&3gsjTb]!T,b`lQ')WKKj^"EK$\
R$Eb_FDl&6D/=(gDD5mCDK'W=IYX#SStW!UUSO]_VPL)fWMcMcSt)43Pa@r9Vl6SsWMueiTUq^EQ&gq(
N!,#sPa7^9QNE5/M>iA9MiNaSMMhCk%ZH:"Jq]/FQ^aYY^UCGS?+R__]"P8:QApfcS"m'^R#?B3C20ZU
\#upFZDXRsXKAV+X/;o"XK&4uW3*G5Y,eP$XJr5"X/i8$Wi2ktY-+t0Z*(C7XK8G#W3!)"Wi2tuWN<.r
Str$NV5UBlWZ8+>URe-PR@gOYVkT]LVlm/#W3!/,[&^.+XeML2Vl?VoW335%WNNM/Whl_uY->L\`3Ssf
\AH(ti:QjDp\tTro^V+m`4j""\[_XM7^ok:\%&rY\$`fZ_7mUr]XP>X\@&]N\@TGg^r!t(_n3q3`6$0D
`lZ?FdEotI^V71kaNr;PZEM6ibL"PaccEc9^oONCI_)ngXK/M(Y/8H2dE0;B[C*m!g>V`)I'M/A^WNR+
FE;VOG^4LSFa84SH@:IA]#Dk8aN;ZObKJ;\cdC.gd*U4cbf.6+`ll`WdEp=keBlOb`lH'/Z'^?8QB%ZH
_oB[7`4WCAJ<Gk8OKPX]P'Cl8['-3iW3sOdaNNT*9A7eDgtgfCjkRtn]=Yu%bLbCe]<SB$H[1:2R['%a
EGTB(BkhF!Bk_?uDfBlIMij@#VP0QPVl$AgTVA3WW26/YQBd_uQ'n2=WW&q8Wi;niTV8!CNf8gMLl7=Z
R%0_<S=,Y%MZ/MAN/WaSN/`dTNK''[re:Q8OH>ZK77WB5Y.VEYY`jm$LOtJKT<>c7Xd"6OEdXUf\?2sD
YbnG(Yd:O9Xf\h3Xf8>!YHY=7XfAD'Xf87uVl?\tWMZSqY-G;3Y;ND`XK/@uWi`A%X/W"qX/W/#WN)nm
VPgAiVPL#aV4aEWVkg&cUSXrcStrBhWiDtsZ*^aB,C)eVY,85"XK.e`]=P>LXf\V%VkpN'[)'WSfXSc7
^ZG%]rqucrrr2p8rqH!Jd)Nr4\%0,_\@K&Z]t1_b]Xtbe]Y49[$,*dT[CNZM[(*aI^'_Wh]"c8.c-+/F
`;[doaNMoG\\uP.]tVe>cc3T7`P^!Of[.j[aaV0m>KOC`XK&8)XgH$hg"FK[Z`^OCaPZIMeUk-Uai)Au
G]S%PH?OLTDfpAMG'f(>]Z%n1aMPp@d*0b[bKnP]cd'hX_8O+!^W4OGe'l^me'uahbJV$%Un=3JW2m#)
[_BSm\?rWDN.7:jR?X22VllGDR'!j&VkU*$`FQm-,QOsqcJ.13g3A+f^Tb&^cdgh+e&8;EUUG;qQC=5*
I;s+>CMdm'D.mNoBl8!?L5hIgU8Of[TqeB]US=KVTVA'KQBRDkNKBKsU8=ieUSOc^St)77NK&gMLl%%O
PEV=3Qkl!NN/*4FNK06cOHG`kOcu#pOcG<OKI2J;PB&jHSuK60]"(BdG^"FdNL-KJZD<G#A8HFf[^iNB
\?;U,Y5YO[Y,eb5['?X3Xfek4XJi(oV6-htVPU2iWi;qtYHY:9YH+q1YH=t.W2Q_sW2QMdTqeQfWrAdt
StMgSUSe$c';hLrTr+ffVP0WXV5'ldWi)enW@"gUXLWaJW2Z\oXK/O!7F/r]Wi3)+XJi,#VjtH6rS5$$
_7f%&qY1"aqtB@3cbdH1\\>qk\%B8g^Uq1n^:h1p_oBa:_Sa!o[^E]Y\@9,e_8!b!^W+I<cI0kXa2Gm3
_nEk%^:qJ(`Pfg>dF6C_bK%KBdaU;)cdBtOMG1b#\ui!4W*30IfAkrG`3?DM]@QrMpZ."2d`KDNT6,4"
FaA:VG&VVMH$Ft6Y.i!"bl5]id*U(abKS;WbPo^Ca2,L#Ye.p!dF?^ncHjn`_6^53QCb.QQ(4S8TrkQ(
['??qRYul\TWbZ)SY36nXK]1CZ*5=LT;fB;c6*+Vb0\r"gZ&86\[&-2ZH(SNg<m?W;3Ro,EdX%=Q]Zc;
D/X<1DJa6)B4u$uGD(p9Q(+GBWMQJhVl-AgTq%[ER?WelLPUY>OI)K1St;RDS!ob3R$EeqN/<IMM3*m]
NfK3^O,]'OKnkPHR$a2'PaIr.R[0(rN.cY1OHZ<M\Wrkr\@StkA8#e%H&%07St_HqA6ELoE3$I[Xff:<
Tr"`cW3*,$YHkI=XKet.YHP"*U8+WeX/MkiVlZu!XK8`,Zl60Q['[*AXK/:uUSFNTR[g.NWMZJ_Q&q?'
V#I8IU8Y&eTpV4@W2ltuV5C2gUo()bT:r<eZE1FAY-5L@WiE"tX.dYK\Zi!=\?W9CYaUmc`l7r8]tqOu
k4AKEs!%4-hV$)j_S<q$]XYG]]YM1j^;.J!_8F@:e'6%Q^:V"l_Z%8:_8!Ro_90pEc,7E.c-OVS`5&t$
_7m[p\%KSp`PfmAaiMQB`ll][e'cjp_lTl:[^iK?XfTq&o^hA<kL.5V\&@_/Idm3oJud8?_p+inDg$2F
Is-!XFa/4[QE@I*`lQ?GcHakcd*Kq_d)sJRa2c05[^3'D`Q??Lb/V-!Ycj[\Q_UgkWg\ijA;cnUXfA+[
XJhD=D/bQ;]"GMVZ+ITS\$iB+Su/$V]ZJjgj3c<4hVI%K<L/oCQ__43d+?@/%Sf*HVJggBQ^!SYE,BH0
rG3`nB5)+"J;9,JQ^XYGVl6SqWMu_hSXGn0P)P*FI<g9mLQIjmrgt4#S!on?S=>t6PDtN\MN!RSMi3RQ
NK&jNKnbPIQN!<QRJrWrR@9P-Mi*4<H?k6d3,tLi[%`=pAn,OoFa\dmPaRCSE*QUZEilmaYd1gCUnj`^
W3<A*Y-P:6Y-G44XfACsUo:/hVZ*JJX0&V-Y-51@\[T8`\$<<IXfA=uU8"?UUS4HZV5L/`R['84UnXZ[
U8Y&iTUD+8U8\'k+fVK@Wi;kkU8"TdYIV$[W*#S"Y,AD/^;.7h]<nZD[Bm4N]<R^!a2\/<^qdh%j7`EL
q>Uito\e?H`l>p4]t(fT\Q?AT\@oPkaMl3<bgk7qcc*`4]">_k]t;,"`5fj<aNVlTbeVENbf%6,\\>u&
_nNXh^;7_*_o9L3_T'^Ee(<7*f@JBcUJdecYckXdmf3=dna>c'b.iD<a8P`3q;Hk(bK7fIR<*4\F)cPP
GB7nLF+^L![(F2lb0A;Zda?FgcHsbT`P]I'['-O2Z*CLK`k]C-]rn69[_&oS\?rTCRu;HDSYD@6PDu'4
VMTA1H^;([a2Gd/]thOu]!%d-Vk^,_a&W1/f\>64]:=UuKpeF$Vlq;ddDUf*8s-/lH&n2SMg',XCiF9-
Ci*p&C2J0JO-PuuSYZ7^.]BJOW26/TQBIAgKmIl_DKC&MLQ\.#TUqaDR%'P5Q^3huOGo*UMMm7EreM&A
Nf/XGKo:tUR[g"@S=KPI'UY&DM1p>!JT)ZIRZiSPB3ebNB5mipIX-p7Jnnb%Ciuhh]sG)YZDXFlVlHf"
X/rD&Up@5*X/r:tU8=]aWhlYoVl[,-YHG18Za@*O[^*0GZ`gL5X/i7tUS=KVV5UDpVk]iTT;&6\VQ-Vi
X/_e]SXcLUW2HMkWN3(tVPgGqXKT+?`h>Yc]"GDW]=bYa^;@I`'<8CM]>:qRZcBlZjM&FD`9I!orVHOP
qXs@5d`KMK`PK4!]!o2W[_05b]Z&(9c,e&Of@J<g_83dn]"c"l_o9^>aMc-BbL+kicdg5<^F@(;`QclQ
^VR\!_Sa71_ns4)a2lKOeCW@-e]FdRQ)D4>mJd.bs8M<FIeN$X_naLqs8VHEI&G93ai0ZnDJF?<F*VqJ
F)Z)dYIVB]_oKpEc-XqeeC2^g_nj+$\?)3`Mj0QqT!cSZd*BeV]!SlOZ`gU=[C!$.Q&h8pPE_<'Sslg[
M0Xl9Ttnaka2l6>`kT*s]st;IWg:Ir!&iKV]ps[g@rR9u(T3IXT>o-jKiVcWWG[!@PEC]DDf9K1D#S3C
D/4$3K8c%^R@BhEV50l`X/`.kS<]4sMhch+F)Gf2EHchkR%'V7R[')%Q^<u!N/E@DLPCM<L5(D9L5(VC
L4tD?O-Gs"St;RGrgOUjR?s(rMiE[SQCsY(JT#+)>@DAsrd-PGF,#[%C1V($J#g)oYHkjMW1g,hXJr;)
X/;i"Z`U7+WN2qkUT18nVQ?hsXKo7:Xfnq5Y,M?).^-.d[Bcm9Y,A+kTqS3WVl-JjUS"?YVl-PpUoBrX
Wi)YeT:VaRUnX]cri6^3WN*#&Z)k+3]!o5Z[^`i[^V7Dt^;%%SWiiqK^qI=q_6s1$^W"11m.gPUrs/Jt
p"\$>ai==s)8Ebr\@JrR^qIFq`6ZoZbf\#Rf$_g``4<GX^,3^D`llQHa2lKLdaQXjd`]_O]tD1q`7*2]
_md>!a2lEC^qmh%`P]^@cI(1jd^Z3ZaP6Cds*jLig?/.tj356fq>^BNhKl*E`Pf]aG].VGGAq\LG&;Ac
YI_Th_oTsBbfe;[dFH^f_ns3sZa$?hIVs:UKTMnGc-=DN_Qg5GYHP+-VQ$5XP`CuuR[T_1NKo<ZVk03;
M3b9V^q@J*aMbp.]>)(o]=5Dadb<6gY`a6FCf5ME[BcWkLl9!l[>]HmXK?DgP*1rcG&M;:D/O-*CMn$3
Jr5\VS!]Y<U8=WTTV\EWS=#M#LP18*FDku1CMe':M34-lQ'7GpOd)&kMMR"?K)UB&K_pKIN/<7BLPq4X
R%0e?R[TS4S"-";R$El"OH#?`NIu@jCMIC!I?'_SJq8&aJr4hmDK:8_XLGgCYIq9AUnsuhXK/M$TrP<#
XJr/!WiE"pW3!(uXK&A*Yd1@6Za-sCWNNM6Za@?SYcb:9XfA@tTqeH_V4jTOP`hN4W2cr!WMH>aVPU5i
rhC7%Tq.mWX/`8&WiN>+W2Zu%Yd(O@[':OZ]XkSSXK/5%Zb4#d\A?(kXo%%ibf[ijq#1*i?2aZtiR6&o
`P]U,^:V%l]=YPc^;%S&ajS_gdF?Loi8`M:`P'%&^Vdt+`Q?<FbK7lI`PB'l_Tg$9`59@2b/r)\aMPm<
b0A)Qb/V60]tM;#`6$BWd*0VWh"(Dms8MNAa2?KknFPkk`7sVGj4`=:X3e]"a..BoEH65DFE_eCM6"5%
_oBR3c-48Nb0J;Zc,[cA\>cI1TTXeDEd3:tT>J^laN2?4ZEga;VOO-AMhZ=a?@%m%R\-%6S=5J-T;J]k
Zam`ZYHkpZ]Yhb)_T'L+\%KMo^TWt=L44lGZGjqnU7%.)]#_(@S#<NoEdn"Q#*!nIDf'?/rbYkYFF/e&
Q(+A4R@U"FU7.UESXZ"1OGJ@4H$41FCM@HrDfgMbOcYZgP)YNaOc>0SL4b/5L5LbDM1pY>MN3RKKnbJH
Q^4,5R[95%R$sJ7S"#t<PE:c\J:)P\Fao1.R@p4IQ]6W>Dh!OmH?=FbLT@ekX0/n:VuEMMWiW+rVQ$f)
YH+V$X/r;"X/`;'X0&P.Yd:X=YHtgP[^<3A]!&NS[^*0CZ`gL/WMZD_SX]VM-((!iUSt8qYH4Y!USFQV
VlH_kT:MO@TW>)nXfJM(Wj&V/Zb3sn]sk,IZE^I/USk#jZb*iX\@TPkZE3cW^<+C8mJ$PXrr64$r:osO
f[%[Y]u._&^:Lni^:h4l^Ve"/aj8Jfg>ClBhr`S?dE';Ia2,a4b0%iPc-=2GbKS#>^rXO6`lH3Ab0/)M
^;.\2cHaYW\A#ku^:V1s^;In4cHjmHf&H&\g;gtA^r4OOjmqrnd+7(3gY:V9X3\`(`12*mDJjZAEcZGV
S[6&C^qmn.aihiH`QHEJ`5op:ZCI5QTpggfDfCAXR(9`F_o'R1ZECL:TTP1`J;/o.EeBUHU8@jk)5E=V
Nf9^D^qR=^VLk2M_SF.1aNMZD^qRH_\[/6+U9V\_cHF>EYGISP[_9,MWj&b0EIX:ARZ;Z5Des9,DJsH7
H%:d7R%L"=R\$7HSX>q>S!fY-NJN")F)Po2C1h0mCik)ZMi<IKMiN^RNfK$SreL`7Mi3CKMuAMNNf&RG
LP_(TR@Kk>R$<\rR@9\=S=ZCKV4N-uJ9ug$NM!G^XeD8UQ%a?tGCtNtG^P-pWNrn0XL,++U8=cfWhuYm
YdCa?XJ_ttXf\V)Xfnq2YHY47['?[9[(X/f]sP8]\%0/Z[BQmE[]ZU0WhuPaR[08/SYN0_WiN5&W2HMd
T;/-SVl6GfU7e6UW2ZerW2Z\nY,3G=XLQ$SYHY+/XK8P)W2?]-_S*Cd\%]M]XRP/^ahl-bp\b!hs!dj@
o^:S^b.kX'_83ap]=5Db]"G\j`5g'Bair;ij6>Oflf-[Md)sPMrl4rY-dL>obf7ZJf$2CZaMGm<aMZ*;
_8j3o]uS79a2Y`u_T'L0_8=+*[=5a/cdgV!gs3X=YHbUR_p@6*m,6FDgY^c@k'a8T`5oi\G].J?FEMYH
J=!@O_RmIn`Q?BNahY[8ccF#F`PSpALl7[dPDaR1Knc,'[D98R]Y1_RXg,"&QA0^3Lm+:(WNE%uXf8%c
N.mCSKr)Dr^p^D6P-MpFaiVNCbAt\F`P/ae['.6lf@AI!b/q2qTUVph\?N$=Ybc8fR@BS%H#dkBDf0H3
F*W7mQ'du.SXPt9T:MC;R$sM4P`CTTG]IY:C2.HpAS>n%H@LEmH@:F#M3!^ZOG\jJLl.+MNfJsQLl.%E
Kn=o0L5_4YQN!EXR[BJ7Sc55]Spm<(S<o:oMN3d_TW55sUo1,[N-oenKnt;.H$FP6[C!!;Z_sIhUoC2h
V5^N!YHY(/WMZi&Y-,"6Yck(-XKAe9Z`L44[_9)Q^;Ih'^:CY]['7'OZ`^=0W2lklURn*PTr"luYcO[o
TVS<ST;noeTV83ZVQ-MgUSaibVf\i8X/rD)YHP4;Z`^I1XK8D"Vld>;^q[Oj]"GYao%q'q_ThKAr;HZp
rV,sRjjV2f^qn")]Y1kd\@]Mn^qdk-c.'kSbLPS'cJdpLki:LQf?q[]a2Z':_oL'Fcd'e^bfn5Ob/_WI
`l-*B_S<t#\AQ8a`Wj/h_oKd:_LBA=^V.D$cILCd`PB$iZF%-O]#W7Ui7c>pf\G?Dl$KP[_8j<NEGfc>
EHH>RP,5_0`kf@/aiDTIaMGa4_T'F(]tUt4Fa/CqHuO^qO-HH@XL"adWO/q3Z*U[DWL&a+PaIi:[CNQC
RuiVnMg^)DSX?"E]uS1)X0K:W`uiFFaMZ*A`kSsm_8OIBf\+p*dF#tAVkL?2_6^>JW1auEJ!ZXjN-K;^
E,KN1F*2kaNL#s!R\'JGA"&dKP*_JuN/<7=F`(r-B4kgcAS5h"GC+[]F*W:hLl@7PNfT*VMM[=PMN!RQ
M2-e>KnG#3LPq.VQBmu0Ssu:?S"H@KUS+3JR$!DkQ(";?X/`.pV5BcEJp`-/MgftsFr,>*\@8KA[\f[k
VlHYnWirV/YH4e*WiH$%8[5J(Y,SM)YHtXI\?2g;]YqOr]Y;(l\[JiKZFIBMYH+Y"VQ$MiU8FohW2m&!
T:VXJV5BlPSuJ`aT:_gRWiN+tW26GnXJr9"Xqe(?Z*q$AXfnt6Z*14.XKAtI]st\e'Y1dGft>):am\j#
s8W)pqtB@4ccH+'!PlDJ]OACc_o0X5a2Z?Pe_A3ceE,rUg=k?CiSWGCda$Ckbf@fD_9C0PeC;jhb/hZG
aMbp4aO&;S]u%b+a25^7b.tj0`Pod1\@9/c^;8"@cbd/u['Hs>Z`pgPdG3[2^;/IXIc9GQJ?mP7a23dR
EHQDEFG#^IXM2Zg_T0gAa2>m<_SNgq]=kS\\@%lJBQ8WaJ96-kP+A>DU6:J1Y-+n0W1C&rX.l/[Y-+b,
[Af.?JrGt[KlDjHXf7h^ZGOc*ahu$8a3`2Vb0.lC]=uA6da6Osf[\?ub."49[EZaq"g4i"Tl,AZQ4]($
EGoc5D/XQAIu'8SR@'A3rg?3BQ]mJjMM[1EJUVoiDJ3Qk@U`_UAnl:.G^+=MFa8CfL51_HMMd7JLkpe=
M2dLOKnP/5KnbGBNKTToQC!u)R%'S8T`1Z%Wi2Y`R?E\sSuJruWhQ/]WhP]6K8GhQ)glgNF*+Uu\?3'C
WM?>hWi<)'Xfnq/Wi<)#W;a"fYHG"3Y+r5.ZF@EZ^q[FjZ+\H1^UCS\\[JuPZaI-DXfeb#TV8'UVk]o]
Vk]iTT:V^MUo1#^TVechWhGoRTr4sjX;S%=Y,eS&XfJJ&Z*:C5YckC?ZEUC-VPUN/)7[;i]=bWEe[iH0
bkLl1s8W)qp\!Lsc,dg%`;[DU^VRt6b/D?CbKneng>q#AcfFfpi76N>io&PAh;?i4ccsSSbKe_keC;U^
bK.N9`5'@:e'umub/VE=`5][1`5BC']t1ec[C!ET]>W"A`4E:XXK\q6Z*:gcjm:HF\\d+`l0@Vc\Bhe/
^lEMXFEMYPOcuWJ^qI@u`kKL6_o0I+_75]6\Z`9CYcsOEG%GoYN-oetPG4\CP)Yp&U8P&kS<fJ2USaNB
PF%StOc=sJO-ZH-RZjMT\%8]-S><U0_8aO:cd:"cccsME]uJFMg=am%dEpIe[\fK]\^AI$US4?NDh"";
Q&'X)Df9N1F*N(bN09TqR@'D2QBm_sMMHq?Knt>+F`MM@B4>7V?<prJB52=)EcGu8EcubYK)UH^KRnc-
K7SZ1N/iaKJV8`2Mi3X\QBdl-R[TP-R[]e<U8"K`WM5rOOHGZmVlm2"U85!"V36WRK8,&*Ec5f6Ej<9c
Y-G@2VQ-SpWi<&%ZEgO0ri8#WY-G+5Y,nk-W3E\=ZaIB\`l>^)\[T&\`Q#j7_83psZ)t12XL5.-Tq%[I
Vkp,ZSsu+?UT(/`rhKmrVPpPpW2?/YUT=Bq&?;e0X/Du!X0&A(Xf/8!V5XBm!MuOqWMZi-ZaI7@\K:Lq
]thM4o(i:brqlWbl.XD-a2c*:aM>I+_SaLBd/M3dbfe;^hrO([g"=m(g#MJdl/h!fk2F_6bg"AXd*Kn\
d`otS`l5j7`m2oUb0SScc,mf:`Q#m<_Sj1$]Xk\b\[/lZ^;S@Gbeq$![Ca,`['75mcf"'CeE?N#q==!/
\BDV-]S:]VFEM_WO.!5e^:VA)]Y;M(^:q(YZ)="i]!.`jR\?O=FDbf%?#G4TQCakIT9+bVMisL1W1K!#
JrGqTL4b;<LQIXcR>R6'U8G3'[_TnlYF_o4^VRk.cd'b]ccaAC]"uG7g!n9jce-tc_QKo-YIUEmO,oZs
Dh4(<QAKj+rb``pFF/OnNf]KiP*_Z'OcklbKn4f*IXcchF)Gi1B)Z0L?!L]C?t*\YAnPaiCN"08H2`1H
I=6KkI!gL#N/rmOJqSl7MiEg_QC+&/S=Z4=R[p(BTVSK_Un4$AOH>B_T;&'PT<,O:\$_NQIXQ6MA7]Ch
DR$g`Xg,+,W;`hEXK&D,Za$L/Y-=q(YHk=6XJi.rXg#.I]!o;^^WFO2[B6@:_nj1g^DjhmZa7$L\$E3?
W2#iOTVSHZR$sS<VPpGjUo"'i*NcB>W26;gWiN2"WMl\mW1p2iX/rA+ZELO5X/DV>USb,sWiWA&R[9_R
]=@Ub^;7V6nbN1_rVQ9RimPrkb/VH>aMbj/`5]jHbK@rHbg=S\fAl>`h9j0PdGa0MkND'jh;-]1cd9t^
e^rI"`l?!>`O`q%`Qc]Jb/hiJ_SX"!_8XI9`P]F%^V.Cp\[fSo_oU'LdDic+]=u.2^9b)F_r9qHrqH3f
s8DbJ\]_e1\V#3SGB\FiQ`%C2ZFIli]"uD"\%8W+SrT22V7!"[P`:ljJT,$n6!eVUH[gNuJ9?$]KU86u
S=#CpFDlGULk]o%Nff]pPF.W2Y->4D\[98n`l#a1_Ss@3c,n2PaN)98]Xu/2eBc>^aj8\rhoMC\Tmfs6
=`o[aD1Ik9Q%aC#Df'H7G(#+%MiI_!=d5A=P)kTWJq&/oH$=CQDe`os@:*;H?!LW=>[:WA?!_#NA7oXq
F*)MIG^+O[H$XpmMiN[KK7el9MiX!_OHu<&S=Q=EU8Y#eVP^2eUn=0DP)G-SPa@VDPanVXY`"!YIs>g@
?s[AXDRI*aYI(X6Vl?bsWN<;-ZEgI0YH+Y"Z*172X/N2#XK&M;`Po^2]=u(t`PB0s[Bd6LZG4)\['dW_
]!ANAVkp/XS>3$]T:_jRS=ZXWVl?csXVe=FW2QSmX/MnmUSO]aW1p,gWiN8+Za[AYZ)t..W2>T>YI:j:
V4!F>\[_Ca^qmb:o(Mt[rVH-Kf[7gabK.lLahts4`l$!IbfdrEc.Un)gYCT@j6Q$hf[J:&g=>?Kin;u;
gsOEpf[nj1d)X2Td(dE9`Os(,bf.N<^qdXn]YVG'rk8oU]YD.n\[fPp^;eILf$(c7]>M\)]!AcI`9Z:D
rr3?!s8VqO\B;S/["\I(@"F?4ZF[QL[D]Vc`50!jZ^mDUN/WFKTWOiMN-o\bD00Z+?!(*6?X%;]C1qL7
O,o-QLjsr%EG9TUOFN7YQ?e"BSXlU`[C*?R_77+tbKA&TccjYYcHOGJ^r!gn[D5)OcH!oIe(E;YAY-'!
Ea)$q=G2`PIuokYK6;*NE,frEJr>G>M2mUROdVAqOcP0FI!9UPEc>f-A7JtO>$>!0=8l>_>?b97>?tNA
?tO.iDfg/HG^+L[I=Hm*N/NIGK8,5@NfK0^Pae25T:r$ZXfSY-WiDtuV4sHEObsX(Ll-t?KTN"$,>!0.
HZ/mp)/*o-[Cs)P[C3$3W2Z_qXKf%<YGnY+W2HTnXt6fZYHb@8WiWD<b/_E8\$)^!S!fe>U8b?$\%K5U
Z+[`W\$N*-R?a&)S=lVUVAuM4T:i!WVl-Q!YH=t/W2Q\sW26GkWN<2'UnashX)P8JZEUC'TrtT'/QB9i
Z)Y(2Vm*Y>qp`I"^XVcHq>U?eo\Rp;a32iVb0%fD`5BO4aO&D[`PB.5iSNYXfZ1e5[BdE__p-W^j6>a[
e)&s:hV-f<d)aGXbK7iG^V%P(_8"%9a2c*=`O`[p_7mV^\-f^Q[Bm3H]>(qmaUc_He^Mt)kiL$s\j1Au
ip-IA@Jf_U\B)2&\:JgIH[LC/XM)3EWjoR<Z+df\\$qrsTpC7QF)m/(Mh#qV8jG!_/i5[Q7nuoc@:<>C
EdE1hJq%iQ?".G_H%V0BQ^sOuI#t+tXfoCJ[D]tp]u\FEdF-PDeHF@Kbf7YO`4`^j\[ni)Q,)"t!!9+!
TmCQh@<@KoDhF%4Q%F*rDfBZ;IYWl;KnteKMij?iOH5BVJUho^ChdZq@UNPJ=B&4!<`3%%='/O+=BSj5
?!h#NBPVX1G'J=ZH$t3pKnb>>LkLJ>MM[+FNg,p$TVJ?]Y-P75YHtL:Z*1*TURma4LP:D4HZt"'O*>M]
F)u2/A8#dtFL8cmY-bR7W2ckuWirS0YGe=sVPL)bXKek.Y,nq8Y-Y:,Y.MBPWMH,SR$<GoR$FGEY->(4
YHb[N[BQd/TU_7/P*D?'T;SWfVPKraVl6PpYdLgAXJr/#Y,S>"W2lr"XJVmrWi2ntX0/J&VP0T_[_&65
ZEU@1\%/rV\$c%X_na%@me?VXqtT=-d*9bXe^M^``l5s8_oKpMf?;R[\&$VOd)Wo-ZF$s7\[o8jb0ekm
gtL?>j5Jnpg&Tb(b94jA_8<mu_T9sKe'-(W`5fj1]=u"l[Bd0HZaI-EYd1\O\$iobb0er'k4&BFlGC?_
n,3%\rVlh/rV,lA]Z%A&Z%7.HI=6mHZ+R3,TX(SiYHk^SZ`pL#W0_aWBN&5WE*>an/1E(u)_Wiq4[2D0
9Mn_jCN"02F)u>;?<^fFB5r?[PFA&.P+JYMTqem.^r".8aiVcVeCE!tf@SSKeC2gjb/:lsW25r7G+d%%
G'](,K6DE`IYX&QE.a47P(IanE,TZ<Jr5S@JqJi9N/s-`OGf$WKR\/bC1UdZ?!CN8<Dcau;G^@n<**-"
="IQ]?!^iF@q][rEcl_TI"$TsK7el3M2$_=KS+r3L6.[jU8=cfWNEJ4\@B(u[C*BBWi)DNM1'_oEc#fH
HZX(;BkV'fAnl.#EjNNgZa[9>WN3,"WN`S.V5UAjTr"HYYd:C/XfJb4X0]"0YHb=7Un*mGSr/;dOH,p)
U8OicXfo"<\Zr'+U7Ia>S=cOLUo12jVPL/fV5'`[X0T"6XK&4uX/i2!Vl?Y0WMubnWi;quYHY.1XfSA#
_7m=^Wi`D-^;[ju\[hO\_na(CnFlk\p$gkhd*L1ie]Z%U_8aF5aNVoYd([rT_oC!IeAf)*_8iXS\[Sl^
_8FF=d+d7.g?RSMg=b$%c-4MXa2Z*=bg-49"3ns$]D]SQ^:Lk`['d<I[&k"DYHbI?[C<`^aO]\Kq>UEo
dFn!es(;3/qtg0^mu>'#^WE[.H@LBiM6+.qPF8&;Q(FJ;^;[1N[\fpaDKfYj;cHOd4YJ0=2]NY`-R:T,
3'TSs;c[14Ch@6iB4b^fDgI%hN0'?rR[p1BQ&^BLRBF0=a3W&Ucd^IqeK<Q#f\"a*e'cUd`3l5'OG%M&
]!IiUCN46.I#jALPF?r>K9)7]J9,[LDfU,YNf8R?JqJi8MN!UXMi*FFH?*k:@piVJ=]e^':fL=h;,gLn
<*!%$='8^4?XI2OBPM@(FEi%VI"$QsK8,,:Knb>;KS4u2Lle$pTr4`aXg,:E\%&rY\?;j0SW\eQC1Ush
BPD*j@:!>N@q]atEHQ_S[(`rR[]ug5X0/M(Y-"UrW2ZYeUnFZiYc"A"Xg#.;Z*1:5Xf\RtR?O,$K8Y_I
N00EnTV8$TW2Zl(XehV\S=H%?VPgAnUnX]aWN<5$VOa0IW3EP.XJr2%YH4e'WN)qsVPpMoW3!2,VkU<"
VQn.OT9YD!R]OEB]!u[bZM;b_^qJ[oqZ$Tjo@q^@bL+ecaMP[0bK7`GdF?ardF?Ogcd'h\`NuVUZ)"P3
\?r`\_8sgCc-=hjiT8q@bg"5J`QlKE`4s(/cHaGHai;$']Yh\-_8![n['R*CZELF5Xg,+:\%9;peb]:D
rri#os8MurrrW&domZN&muP-$^rrd/It<3%P-DR"MjBluNK]<p]Yg;8Yc!tKI<&^r<),qM3@Gt$+r;=H
,U4Tg0K;0X6qgQ\@q9%L?"%5RDM*b(OGS[TU8=]^S<S><GET)Da3)KMe'uq$f@\d2gXk*.da61U[Y\O.
F(0<XIo\rs5>#IJROaVhR@8,KPa@YeEc?&<F+&h'N.Z\5K8,)7M3=![M2?k/EGK2q?<gZ:<`K&o,#1p1
;,U7g<)cju=B\s:?=./QB5)7(FEMbQI=-QrKSG8<re`.ZKnFu1M3=6tU8+KaYHG4?]",J_YGnFhO,80q
?sdAK>$PB@?sm8QEdi1UH$anC]sXuKYcFq.YH+h/WhuSfVkKcXWNN;*VkpN!XK/nAXJDSgX/)5KOGnmH
MMm=MN0]csTU_XCVlH_kTUM4;S=lXWVkTrVS=um_ZF70LWg]NRWiE5'Y,eb-Xf\V%Wi;tuWi`>#Y-P:*
M3Os7PcCdLN0'*WUN=;`['-R5qTcjm_;Fb\rr)`\gXjp"dET\K]tqb5b0%oUf$MClhpolgbgXbEWMl\h
V5^]'['7<[_og'B_:7&bdEf\F`l6!9`4`jqYI)*iahP[2aj.]DaMH!:`4NUg[^30DZ`pR6X0/Y6\\?,5
s82Zm"8r3!q0r>(kj@p4nVk0(`lP66KnY8;T!5T%OH>]aM27G"]Y^bAYGmD"L3Zrp6:=7(/05cK()@f1
*?ZCS/2'"B4?-,8<)QRc8m,J6E-l_LF(/pATW,-)]=k"aK8Z"p]#;_5b0\\keCE4+gtUN7e'Q:U\UH_.
<E;7W;F*9,4Z"p$Vk]fNQC)]GQCX=lF)Q,=EdWOtNJ<+AL51S?M3aEiNK&R8E,&ok>[(B4<`;dh:/+I^
:.A#S;,U=m;H[1-?=.,NAS,XmDfKf?G'\LaJqSi6M2I@NMMQh8KoD4]S"61FVlQu-['m?FX/`(gP)P!/
?XR,+;I!^EC'/0\CjZ,,G'U=&[B-X;WNW>)XKJV&W1BKPS=us`Xf8A$WN*/$VQdV:W2$&aUR@=+MhZtH
N/WgZQ^XG;Q(483US=6IS=5q;TVeQ[Q^XG4Tq\HcZaI$F['?a5X/iA)XKAY-XfSM#X/W/&Xf88#YHa[H
I@mBTPI.9^I\`g0Uq4"?YH+l&dCm90ipm!Irqc$=f$qjacbdB5`5]sAbKJ;aahZ6\g;h%KbepfgV59u_
WMZPkXLQ!\aLoI._Tg?LaN)BC`Poj3]X"rW[_Kc#_8F76c-F\`c-FGO^q@.d\$WEIZELL9Yd1^J^<"Y!
rr2rtd/F"ErVopshrF%jp$n$Rbfe,+JqS`/LRb6BYD7aiJV]nmXLl-SYHb'ZC3+Q.83]7%2_#mf)&<r*
)&XA5-nI#/.Q01F84c9B9MJGf?>XIk;d3pEH]+,_[(H=O%^Vt&Up.PE^VIk9e'$1jrn.e5e^Dgf`4h-f
.S`\H/7)Oc>\%>ACojS.S<T@\LmXd#J95^JEHHV]MN3ONMN!LUN0'HlNKT3MH#IG-?X-f==&`$l9he8S
9hIuL9MJ>\<)Zb">$G6>@Us%`C2@d+EH6,EH[^NtKS50\M][e2KnbDCO-5`nR@pFXY,\=uVPU&bT9YCd
G[k8f:KKS_@qTRnC2SEGH?sg[Z+.-BZ`pI4XJi/&Vl-JXS=Z4IWMlepV5C8oX/VtqYct1+V50fPP`LcZ
Mj"($-B41WR&$76S!KD.Q^jM1R[fk@V4sQSW2?8^USb&oZF.*L['['=rilC('<J7:Wi;npW2HSmX0/b/
L30/oN$4h$XeVhsWNa(H['R!AoZb(]^#/>Ys82TRf[SHgcd0MFrlA6_`lcKMdD`i8b0S2J`Q#["X/Mqk
UoU;`Unt-"[)^"i`4j()aN_]Hbg=>L_o07*daQ@Wc-=PVb/qfLd*pCda2Gg*\$ioWZa7-P[CNr^\\?&*
l2Ub_rrDQbs*"CpiTKIrnrLQ1c-*#=Jq/0&Un+KhFGc-5R^0$#]<A9CYapAY?t!/26U<ag-QX-B()Ir-
'GqW+-RL`),r[V;2a'`%8P`Ge?Y*hTAV#SdJ;ohfY.DEa^Uq"XX1#LM[C3ZgdFHdqcHOMTcHOMP_4j[P
=@H175@\;4D0ToMZ`9gpQBlZMS>2C"F)>f5FFJguN/ERPNff]pR$<MbL5((tDJEZf>Zk31;G^(\9M7uN
84?'A85;oVr_s2->?kB=@V'1cCAr#tDK'T=H[L9pKSYD>M2-e>KS5/=N/EX]S"6.ASsl=BS=l^MR>ulE
D.[Np@:j7hB5;C*G("^bH?a\@\Zr3@X/N5(VlHntWMYrOS>*-dW2lqpVQ-i&WMQPqW26>aSskt0OHGWe
R?EGgOGf<cR&#q*Q'R\mNKoj#S"-%GXg5.:ZELI5X08Y1ZF%$JZ2Up@[C!BFWN3"tWhlDbW2ZbpX/rV2
Rsp*n_5jZBXdl5jZ+n,c\$WEHo#nYT^u+VYs7YsBdEp@^cGm`=`5KO9c,e2Ze]#5=aM>^.^V7:dXfJJ#
X0ALnVl6>mXgcN`Ye.W`['[TdcHaDIa3`W!i8EA?eCN'oaMl<FdFZgka2Ps4_8!e$]t_A!^Vdq%\\H#'
hus)Ss8W)ts*!r2s8(['hr*\em$GN6d)hf,IXQBnUR/!\H]X5Q[DoYd\tkgkXdXHA?<^#h4ukDM,T[jC
(`=A2%i,uq*?6Fe-mCB%1ajq=7Slr[=C?3#K8l4cS=H@RXK]"@\@SuFWNEeC\?rZ^ahbs,YI_fobKe8N
_H*aY6ZS#iC3su%Bmu)C\#ZR*R@SPXSYDU'Df'E2F*rY"M2I.LNK]ZqQAL9HIslQ\CM@6a>Zt91;GTtZ
91_ZG84#a;84u]N:/k:t=^,*6@:a"`C&VimCMn'4FF8RjKnY>:K7ST-Knk;7KS>DMR$X&(P*D<%S=ugU
RspNYI<BsrO,o*FG^4^kMh?J.H['h?\?`6=Wi</$V5^SpXeqVaUoCT&X/rG$VlHo,VPL2qV4sZRS!fJ(
OcPTgUQU=eO,8aSLl[mdO->leK8c(^R@^4SY-54?YI1pQ[Bd$BXfJS+YHP(6[CE]NY,eS!V50]SVPpMn
Wd_"PXJM5f]!\oNYHG(1Zb*r][^<BHo$+bS^Ye>PrV5j>cHXe`cGRK8^r++:cHX\bgW$tEbeq94]th:h
[BZp:XgkL(VQcqtZDk";\@/o][&'b4_o9O7aMuQ]hU0m)dF$:``Q-*JdF6Rmbf[oC`Pfa8^Ve%+aiVN8
\UM-*aOg4VkJtT`dHL5mm+95#h;75Zm?YN7dE7o&H['R_R[LIVMO^'4^;[k'YF1W>SXs\$?!^&e4#J`B
+s.aC)&OV9$kX?k(*")1.P*##1FO:p4[_qA?"[hmKo:_RXKf(6XKndnU84ijXK/Y5['mZf^SJ0<QDqX>
c!&?7`l,9IAYd;b`4Mb/Q^tM(^94W:SXabZS>)F$Des<0G(,('N/<FMPaIl,Q\Bs@IXH6RBP1g\>?G!-
;,9nZ91_WF7m]R691_`N9hSJj>[1TA?t3\XBDuQeC2@a,Fa&(YJ;/l4I=-EjK7nr2KS52ER%'J,PEM0#
S0O]&U7[g<L4GDf['lp#P`_9%Q%j[6H?jnF\[ATCX/W2"Vl9To=/D^kX0]+9XK/:rWMlu)US=ZfVP9]P
R$Nr"OGo-[SX"qaMMm=LP)b9^T:2"*N/j3bOIN,KX/iJ1Z*CXG]=>;W[BQg:['I!E\@/iPY,eV$Tq%UD
U0OOnWMlkrWMl\uX/2MeYd(7-Z+%9S[^EEIouOYN_;Xt\rUoR7bfe/Rc,@<,]Y_b5a3N&^grRFQbf.<.
\\,Yg\$WB@WOB10UoUVsWj/Us[Dp"o^Tk&S\[]ERar\j`f[eKqcdC1ecI'tge'Z^od*0\V`lH'8`lYs1
c6:?Q^U_(laj0)4aKr7`]"l81b.GC4h;[V`k**^2d`S,*rcVG"QCP.SR\m1%aN)??R>[>lRZ_&Z>$=EZ
2DHg5,Te!E'bh`-%hB?k'bq`.'.?%)1,:C74?,>o?"IM[H$t@+PG54a]Y1VFR[U(RYHt[BZ*_*^aL8%1
OFEt5_TU9LaMbfgQ,MD,eC)L\]u/1B]re90T;6I_S"c7!E,0<1G_(U2O,]*aSY;XHP_XgAJ:)HSAn,4R
=]nd);,0eW91hcH845m98kMZJ:/4DX=Bo-<?t!PTA7]:_B4u'sDfTi@GBeCYG^"=SH[^R"K7SW7Q^a>)
O+*7UR%0_<TV.a8MM[XmVn'L5S"ZaTR>6-8GBn\I]X+Z?X/)\kW2lVjXf/%nY->%/XJh__W2Qr)TqS<_
VPKcNR?s5%NJi[RQ'I>bLPh+QP)t`WLQdj\NK]ToR$stTXfSP.\[/QR\[8cT]t:qi^:Lha\[],RZ)t%&
SUQujSu8QfXfSS'XfJ\2Z)k"/Z`L!rV678=[^EBEn]88O`T6Xeqt'%"c,IK9aM>?r^V%_+^!G*SfYkYH
cH<o5[^`lY[BQj;X0An,TqS3YVlR&#S"['r\@0#^_nj"-aN`,]hW*)&dEg+bdaHb"f[JF%e'QF`aMl$6
`dYqF]YhY(^qI@m_p@&d_R-bPWj]a\`50=:h<!tijHmd2cc2MsDfL,dM4h8UR&[mCbKA);Lj>AOT9!/P
;cH:M2(^:),9@^>()7])&e>Kd(D[o/)\3`70.nn:4$u>%=^5BHBR5MeJXW6tSu&EaVP9ldXgYjMY,AeL
a<.dSM0YGr`Q-0IcH!Z(\B31IioS_5b/23A]rn6(S>I]VMOp`7JT>RCEd*"gPE_?"T;SK[S!/\\KReAj
Ch@-_>?=m+;GTt[r_$-\84Q-<6q'[@84lTL92eqr>$YKB@:<JM@Uiq\BPD:#Ec?)AEc5l5DK9uLKSY>:
Mia<fMMd=RPaIu2T:M=-M2d[YPA*sJP+AA>ObJ1/G^<tN\%T)HXK%tjX/r7mVlchhVl6PoW2QD\TVnHg
XeMGaUo'oWS=,V-PE1]]Ng#Q^LkLG>P)kWaLOtGFOH>WmQ^XD+T!,H'[(!]Z^;@Fe[(*WT]=Yeh\@T8Y
X/W)!Un4EWVl9Tr!j8W,ricm<ZFk`t]">,@UTLo4\$gaiYOBK@\AR@sq=sXHc-F>IaMYj)]"H&(^r4[A
e'uCTc,[l?[C3KN['6a9WMQMhTUhL;TrFlgWh,QSXKf%9]Y)+pVmsmrcdg\"cdgUma2u]Wf%J[.f[J-e
ahtm/_o9R;aM>a4^:q1m_pHu\`Q>KMDTBH(_TC$Pi8]:Mmc^+Ze'Z:/F)Q2QNImn:YGJ\Ld*'_SUkFGj
JY7g(:K'hQ3\N*6+s7jE(`*r''bCla$kjNp(`<qt*[N<e/il']5:]!)A7KP(Jq]SeQ\gW_Oc,?dStr?u
^p'B!YeQllS!BhU`5fpEbJq3&^;e%<*s8mscHF,A\#XtVU7A!$MOgQ2JT>XHF*W:pR%9eAWN)niQ'$fQ
Jq8>iC1LdZ=]JF":ejbY9MJ/P84Z6>6UF.07Rp!A:/b1m;,gY">?kE=?=.&K@qKFhDJsB0CMRZtBPVL-
I>Nl>MNX<fM27%PQ("58St)+'Ko1qJG>C5CPa@o.LO1IrH[0pb\%T)KY,J1qW2ZS`V5gAdUo12lV4j?P
VPg2uYF_A^U8+HVT)P*SQBdMhNg#N^L4b&1N/`aPMN*d^NIlkBN00KrSuoT<]=btq_SjL3]=bkk]Y(ec
]tCk_[&g.$US=`hX/;l"YH=k-Z*UaC\%lr`^V%"XY-WSe\[],TYjBB@[_h(rp\4:<bKn2Ja2>Kt[_fht
_T^BNf[%=Lc,do>]"#5X['?j8U7n0KSskt0Q_C1LT:DIOUnX0DV519$Z+%[%gt:67i8!)Ce^E%(iSW8>
eCE-maihW<_oTjCai237]XbYi`miVdaNWLr>/[_Y]to0FhVdARl04eZdF-1,G]e7_JUXN:]sbf)da?1-
OcGQgMQ;8*9Mn5B2)$U0+sJ'K)&=#'&eYZ_$4IO\'+kop+X%m@(a'tO1G_3lB5_d4LQ7LfU7.+!OH"jA
K92_2^VII^VQukXV6.,0^!+gIb/Urt]u7^f$36mMcHJAl];qs3VkKi,LRFj#J8oFDF*WCsS=?4LWN;t`
Oc4sDIXHN_BObIU=&i7!:JOSV9MA)N7n#s<6UF0>5sILm4?Q/,7R^0M<EEF1>?kKB@:Wt_BPVC"C2%Bn
@qKImGCk[3OHu?$NfB0hR@BbATqIj1Jq&B&FE*M+S>cXhT9"SPrH]$g]sP#JWi2qtWMQ5bX/D\fri7*;
S=c^\X09(:StVpSV4s]UR@9V3PE1Z^O,8^KK7s5Y5D=N,FE)_[G]\UiLQA"%VQ[>;^V@Cq_oU'=^;%+c
Za-jN_RR(aZ*:C0Wj/\)WMcbuXJi,+[^WfWX1uB^[!o$LVm*Y<[C!0BkfLEC`8pL_p@%%gcb[Z?^9t;U
]!B#mdEg:pc+Cd8b0.]:]XbS^ZE0pqR@'>3S!]S2S"#e'I=?EqLjsi8Ng??A\%Kf,eDB!9iS<GRhr!DL
g<Rj`f$_da_oKR,`5p'?_o':*[^j2mcI^k$f&u7s\N[R5^;A%BhrEnfm\7SEd`.`&G'S[qLoe_5]?/RP
dA_POQ_0J3XF!W5:.7?)1G1"!,Te!D'GD)h&J,?Y%/pVs"p+l/#n."@'+Yp'2*X?%>A//*I"m]PU6^dr
HZ`n4FI0,9]Z%e/_R?_]\@B/]a3i8Wa1\j`\@.9edk]7te]c.O[]?=%S=F_YR@fUhD/F65H%CpFSu&Bc
Whl#@L4Xr'I=-!J@prYF<`E!n:AmjV91VN>7Rfd35sR\!4#]/P3_;t792JJ^<)cq$=^>EC@Us%_B52-n
BP(dcB5;R9Jr#GRS"5k0R%'V<Unji_SV_i?H%pir9SAY)ZEgEsM1gA)I!WTB[B[!=Yck(+V4OTcVl$Go
X/VebWN2ht\%&`>USFQZTqS'HR[KM-O,T$ZM26tBLk^V;JU;BS@r$RFH[bsK&W2X:U7S3j_SEdm]u\:3
^9Fg?Z5L*h_7@"[XfJP,XfJ=uW2?;eXJrM2Z*q?OI\X9ZXf%tlX0o7=[]lsn`jrLsiq)s>nE8!>^r!^m
['[BN\B3.Cdad"!_nsX?b/V-2]Xt\ZYb[h[S!fn@SXc+<S</DKG%,BELjar9Nffa'Xh:sLdGj-Ae(EdD
j5A;/bg"5Of[A$iaMPg/_SF%-_S<h$]Xbr+i:#gO6/UeT^:CV\]#;kHi8a+jX2WE4`0c%&H[q!(XNS]+
d*L%[Q\:m%N0pZFK3:rE76`^d0IJ(h*uu45&ePQ`%h0!I$TSFp!<E0$$4I.H&J>`p*\03*5\51dG'/7s
R$!&=An5LgH`4B\]u%e1bK%-(\\Q,$b0JGW]W.9n2ScAJ[a!4LdEoqJZ)XarS:-EgU6'eCD/XK?JW-(o
W2ltsSX,=mJqAN)JTPa@@p`A@<Du^grCd>c84>p6r':BL5!8g)1HRln8k)KM928;];H?k&?!UcE?t*VX
BP(jd@q97iF+/^tOd))iP*MN+TVA-SUS!BqH?jafMKjE&R&HmWR?EG\I=$7M\[/E>WNWY-W2?#\Y,81u
Wi;kaSZ/QYW3N\5VP0WVUnaQNQ^=#(PDtK\OH#-TLkgeBKR\8dD/3m/K7eK&Kmnc6OHQ0'T=`:ka2,U0
^qdh$\$ifY]=GJ^\?W3=WM?8eW2Z_mri-",Y(!=O^quVH_RHeSZ*LU;YdUpDgV^J.bi\a"p@@CbbeLj"
['[9R\%p86_pR&cgs*aVbKIoA^V.1dZ`^4$TV%dER@'>,R?ie`H$4.FH&%0+Miij^SYrNmWN+A-jQG@T
hVdDPiRcE!cHaked`TSK_nit#_o9@(^Uq(lbtI$lp<:8'm_lW?ZF%6`eD0!EmBOd[dD2$'KR/*&F/mF.
bL4h`[>0d@Q@"gpWfLgk9M%Q41bC$u+!2I>'bh8l%L`aR$k!@G!s8H&0*;Rj#7hFT',Vc6/LrPcH@:9c
G^tI)Mh>qaE.!P4YIM?c`Oi(:X1?-kbf\8YbW<J<Ng%3#Djn_nf$r<q`3ukMVO`C'Tr+-,FDl)=G^tX>
UT:T$Wh5Q?NJE1?L5(%pCLgdW=]SEt:B!lf9M7qU6i]LN5n$"A4Zbbh4?Pr%9M\Ob:aJt59MeSe>$>3<
?t!PUA7]@`A8#^sGBn^mMMd@WQC4,1TUq[EI[Z+KJ9lih#[iRSU8+Q\Tot(WHZld(XK/:sWNN5"VOFHc
XK&1tVOs?LU8+0HX0Ak*SXlFJU77O7Q^!_uO,f9^OGo$UM2R@II=-*UDf'?:K7eo6L51YJN/Nm`S#X9D
c-4/Iai;ED^r=I4['@9RXJDP]U84`gXKJ\,26!U`VOj<pVBgK)]X=uJX.u`$Za$mh_n!5#kktJSo]aK;
^::PX[(!f]a3r;QcI^\'e&0$$a$m_S]t:_XY,\CrUS43DQBIMtNeW15G'.eCH]*rKQC4;?Yb@JVQ_1G%
j6GjahVI#On)!!]f?2Rpe]bnF]>2;$_nNUlI_N\:a6!<tb.0O+\%/`KZb"0%g#M;`[`QnE^m9b-H@Urs
T#T"&e'uC;O-lW*H@r3$SoRb%7m]?m.OQD])]KY2'bV,h$Od@N$j["?!s/N)!<ilC',;5t)B]h2)]9n^
>BPLNI"mQ8O->$HQB?idX0nmkO,0@/\AHD88Bo<!a18((G/7nn*6lj]dFZmh^9OT2SUcfpV3?=KE,p#C
I>aYlX08P#SX,=sNJWIKL3dlTAR8PB<Duai8kViM8Ou685sYE81-e#d5!(\_4?bnp92/8];,L4i;G^+_
;,g_(?!^rJ@U`hXAn>UiCiFNFL5:kOP*_W.+/>O#R?E>YJ:<#o?tanIT<PZ*X-SNmH[!'2X/`8"WW&nh
W1TuiZ)X^uU7n3UUnX0AY-G:3Tq.mPWLfNEQ'R]!Ocb]_Mi*@LNfAmMJ:2KSC2J!4H\[HAObo!bURmg3
NL$69[CX,h^Vg&i%`ZE-`OiUfWgocYW3<D-I]BKMWiN50YG7\i[X*b;^:'u9W3*A0Za-mf_nES&j8/fT
qsVqO]X"rQ]#)G'a2uH:^!kBXcH!];`l#Eu]=5,NYcFh&UnXECP*V>nM1^D'E,9E2Dg-trT;8!Q\@]&B
R$<u6^WamKf$N.+iS`h[l/L7BeAnr1aMbp.;SKrU]>2A.aPZdjkh;')jM.n*[^EEVf%oQZ\'!"D]p""q
J;/i-S]fO3eBbt<SueZUF`b!pTQaR36U<mi.OH;[*?5q7'bClb$471M$3gY;r;e8I!X0#E*Zc(8.krOr
'bhW95ZD$(F`i%^KS>DCP*V,gRZ2?HT<Pk:]u%h:c,[l@\?(gEUSAV]Vp*]@e_&QsZ`U!kG`A2fOa1tc
DfBcGM4gZCWMQD_RZ`_lNf&dNHZ3_1?WpQ3;c$4_9M7uL7R][15X@\$5X%:m4u4uS3]]Aa6VL?T;H$Lo
<W6#7;Gg7f<*3F3?=.,N@:Ee\D0(&XN/j$LOdMZ2VP]iIOGAI>K85A\GC#:AXg5"%OG/.,Eko8hX08V*
XK8J%WiE8+WhcGcV5C&dUmm^TZ*Ua5T:r0ZTpqC8R$EhpNf/dOMM[@RN/31<I!B@7CMn'0Dg7#!Pa%]5
WMQPlWL]66MN=*nSY)LETV\NgZ`pX7Vl?WtXg5.3rht%AXff";YG\;1[]>t4[A]n!ZF7-L]"$J5^UVDD
pAap_mbc$oZa[N]_ns=1^WF*rcd1.nb/29B`kK't\?iNDWMuYcTq.:,QBR5[JU_u[@q]LeAS-(DRAHje
]=thb\$`66RZN]%V5LAr[(X;maO&/Q`4`ug`P]I&^;.:i_8jdIf];A[`hqh^_6^PZ\$Niuh<+11`ll`G
PCS+0I=RZaaNr8W_Sa'rY+MG<EP/KLK4%AC6p3@Y-mToX)AX)%%h9$U$4I:J"pG,3qu@l@!!EiO+!E'f
3&ETS2CTad'cA5M1H7BY85<#iE-?bjNZY(#[Cs>qaiquM`PB*nW1^$,glHa)e^W'reAnntUR>/)Mk6W)
H?=(CDK:/dS>W9]V50`SQBRDiN/rdBE+i`f>$"a';,0hZ9hS&H7RTO-5<hCt4$#Mg2D?a:0JY=F6q0^<
7n?0B8P2]P:/=bc;cQh!=BYW.,[b.sEHm.tQ'[o.SYN*WRZ<5ZJprH6Pa@2VMO's:VkBH>L43KU_7["R
Y,\M(WiE/*YH4h)W2HJgVP0f]SsHUc[^<$+U8Ol_SX5Y0PE(Z^MN!IOM2I1KLOt#*H>6kr@:<VRE-cqe
Knt\FLkg_CMiE^YOcGQeQ'7DsS"?=NXfer.X;e@JZE:4-Wi`J0ZEL@0X0oR?P,tmhXf\e4YdT"m^"pQ:
\]`k#r:]aHgrmF=[^`f\`59O2ahb@-bL=q``5]p@_7dIk[BZm7VkTr\R?*2eP)=gBJU;0>>$4g)=(ul/
MNF$gPED#lS",t8Q]mZ$R@p[aZ+7BT_p6NI_o'@)\[K2]\@TN$eCNXEj4D)Rg!JBh\[/ZO]?*1^f%d:G
d*TXmKn+GoK;?0&dETJ@ai1rqV6,l"_6Tnn@nK0X4uY)@,9S$I(_dPp&.AmO$47%A"9eo/qZ%*-"U>DF
%M96_%hKHk()Qrf.30HS.P!,13C6_^H]FW&\\5ntbL"V^ahP?nWhHB!b0mA*[)gVEe'ZAR_n<C\Fc)Z]
OaqXqDJaBANh*)DU].-&SsYn.PDtZ\HuNe,>Zb!*;G^+^91qlK7n?'75!;.q4?#5`3]8fI.4-]*5=@n,
6UF(+77KmB9M\G\:f:4k<EE:+>$PEEBl/!GPae/9TVA9]T9bFjJUD`pOeo:SLk_"]XL#/cYcOUgPJXo6
Y-"t7['mBJYck11Wi;noUns`WUnX6][C3E>Tq\E_V4a<EQ'%,fN;eeNMM-Y=LP1)&IWB.6?!:<8Aoi?M
K)UK+LkgleM(FREOcY`jR[TY2S"HCPVQ-r2Z`gI7Z`gF-WiN8+Z*pm<X0&S.Ya1`ZZ*CJIXfA;!Y-d!'
^UhYInFubTlJ0Us[^uIK3532Ja2G`ta2cHOaM>a6a25L&\$N9>Wi2\eU6ULhMi<C;H\$9Q@ocE";d4$[
H\@<7MN!RYQ'_K?.@HKiSYrNn[(F)e_SX[Eb/;$-\?WQT]XPSod+I%9p?0].X1?7,d(?ADX0/_:]>;Fe
_opHDWg]$/Mi+7DbL4SNa2c<4Y,\OkFMkYcK3go15!1\T-m9]P)Aj5''G:fY"pbJ=!s/W,q>^U!"U552
#qu\o%M99f()Ro+)BC+R/1re@5=nacHC:hI_8415b0JDY`k8U_U6DCgf\Fo$LV1q5f`'PSeBlC[H&@o]
OF)(hDf9WCNLZoBV5L2eURR[;QBIPoHuN\'>$"^';,0h[r^nA+84H'85!M7q4#f;c4?>5O-o!_@5!qY'
6U="*6:XR>92>I_,uIQ<<E3.*>[:`JBPhmIR@g7NTr+ceT9kRmK6hZhP-DI$Q%k,4Q`7R,]!890T>A(?
X/2VkYd:gEYct41WW&h2US4<NT;S<_Za6p8VPpJpVOsEHP*#['8Wo3pL4k;9KReE!I<973?WLQIBQJKL
KSbD<Mi<XSMi*COOHGcnR?j2,S"QRTW2[#3[B-@2Yd:C1Wi2r!Z*gpAXKSY&X/;>'Vm<S-Vl$GmXfg<s
`4ammqYU0bnDDF([CNfX\\>ntaMPd,_T0mF_o'U:`4`[m[BH[1V59oWR#ZoSLPC;&Isc<P>us^"?s[Sj
H@q'0Ko1bLQ'n&0R[T_<U84WeZFdoh_TC!Fbf%</ZEph8[g^'le(<47oBaQ&Y-5r(dbhgAXKSk7\%0,V
_Saa+Ne`LLNf9R?b1+GHaiqu>Y,7esQFjo,Ioo305<C\P-m0KI(]G0Y'+P?R"pY>8!X&W-!W)jB!X&Z3
$3pkF$4RR[',;<$)BBqE,Ub9'5=8.I@s4EN_8F76ci2<"ahkQn[%ibT`8'5(>dK*_bLkS)g"+X"c[UhH
Ob.n!E,]]6H&A&cV5:/hV5'ZOQ^X5+OaV4^?<UE3<DcOd9M.lK8P)?<6U3k"3]]Ab4ZbYT-n[_I2`a,d
5X%Cq5t".38P;cR:f.-h*`Z9E>?kKDB5)70NLcoDX/)YoXJ;5FMM-7sHB>AA)RlGsJW65$Z)!kYP`WVh
Z'C<DTr+`fY->+4rhpX1WMl\eSt`6]XKo79VPpW!X/2M\QBR@.O%#4jL4b,0IsQEjI!K[E=]SgGCLqC*
H%:KuIt`f@NK&jRNKB9eQBml)R@L"HVP^ApZa?j6WN<A,WMlerX08tB[C*3<*2omAUSPB-Xf/>+Za[Bl
aL/"[oD8=Zo^C\_^q9QT?+IYcai)*6]Yqq2_SsdB`k8dgZE'muT:qd>Ne`.4I<g$^H@'RE<)$2#AmSq\
E-cqZG(#%#NKf`nR$sM8St;^VY-bjV^rjjAaMGL![^*3G[C<`bcI:8$mGl>ZYcb(:e_%mKZEq!N\\,_f
_:N:$KlD3[H%_Qlaj.fAb0\GKZE17JYdq]JGZRO176`[^-6O6D()7T#%LNIF"9\c-"9\f-r;\SR!<<*$
!X&Z0"9o2@%M9?g()\#1+!2aV/N#[Z:L.LNS@cb^c-Xtie'cOY[CNcFS#1YOgu.&@SWUk?f%AEqd*'I]
N1ZJlH?!nFDJscUS>2pWWiW.pT:DLDS!]=fEG/cd>Zk*-;,C%_9MA)O6pj=,4?PYb3]fD_0./>02`!*<
2**l^4[2(q7S$-E9MJ5W:f1+j='/U/?"%A]DgIS@WNE4sWNE>'SWo1iHZND:OKZ7*YE"']L5V.KJUr<"
]=YPKT;89ZUo:;kXKJM"W2QVnVPL&dXK8A.\#lO&WN)hiSX>\)N/W[UNei:<J:)]hGBeFUCgU4JA7T(P
>%MVqGBeF^KSk`fM][q>P*;#nR@'G8USauhW3!A4Whu\qZ)ah&V5gPt['q*c\[8?8W2Zkn['m9D[(!KP
[F2jn\Cp`Tr;HE\h9Q#44h8&2[^s>m`4ims^;\(+_TC'A]=,#OXeh\]S!AtgJpMK^F`MJDE+rNO;-7"'
:et/$D/F96EHm+oN00A(Q4o[OR%9tNYIV?dcd'YS_7I.aZEjJ;"M2@kcI5DEm,>pgXf\kWe_JKi`Qci[
f@daVeYJ4]F*)YLHA/EDcH=GZdEB88\A$/&[(r\d<_?%X5W12A,97U:'bh8g#R:J7!s/K(!s/)q-isDN
!WrT5%1a$a'bqQ')''kI/2B:T;IF-YT>J[lbg=kgeCDm^]Y@sdWLTp,gu.,G\;@5u[CN`NYH4[WNh<2/
G&hSDEH-5SQCXeMXf\V#Tq7gLU7RR"EG8oi?!LQ7<)QOg:JOSU7n,j24Ztkj3]oYc/13//0dmtf/2KCM
4$bqo77^*I9h\=]:`!&/=&rF+>[_8ZDL%D>XKJS#WNNJ+T9gLXLjX,_OL)U1Wf_^PH$O^`H['aY]XP2P
[%sStW!/lpXf8.prhrhnUSjueW2m23XeMJcV4a<IQB[JhMMR.HLOt#(H[9s_FaJLO>utED?rBQo=CcAk
FEr%YKSbYIO,oEhP`h5qQCO\IVlZquYI(X:USXolX/`+pW.(bL[Cj5f]re?7W2Q`'[C!9CXfJP)c,6lj
aRT**s8DQCdDiu;\[JoR]#)8%^V.1laMbp3ai_B.['?^0URdjAOGepHH#n%LFDZ)CBN\/8>>n*U7S6Tf
B52L&F+&_!Ng>uqQ^F#'R%^Rd]>Db>e'-%O]!o&TZF.$G[naQTc->#1jL_FlXgla2iTAe<gZIV]lFt6W
fu&;bH@L<hH(N$tbL"\cbeLa%a3;cB^8lEW928&B1bL.")]0>*'+YKX#6Y/2!s8Q+"SMip!?hRH":#>G
',;5t)B'G2*@!-n4@N=]Bm62ab/qcNcd^LpI`oF>^V6q@Us7cRiRG3!R%p@JS<oA"OG&ajTU(1PEH-&C
I>3uYU8P#mX/DhlUo(/jRY#Tp@piVK>Zk--:f1%a9M%`C6:!k#5<q7j6T@"_1c7*C-6scm4?u+o5".q3
9MSA[:f1(g;c["'=^5<BAnZ+-NhNSWXJr2&A$;f$QB$E<Df(H@]=4`,Jp)<]GC=g]H%3?,VmEV%V6$br
V4FE_XK/G)WhlGdVP9ofWN*,"U7e<VSXPn6Q&LQSKS"l0IX?EeG^"IUI"cW]CLpp]=]/0qAoMj;G^4pq
LAm)DNK0*^NK'!\R%C(NXfAG([Blq5VZEj"I]KBCX0&_A`QloKYcOh$VlHf,\@&B:X/iVTbJ1F$iUQjG
p@$P]b.>0lZEq$T]"5_i['m]ncH";Yai1ouY,%\[R?s/#N/`XGH['d]EI*@]DJ<Wh>uaKf7pT_FE,BK@
I=d95PEV/lOd)3'WN<81^Wt?WcHsJ@[C*KM<4'!?]=Z#%e(*.,[ABn*]#iOdlK@0oo'c;1]>DY<aHCq%
JUDrmR_m%de'lRb_nX.4c-OJBVKc6>9h%B-0.\:a()7Jp%1<II"p>#1"9AW3!<Mrq!!3$")[?WV&/#Zl
()Ic()BC.V1-8'3@VL"W^!4dFd88':e^M^Y_nrpiX/X>!i8)_iTT5Y=SX>P!P,s>%US+!4HZ=+KGC>:8
Su8QjX/i(nW26GoVO<!UBjk@T?<gZ9<Dugq<)61\91VQ?5s@O45SZLI4$Gef3&`o\5X7Ou5XRt28ki&X
rDO8,<`rR0>?tQEAnZ(,OJ/\VI]]TMXKJUsR>Zi2(M/]$\%&c>N-KGiG^=X[GBC<rW3`h,U9(;iV4XH^
X/N)"WMQAgWMcbtX/rJ&U84W[TUM7:P_k6PKn=l/K7JE"H['jdJqAJtF)u54BkqX*GBe=XI"-[$KnP/8
M2-qEMMmIUQCXbKXfSY.[BZa1;lHXqXfJFuWN<ADIQY*TZDab&Y-+D"['d-=X/)34`k8[liU?[Ao^1;U
_nEUgZ*UpT\@/uXZ+%Nmc-4ARaN)!%Yc+CnTq7U9PEV)fKn=]#L&Qi6IWosTC1h'mCNTQ#)L6XYK8,5?
P*D/lOI)B/WN320^s1<[d*9VDrj>k7ZEppK^;8+0S4(#j[B?U8\'iaqkj%R,oC(8A`m3&XVhp(VH\6a1
a2Z6Nc,e)L`QQQSc-!ksF^%[9779-j/L28R)Aj,!&J#9V#6k85"pYA;!s8T+rW!B.!<N?*"9\l5$OdOW
(&\mW(`OYG0/G^_=^l2kT#2YpbgOq`e^W*rbK%-6*WTd!e(rg4e%0[]TqIm<O+CmQKoqt!Q]HT=G'J=`
LR4_6W,/H1UnsufW2ZY[J8o41?X@&D>Zb*2>$G-3=BAO$:eaMN6pj7,5X%@t5X.Fs5=7k/6q0X98ki5c
=BSd/='8a2>?kE=?=78RBPi!UU8k>tWMuu%W1f]CNd"BAQ)_I1]X!oQGC"O[GBe*<@CWJ@YHOn#VP9oa
R@UC_ri$7*UnaihWN*#"XK2>u+fM32SXGb,Ock`^M2dRVMMd4FK7\`/KnFi'I<g!\H?t&>JhDV*KS5):
Ll.%FL5:\FN/EOTQCt1[XfJ\5Z)X_#W2m#"VQ-YsY.'[2c+C$UXo>@*SYNNsZ)k5pNcECg^U_24mdp2H
nB]"m[^NZSZbF>h[(!NO\&-D6cHOJS`k]0g[(!HIXJMeoVkT`OPE:fbOH>NZJqAFLH96Y3MM[7JM2[IZ
R@0hAQ^OD<USauiWjBOge(E$k`k&Ud[Bm6I\@9/gb/M/D`3QbPW2d)@dHBc[mdP\na.9l[b0S/:O+;S2
Ncp&oa2lWSbfRcAcHstdb.Es[?;s`n76`[\.kE2",Tn6V+WD75%h&dO#mpqB"U5)3!sA`2#mgkD#n%1R
()e2:*Z>q=,:"K\.53eW?t!enSA<.ddaH@hcdC.baLfJr#--/'gYL]?`d)m(T:14iRnFQRP+\D4PCe"&
I"-^&Q(XqNVPL#aVl$>iWM5W*De<Hc?=.)G=]np5?XR8K?X?r=<`;dc7RKO/5<hCt5X7V&6q9g@9MePa
<a/pAARo7Y?<pf>?=@2K?t3b\DKq28Wi`8"Xfe\&UmddBS[#)o]Y;.q[$lSkH$hc!G'.qN\u_j5WMlJa
Uo^\jSZAlhW2Q\lUStAsWN3%uWMc_rWNE.pR?EYkO->fsS=Q4>S!]M*Ner^RMZ/80ItIZN3/*0FMN3mc
PEqE#S!]D!N/WUJK8PhZTrP;sXKJn9WMlbsX/r;!WiW>'VmN_7YH+_,XfJ>!U9#*3ZEC:.X3&Q"]#rLe
me$)5hT*UE^AbZS^;.:c[^NNR`6ccRbKS>aah+dZZ*h$I\@9,a\@&ZDVkK]NS=,V$M1^J9Ll.4XR\-4J
VQ$Sp[Ca2\XJr%jUS=TdY-c*pf[\Eqa1\mg['R*G[^Wc_^qdFUXfne)Vl-`>gZ3hUmHj3.nb'`7a3D<.
OaMYFUPXc;_o^9L`lZ<DeBuI``jLkG?W^3)<(o>&-Rg](2*3oc4Z+oF,T@I0%LrmQ#6tD:#6tMB%hTKk
*$?IS.QTpa3%uj1,9e3V0Ju0q@Uj+pRD6hedaZLkeBZIiai:m@i7Zf<h;6o>`1SK)Pan/'N/!:GNh2c%
PD+:*IY*!$Nh)f8St2IGUoC;lWM,K&D.R2U?W1B@>?P*5?=@8O@:3GK>$"Tt9hIlC6:!k"5XIe*7nQNO
:fC@t>[LrPBPD3oARJhN@:WkY@q0%^D0V#2W3*%uY-+k)UR[mLSZ&g*^:Chh[%;`&H[:'`GBJ(V\YQ.+
W2ZSeW3<A#R]!0dXK8J#WMZbsX/i5#Vl6SqXK\k(S!8__MiX3nUSt5rXJhkbR?j,"Mi<OKKSG57L5V"N
PaJ,<WiDnlVP'f^RuiG[Knu%kWj&b4XK]%<Y,SA$X/W(rWi3"uY-=t"U91Q!XK-08X/;o"ZEUI6\'<(4
]ZSXalLO0"ho!LL]t1ee_S3[i[^3<Qa3r5XbKAGkd)*,bUSaohY.)0gbfn2H\?iE<Tq\-DNJ!%HNg#p+
Vld86]?&(2`QHKSdD)o]USFZh\\?26f@A6n`4NIcrNm$C\@fSl[CE]WZ_sb$W.(thg#_Sel0e!4i4Yu*
bcnaMJVg/"OEdnHaN)69aNMiXdEKhT[#Jm-=B&U4;*loX+!iEo3(6YD<Dc1E/0l;T'+bW^#mCSA#n%:Z
)BL.V2+C20;cm.1?V<:(,9nTr93#;1B5)OW]ZJ@FeBudqdF$7^ai)KWeCNC2hAk>&^9!BXS=,V%P,j:m
S=,7oM0aDpI!UC%Q^XBBRpM_`XKJOtSWJ26@pi\O?t3SN?!gi=='Ag7?=-uB=B8?t9h7`@5sdh&6:+.5
9MSG`<ENC0?t*YZBP1ph@UNYT@q9.]@q91fFbuZhX/W2(Y,nRtT:([mPGt[dY6_JFWgJZqI=?D>F\R+e
Lo@VVVQ?MlZ`U!mV5pVuXK8A!VQ-i#XK&7sWN</(ZDa=[OcPKYKS>5CRA-R\Y,eIqTUV1+NfAsTMMHnB
O-5`tU8P0'\?rH;rgb4!ObnsUNgciI[(*BD['mHGX/rD*X/W"sVPpT'\?)6lZ[T*XWMl\oX0&J/ZE1.6
d\Ogpak>J3n`0#rc-45G^:_+t_7R(X[(*lld*L"[ce6Xa]<\N9SWf(tS>ip2ajJAN^V$nRVPBTBMN*g_
Q_1+RY-u$`dausj`59L-[B?C%WN384]?&XYe(2a_]X4uOZ*UgH\%KMnah5U2_+Ui0XK8kJf&c5`l0IX'
m'0'pbb2)AJW?\!M1;5<a2Pm0^ra[Df[7p^ZA<1"<EW^.7lr@S.NoWE)^7%%7o)fH3\i62(_dMj$OQe>
0+J^7*@<Bt6rdT(>ujZs9L1Qd-7po7:01tGBPDp^]Z\XJeCN1"dF$4\a2+sib<4##h;-l3[&p0qSsbe$
N1G]\R[T(hLjF>pGBeRmPF%W'R@9_EX0&@qRuM`.@UNPM?t!GI>$>$1<``H'>7"J9=&i0s9hIlCrB_er
6:FI>:/Fnj=Bf$;?t!DH>?tTC?t*YVAS,ObA7oXuMk6iIX8]7,YH+ImSq/e/FKM=8\$N*/QA^9AI<]s[
Fa:3JVR!"lYG/;/XJDShW2m))XJr+oWNWD(X/W"qX/`G0U6^dnJqJ`2L5_4\SY;gTVPKiVS!9(sN/`dR
Lkq"QQ'nAEVlm2)V4X*3JUN*&L5hRfS"csh\$N?J\$iH@Xf_T%#-4l+VQ[^,F`4L_YH"Y,W2HZ"Ycb78
Xf\hZWl;Tmgt:ZUj72?kf?q[Q]>28"]!JWJ\\QA:b0.lOe\ektTUM1/O,T3kVl6c-^VIFh[^i`IWhPrF
OH>WpTqe?`\@0)c]X=o@Tp(V'R[p=[XfJM4`6d2heBQ"F['I":Zj!eA\A,]&%Te:]]X"TAZ+\*)ioT4a
rpFUmYY_gSR[^[7R]2F$N2=/*^q[_!aM5pMeBc(9Kk"4`>$OTX/KYlL(`*o)+Y#0(4$5P[/1Vtb(D75g
$k!CM&Jl<)-o*\H7n,g-1aEqS)BL(R3BB/f<b-)^Cj_YaajJYheC;pse^)CbI_#Lih8dt!gXs`VXf%tc
Q^!VmQ\pH`Sr8>[IslWdG^G(#PF.W&S>3'fX/VnaM03QC?s[/J@9cu==^GHA?XI2L?X6l=<`Dsl9LqW@
6pX()77BdB:Jk(k=Bf*=@UW_Q?!LT<>[LfG@qB7aB5):/Mk6rPXfAA&Y,eIp,as@%FIer.]W.NhOc"dA
IX$!WEH\7-T<b5_Z)b+5WM?>kX02H&:oL4cWi`A&Wi2klV5L;jS<8V`KnYVTS">q3VPgDoXJV_`R[B;$
O,f-RMiX$cQ^a\EVPpGjVkg#QOGo$OLQ%=WPFSMQZ)k.3Z*LO2XfVN#!i`3!Br\AIM64:rX/MnuX/Dnu
XfJV1YHk@]T#nOge'dOEmd92tf$MOV]"c%s]!8QJ]"c;5cHs_Tahb9XR?s54W3!+nU9M&;_83go[(NrU
Y,\4]O,oTuTqeNeZEgpL[C*6>X.c,UR@0ZFU_'Z>aOo(`_nrplZ*UpL[^<Dj[^s0!WlD'HXKK+Ha3)uh
iofRll0.E32658tM7]:QRu)ZVUTDAJZ+@Ziair;bbIjNt?WL$"9g^]\*#]\C0fD$B00quq7mf6j.jcDW
()%8g#n%7V(E=VI0JbdT5t"('1b'ao*#p1T/1rnQ>%MDcEfRQHcIUOmd*gEYd`okV]/"lgdG3I%cGd&h
VkKNBPDtQbR"1m/P)>*RKRS2lI=d9:R@0Y@Vld,!X/;26EbT&m?=7/J>?P0;@:X"dCi=-'A78eJ=B8?s
91MB:5sIY&7S?NU<EE=-?!q/QAn>Oa@:<OB>nC=N@qTLhCN4WUT<GE!XJr=CXf\\"RZ<,OK92e(QBI;d
Lk^P3GBJ"KFII$8W2#r_VlQSjVQ6VlXf8.oW26DmYH=h(YH"@kU7IpDNfB-fVQHSbRuWVrR%0kMXf8%g
R[0,"Oc>9YO-,WnS>3'bX/rA&VkTiVT:VO;OcburQ_C:Urhp(*ZE0q#WiE!JW2QbuYH"_6]Y:q[X/W+u
X/i5!X0Ak4Ycl<4`4<k.f\tlQk2b=FbKIr@rjtt6Z*UaF^W"ULfZV%I\u_WtUpe.LZE'CZR\$I]]u\%'
_R[(XWhl/JQC=A@WNEJ8^;%Fr\?;g8Z*UmHWhcMgV5C/q_U6ZG`PT3o\?rVl\@/fNZ*hKtd+6CS\%'Q*
d*UA"kj@p.lg=#-*i.8ZNiB(XO,o9eQ^be0Zamunbg"YfaL.O`?<']`6TQbD+tQ)^84c6(1,LjM5=nI2
2DQX%(_RDi$OdOZ(a(7]3^H/+:/FGJ770C-4u"H8/M8hA9jM4@DN1p?bgFpAcd:+gdEThS]=bSdb0n\T
^9XiAUnO<CPDtT^XK&J0VOX'ANfT0XMMmI\R\-FTWN*+tVkK3"DeEQe>[:W?>[C`D@Vg49KSG&)F_YAk
>$+m+:.drAr]_Vq852r]='Aj7?=IGWC2\'0D/!Tk?=%#J@V07bBPhmHRAR.gW3-'%%'-:uS!]"\IYNfG
O,O!mBnCh^GBS.NFJPCuUSt/iVkg&`Uo:;lWiiA"Vkg8lZ)jk&YHFatS!0,!MiOC4Y-"b%V4*[:SY2UK
X0/J#Tp_.+NerUNNffWtVQR,,YGe%\P`_B)S>3$\Tp_13QCXbGVQ$Q"ZE:&,Xfec)WHbPHX/i/!Y-kI:
ZEUF7Xf\\,Y->%1YHGIS]=>Dg`llrbf$qsf`PfR(\%'#XZ*:UH_TgTYe%W,s[&U+6_n`su\$)NpSti*W
WOfp[`4`R_Wh5N?Q(FeKXL5aT^qdF]URRX@V6I\UaM"aPVP^As\]W1@d`]9*\ZrHGrj6mS[(O5tg#LuE
d_j5Td*gP'k3_j9p\":0b/r&T_n![dVQ6GgXf8nR^qR_0cHOY\^9F,S>uNp>1b^7)4&SmTAo2Kg9i"_`
5s7_.5<UbH)A<Vh#n%:\*%!L-6qg?D4>\`F5"A@O@9Q/X/2/b=7o*5sE/q+D_9CKYe'cRle]uC[`2o`7
Ye%olYd(:2V4a?COH>K]I^lku]t:ebS"-[_WM,lRS"?IYYcOh&VQ$2JHu<S+?<C?5>$PBAA8H::MNsHf
LjX,T?X$W9=&M^]5s7@q6qU9V=^,*8?Y!noH@LKuJp_WSAR]+W@Us(_B4u($JWce/W3*,#W262[TVe*6
JqJc8NJWCDK7A;qGBIqGIW;0UU8b2mX,W@AVk^,gW2d##VkBidYck++Vlm2#Tp(@mNf0%'ZEL*cNL-3(
N/3:MUSk,nW2ZPYOGegFLQ.FdV6@/1Z)=4`TUq[AStMsYWir:cP*)-'SY<!]Z*(.,Xfeb*WMunuX/Mqs
YHFq-ZaI'CYHP+2Y->1;0=%jg]!\T=XK/5,[(3l]^qRRq\$`cXZ`g[@]>rITe&o%rXKSV+bgXeFPE:ro
P5^>3Mk@/X[D0YrZDX1SO-H33XLQ!]_8<U[UnjiZPb5"i_TL6@XfAA%Yd;*lcdU+R]!8QH['mHQ]=ktl
`RNl-iQfQpf@AI1l0Rs4Idljqg<\+"h;%!uJD8Mt]ZIduaj&&Pd*0e`be:-GH!a<%,:+`a/lZ1e=#)a-
@9,HI/h'"M4?Yqn0cq)=#6tPH(aLt+92JGQ4ZuP?;b1&,H>dG-:GjdY3($,1@VCRnZd.+Le'c[kc-=JU
d)NPpVlIJK\?`07TUhC58!B'oMS-L:^qIFrNhaA%]Xt>CSY<$cXf8+hVQ-5IHZ!G(>uk!-=Bf'>C2@gD
PakgCOE"$.@TZE.<`Mja6TmRr78-W^>Q.na@qfV,MNaKpOG&"%B4Y^eA7fIeBPD=(IZ9u"WhuSaStM^K
V66VYNe`=FO,AgNL4Xi"E-Z\PFE==KUoUPtX`]W*WN)ttW2[#$W26;k['6?tUoLJlSW8D\MiF".]rm':
OdVtBObn0eOJ\S.TW+u`Q&g`SL5hInY->(,Tq@a(P)bQrS=#D)WNi[sNK03gP*ho=YH+D!Xfnn0XKJb.
XK)9!"feK!Xg,)/Wr]<(I]oiRXKSk4Z*:4,X/gcCX0&J)[(*QM['R9R\$<6K_TgW`e&APfWNWP5f]h"S
Iu0)H98SC@>)fDONNKq5\Z;HhPF%i=[Dp5&\$E$*IYr`1Oc>QfTu5.#]<SZGY-,1Ncd^1G[^*-C[(Er[
]=YS\]ZesghUos!g"+j8!pT+?rT\U[Xj#STgZB\dk1n_Gcbm91b0/&Qb0e_[X/1ht>X^4a*[N0f>BOs7
)*CZ/!(AdV!@BuZ'/2L0-Pm="#7;"^01AQ-6977h(cX?6@ocSp9Q4f[82E(^4#fQ,AqQ;&^XLTVd*0VQ
bg+VddD<8fU9_YHZ)jo4U7I[9OcYW_]iUc>r4Pk>_RPc9Y+q\fWMH/VSYi?RNI,PS?s6Q0<``L0?=[_c
J;TS[P_3:);.!U+;,^Fj8OPa*5XnOM>$Y?6?=R#,J"V@AUQC:SEbK#sA7PUM)ej&&E-[2)USaKIP`V0$
Tr>?"Ss>D"Pa7GpN<P2oJ9uK_rc;,@5CBT8Y,n\(Wi_h9V5CB!YH=_$XKnn%R\H[VTU(@bKSYMV^:^J.
K9;@dU6LFI<-+M1MiO@,W18s+KnbPPVQlt`Mk6AW=,*>hGI!NuL8;AgT8ro/)iBcJV6R.mWN`_9['$C3
Yc4Y'WhcJjWN*&"V#mWoX8]5GXKJq;X%J2KWhu_qXfA:hI'U2bZEgaI^qR:d]Y;_Ag<[XCW3!;0^Zs[m
RY6HMNKT6L@nU^+[#^QW_8E[[SX,P3W5$ZsYb/1tF&R:?@q_?eNJ4@Pcc<N'ZE1(1_ogKIW33G/\%0Gj
\%02^Y-c:!e^D[^dXKTieCijFmd090n_aC(k1e_IgY1E>M^$9g^r+77`6$'BdCkj=N,_]W-Q3pH+us7K
=>([P3`0N[.0KVT.n(0j.Q9('&e#$R&Ka#.75#]C2@':+=q2.:69uo!G]-S?1,:O93`9C;Me&I-air#C
W40pjdG*9m\[T/b`F6?^Y,SCoQ][5aPEW\`\@oMe]Y2"m^pKN=[]Q:!SX5\.QDC%8Lj3`H?s-K-;cd4/
>$YNCCO:P_Hu`M#?<UW9:f11h91D336:apT>?b*.?r]iaE/0U@O,/=.E+icnr*gITBPD4&I>aGXMM6S0
N1?]F\$i6'PbG!mVPg)YRZ<,QG]\%HDlSqfX/rM,XfSY-SqX#:XKSq8YH+k2XJh_fX/V_SKR\W2Ni'S$
WhPE2R?rttN-^AHQ(jP'Q)CUPOGSXGNgQcBQ\:'[HtZK1Pa\VISXYk@\\>85MM[(DOe&>[YaVTkZja1(
M6O:fX/r4sWNEFSY-4n)VkpN!Z+@KY^:^J=X/i1qVl6SnVkAaL[Bd0DYJ%un^p^kfaO&bi`O)eR[_'lS
d'oa%Koq:LN.c2'P*rGDQ);FB]W7`mQ(G.rah":>ZAWKsH\7<LPDY<TTYK+;`Or[bWNj4We\S9!]=Z//
W0b-&['Qd9\AQC:[^3?M^Vn4;f%f9Nkj.ZkEh)(Dh;7#EhVF2Mb1,"j`k]:,`5g<9PadSN:cTa<*$Qh&
BN@P])'hL22)Zcg)'^@c+r2:[2'WeE#n%Fl5".7H)E&-/!#dgoJR(]1/kg/-BL"=+/Li_T>_7?-T?G9e
XA_*^_8Xp[gs!BZ`7N\peB>S9[]QI*StV[B_nNq#]Y(qk]Y1qe['mWRUnO$3MiNsiP`CE=BOY4K<)Q^t
>$G07>[CfKC1Uj]?<p`89h82_<)QI^6pa=7;-7%-='&X6@p`hgG^t<mFDbl+?t!MO?XR;SAS,UmGCYU,
IX#IQMOCHO\@]"mSrf5-Y.1sEVjE?oL5_"EK;kZDVld,(Xfee-Wi2elX0&_6Y,SP,Z)sduZ)jX^K7AT7
PFShbWhH#OQC<beLl\$oP(.V4SYDjJOGAOHOIW5>P^n:?Od^oXR$F&0Tq.gXYe[fDOG\gLOe/SbY+2i0
\Z:m8PI.^!riCRPYHbIAXK8G(XL,@@YHtdK[]HO2Y,J4qW2HSnXK]%8YI(R?]uJ15]>1\XcI11\\[8ue
`Q-EMYFq2BMN*+7JV]S[R#$9_[):)&Yc!tWT<?,L]r[s+X07P?Q]d]!OGf-nZe+Wq`OiFT[)0uAa0Nq+
a3Uo@W4fF?WN$i7XgH0a\Zi*7Z*q9caj\JTcI:7Ya4K)#h>Z/;hqlN+g"Xlm\>lU;^Wj9CIYqo91aF%^
-ndSV;EQT_,pk5`()Io<,p!L")D![!-5[:%%M^?S3\hZn,;)%q+$;SS8Otg!9ic@S:c9pU.QL41J9"hk
`4M4,'2>mLc.tVAh:TT^b1,2%gt'os^8e<N_S*FoDlCFe]tV+i\u:@'Za-X,U6pgfIXd30L4!oQ@9QW-
;,^@l<`iF*=^##.=Y!HM<E<*u:fC=k;G9VO6q0jJ=Bes092Sbn>?bEACi4$&An5F]?XR2D>@.;=$ta6n
H@U-Z@:b"IRAt_G]=k_CL44E%W4BOM\?;U(XJ;\mX&b4^Z)jt,WiDk?A?N&=XKAOpO.Eno[@j#!XJ1o7
K8,DJQD^a_V4jNHR[95"OHbi_KnP\[Tr4HCMMR4QSYr0KL3%a!P`q&dMiX6sTqeTgZ)O=[Nerg^TWGo/
QbgVJRWWbT[Bk=dX/rG(WjK:@YHk43YH>"8X/i"lX/T6]X/;r!X/rD"HtTObYI:sX`2U/f`ke[Oe()j_
\$<EV^;%n7]!\W9R$NesOcG`mNJNIj\&Zq6YcFIgTs)>P^T<BTTrP&YQB7)gPEVH5\'<LI_mZ\GYI_j:
aK*n7cFSd\]=K#hYc=Y"Xi&WDeA/5eVl-JsY.(aH[C+ck:$1'^f`'W2Rii!if@\Hl]T,X$Yed_a;itii
0d.GU,UG!+6T[4^/g;M^*Z>k9)\s"s+tPH.-5[F,&K*&]4u=;e&0E;L+!D^T1,h'N78dMm7lMtF.lKn#
JnRW[^6M\4&s5;a^t.;th:]`VY*c'<hVR)EfZ;4cYI`2tK=8V1]tCt_\Vl!*USk#`Tq%0d?u^F?I<]XC
?s-B*;,C(er`0,$<`W6"<u"_6<)lpp<E)gl:JFDM77^-O='8^0r`'A/=]np3@:EVO?XR;Mr`p":=^5BD
@V'7hEH#i1=*JD2OIrS^]=kY=J9,jcWO][S]tM(h]!JcSWb8*0XfJM&WNLhsR]``nXfA4qIrhm,]W%I2
X.Y]7L5LqNPFnbNTphC9S"5q7SX>FnK9;asUog>UNJNUZU9(2YOb\[KPF.i,PE_K(T;2C`&=SiHN/3LZ
U8u&-R)H;!Mf+!.['[*?XK/G%XL,43\?Ds8YH4b,XK/G+Y,c9(Vl?YrXKng[H_7aR[(3lmc^0'ob/LQd
g"arl\?i`Z]"u_=`P/dbWi)YhTUhL4MLq+u]#iOBZ`9jqU9;DP^UKu0U8t8iUR%15R@pRf^;n:,]X"N6
XLlC3ag:$VZ(rFdS@lD@ZE1(+YfGVYcHNJlVl$GoVQ$SrUoN,XN8XZh>M%mg)f!X<`Ql`FXsss/Uo\]A
N+tp>+WMRI+=K683]&E<-RgJm,U4BK'b206/20%5)A<Yq)Cn':1b9Ua*[`Ef.Np2l/2B:U9i4)10dn4n
1IbAo@7?uE9jB@X5G>X0e_8d4fu:%PI(%bch;@)HhV?l,_V2f9_7mUq]="NBL6%mmT:VaNR?2bkCN=N>
FDYVs=]83q:esth<`N1#<)cao<)lgm:f1"e;G^.b:.[oE7nchZ=<1IC<``F-=BJd4>?b98?!U]=>$+m3
?smDQBP;*g+Br2]G_MHYXgPdPZ'BodKrDJm]tD%k]">Ya^;6hCXKMQ(>,nd/JsW[=W2?PmXL"*uOJ0@g
V7!FuPDb6QM2[F\Tqn?MPEh;sQ^a>&L5(MQUnFQaVONd0OHu`HWhPo<KSY_WTV7m@QCFG9TV\BKOH>BV
Mj0p7]<%0\5(S!2J?lPeX/rG(WiNJ2X0St0WN3/%X0&G)Wj8t4UT(/jWN*/.W/e'o_8*[q]thUgD4J&_
]t)qNeAAc)rjY)&`m;oM]sFiAWM?)NMM-hFU:@nWdE8o"W2$/l`Po[&VkKcVUT(8eUSXljZFe3%_n3Rg
XfSb@`T>XQ+g@,_N.ngV]XY8KX/rM@h9jQOXK8G$X/i2"W1B`[d\G"bhHAdke_`-&cF1j*a3;B<:'34V
T6G((BLsm%*?H4C,VM/=2(g:'+X80V*>8qq&L/qZ0/Y@&(DIT'/4;``0d%AS+Xo-".Ocl#0f(j[7lDtO
-R0rm7T=SI$TUEj&/c7@Xhi?7gA]h3aK1E)gYLcErnmt8gY8[Kf-%]8\[o>_\Z_`pNJijaS"-%ERuMf"
>#fHXD.mEc=&`&r:FK(=<)lt!<Dl^l;Gg=g9hnJ\9h\8V9h7cC852r^<``=%;cQn$=]\Z%=U85:>?G$1
='8c,?m&oh@9HT:?#4nFS>ig*]Xb//N0C3M]=PVe]Y1hf^b_fh`2]i:WiN/"X/i=nT;8<]UoCGuZCu8`
EM08+\uq`mNJ`IFN/s0fR@Kn=R@0D-QBR2^MNa[/U8Y2oSsbe+R\m<kUnF!1LP_+\T:VC<St;RKSsPV#
O8b+YOIrP_[>K6PJqKE)Z)k".XfSM)Z)t13XK&5"XT#7%W1kI=Mls.aY5PCcZb!o\_99j9^U^kdbJ]$i
J\Jq1jP/2#\[SlO\%08k`QZKC]!o#HU6gdpOIi_i^<=sHZ`^1%W3F(W^:1;?rgGC2VQ-]$\@B;pc,IK2
]!S]HZG+NIjeRlkNeX%G]=kVVW2Zl%_pZQ0WiN8&rMfn"Z@43WV:s/Egtgc@e]PXXOfYq&Zb"B#^j$;#
$<q1GJn.D+,TdpC*?lpa0/GI?.OZSe*uP\%',r;L-ndG2*Z>b/+"]]B3&)d"(`FME/1iA+2)RB[68gDF
.4?Pm0LA]YE$u>.)&>08VoI3;gYLZ=a0in?hqd2Ji83AJh(?kO7,>>[Za[*>Y,\:cP`hB(T:MXNRuDZ(
=\N4:BOtUW=&i-o:/=_`:JXhbrD4,%:JX_\9he;R92&)T8OZ'=9Mtdh"]SDs;,pZr=9i#4=BJd2>$(]&
,$%fK?=7,L@prVE?=\,*N2!P[]=k_QS!p7b]XbJY]"GVaI_3:>ZG*03W2chqWMcViU8FrfUoCGqY->$Z
HY\A/UV!k,QB@)^NKKEfP*(uqQ^XJ6Q'@>gN09U%USF`fXJ;8LQ(=bSY,.n_OGSdJN0]itS=Gt7R#m;e
MMd@PNg$-:[^;3KHA@H[^T=H7XfSY*YcFe+WiN2"WiN8(I]THF@%"%$ZEp^@[C!BR^VIY)a2Ys-\@]r5
R#ZNb\[gbVcb[#oXgGRH[^EZZ]=,;b]!/''QC"5J]t2#%d*&erV5:3!`5fO!Z)4(YQ^t"TY-GCA\\5P^
\$`WKY-5:NcKao+RYm>jXM_ldZEL7*X0TOY[&g:-XfSS$9rP(pY%sf4e]?:oeC)[b^9aB-_SO+2aj7u9
OrtA@,>M'`A4A7"*?#qA,9n<S-RL)d.OQ>Y)&3i&+XSK^/Mo1)(_mf-/3Z<W0e+.A(bHdW/M8b5/i,:9
-mTu\,UFio6rRo?2&d)J,%7UTce6t+h;-]&`73Z"hVI#H.c&n9h;/HpgU48hY,SCuW2Z`"VPBl]Un=BO
NI>MA<Es*G@piPD<)HIfr_<Mj:/:d^+\b[(92&#N8kVfL92&&R7mod99Mnbi<`E$p:Jt.l<`N3!<W6%u
;]\q?=^GNF@UinU>%25fJ;g5*ZadWVVkL*#]t:>3SR&>'Y-P78USt/hW2lqrW2Z\jVlQksV4t&rX/rD-
Mg0JsP+TRrUR@7'Nfo]pQ'du-QC+/3R[94tNKKX#T;&-]YH4IfR@9_HY,S7lSs>1fKnkMBOHPijO-#Kb
rf.VNMN3soWk#L*M1:JHZb<QEX/l6"#HXr+WiW2&YR7S9Y->",Wh?Jr[/RBT\[]/[]"##R]YM@n\%02t
gn]gfRAm[ZhTs*IY->7C\[VRM9=M=:\@8iJVkKoi]"Ybnc.'_8WMues\\cA#[C36/R[T_9TV/*\W2cr$
Y-tdBY,e_9_T_K<`i5&eR(U;P\[/K@XK/b>[&^1.Yn"R^ZE113Za-d>Z.7+Lec*ohcc42_d`95Ida?C\
[%oAd&/mApI:G`&,p"*M,9e9W,U=KT+XJEV)]0>,*$Z[R.5*S3*>TD-+>>l?2_Zg,(Ddo,)]^%E,U+EX
-N55&+<_mT2+:PfDac)j-81(YZdIJ*gBQH^_U7/pgc!j-cIgh&g"=oI`m(ZiY,J.lU84]n=G4/[UnXKS
Ru`,;<*3I7@q/nO=]A0m:/+AT9h\8S9E%Nf8P2TG7RfuK90,dC91D9977p?U<`W4!;G^.c;,U=h:Jakb
;,U7f;H-Ur=^GQI@UrqYA7KP&JrQ7pY-Y=1Tr,-+]7.#HIY+)aU8k,_?(7RcX/W+nVQ?\bV+#:$Vl[#*
WMlf$NH9W.Oe9IsV43[2PF%`+S=u[NTq@mGR$EntOI)T3TVeH^Yc=@cR[TeEXJ_nkURI7!L5C\DOHG`i
OHGfkOHPfhNf]HsXLYd$NJi[T]",5RW2Zl!WiN/%X#$fUXJ2\rY-Xt(VcBP#[^3BN_7mCj^:$g\XgbaK
[D'W.i37m$UnG'Vh9EsOZaREV]Y=Ba8&DmL\[&EAWi2r*]>;5!cIfk7X/`/%\&62!\\#8LTUq^GS=ZCO
X/rG,Z*L^=Wi<&(]#j=/\Z;HkRE<@c]=bPSZaRKTX]ha)ZHU58^U:;X]")"BYKk\KdE9DF`2V,a(YlaQ
dF$.QZE$%q(F:P!I:Gc*-m9cY,9eB_.4Qbk+sS-I)Aj2**?cdZ.53b5*#98++"]Q82`*6=*>TD-)#bER
*r[9%,pFHW,U+EZ01&f`F>kj',Vl+"^<OsQg==Zsa:Ht\h:oGfSBK@/cdB*#N7S!++Jk["StVmD!&UUH
Ssc(=RZW;D<*WX2@q/qQ=]A6p:.tRY"@u'R7RmAG+\#!m6q0dA9MJ>\91VH;7S6HU<E<+!;c-:a9i"P[
9hnF^:E!&,;H$Rr>$YQIA7f%MARTh6K8Q"hX0/7fRPgqK\$r)\EdX:KUT(>l;k^1gWMlS`UoUA[I/k[c
Uopr&WMZSqRW=+;K;?>jVj`m8QC=;6r1!hXQ^%H4)j["iTVA6\Y-4e!T:DLIV6$VkTq\'COc53ZQMm6l
Q^=,-P*D2oOcYj$WkQ)mI#NZF]",5TYHFt*XYm5_X/i1tWi3;0Ycjk#T15?N['mN\_nWmr]T)tBUU%JD
_8==EhnO`5Ss$_Fim5QZ]tCtjrkLt:]t1VXXfA7sWNNM:]tV>)f[R[AXfSY1]ZJ41]=GDVWhZ/VTr>-"
\$`ZT[B[!?X/;o%\&dn-S<]e,W7&f,^::GR\hq1<[]Z[6^Y.,r^p^V_\$Jo1ZbFK%aK`(i]UC\X!.q2p
a2lB8Z`I::*Zl7mI:c&//12bC,6oD:+<MUC(`*)c3u8_O+!`3_00)'C*Z,Y1+YGo?2_d$;,o[[:)&s_A
+seBW-6sc\-6sc_0gSoiIi0(S)GdiN]?AXUg-a3/ajSr#h9MC1Vp<`>cd\]iLW?*`U8FWVTUDaV#]?Q3
SX#>!Oct`J?=$W*@qB+T=&W!n9M7rI7RKL.6:!n*6ULc>2ap819M\M\8k;B<7S6ES<`N$p;,9q\8P2QG
8kM`L9MJ8X:fCCq=Bf-BA7o(MBP)RAKSG5@Q8Xh^M27h5[B#@5E.spk\@T2ODR6[LY,\7lWMlMcNrrIZ
Wj/V&XJr,!VL*i:C7;l@Vjj*ES,SiVQ2[(7Q^3huP*;3%T;&*PS>*$eXJr(nUSXieY,\4fSt2:;Q'@W$
R$jG4R@BM/Pa.GrOHH$*Y/%YkE.s+E]=5,T\ph#iYHtI2WMuo"Up[qDXfA:tSm/(g]sYGd`kT:+\X3M,
Ydh*P`6?]Zf$08AM12r#iQT*O]th=n\[8ZGX/W(oTq\9SVQI,3[_'H*f?1k7YH>"9]uS10]t1b^Xf%k_
Su&Km\%0&YZ`pO1Whu`$]ZTF&NJj3bY05,@ct^J5b1"\f_60rKd-1,GZDjq.Xfu?A[`un7c,[fDXhA$@
"0T>TZ*1UF\@$Vu)\*':Iq;2-/M&@s+WhR=().Dq&J,Ne&el-$*$-=R2EEWD+WM@?,VM8D1G(..,p+$A
()@c-+!2UL+T<Mq,:"K\1I>DsJe/G>+DS?l[m@[JcGI-*[EIF_g:W#u^Xq?"h;G.6aO-ueURn6TVkL,g
%#(7?R$NbiO-GTJBjXt6@qB(S<`Dsn9hIrH6U<q$r]qYn6:!h$5se%59i"SZ8Ol3<7nc`Y=&r3r;,9kW
8kDQDr^[bq8kViR:fC@p=Bf-AAS>=YBl&'KKRSE#I!g?gH@VHn\>bC.Dhb4#]=kkcY.)$3Tq\<ZWhGoV
Op?'(WM5lSVlHYsXbhOOAWFI/UR[gDS"#h5QBIJrPE_5lOI)K,S=H(>TVo!"Y,eP#VP^8kX/i(eR[]_4
R$O&%Q'IZ%R@'>,QC!o&P`qW4Z+mnmG_V?`[0<hC[^N<5rh=)-WMlhpTWl#4XK/A%Ume6_b.bj9^Uq;+
]qGaU[_BG]]?JgRe(pjfNd@hnhT3OJ]=u"i[]lg2TqS3OQ^426T;&<e[CsW3f#k_6ZE:78\\>tt[Bm<J
YH+RoS=cRVYHtO=Ycb%+riHL;_9M0*O-Z,u_%Y2MhVR/Jh;@8H_QBuMhX'jYXf;<#0t"-gWl30"`Qc`Q
ZHm=e)5ap:K93(A]"4%X)\E0,IUkl'0.\S!+<244&e>Kb%h0$J&Mat5()nMN2`icC+s%[F-SIJE3@cF)
,TdpB(DRZ#(`OJ:*ZlLJ,:=ie2+M&*K+](K01h)0YH4k+RYu]HO3$/4euj(I^>%K%hVcnLdb?<oVjEa=
TqA?W#Eb^ISX>P#NJW=6DIcmDA7f:V='&?s9h@fA69me%5sIY&r]_2_5=7n5:eshZ84H$;8PN#\=BJX%
9he:Z8/4T_6q9a<8k`#V;cQh#>@(]JBO,1dAT`BTJ:DohFEM\JI[dgSVM9,0M6a_*^q@4c\\0+oX/2hr
V44<?"bEYFR@BqMVP0iePD+9sQ+aN"S"6(<R[KS2PEhE"P`_)kQ'n#(Q(+YQ[(!BFX/DnmU84]cWiDk`
O-5e-PR3P<PEM,nPaIr1rg=%WQ(FhX_n18EIYsVt['6dF\ZDBgQ(tR`W2HYsXgG+.XKJV'VQ$XWFgo9.
`5C0<UBcC`a3i)Idb!1+iO>\LJ@4_)aM,U-]Xt\\Y,%YZS!]>"P`qK&R@^IiaP,Fr_mckMVkpT'\\Q+n
Z)F_)Vl-A_R[g+KV5L8pYckC=Z*V3aeEc7\B:,6gcdUq6iTTRciR?>jXKfFtp@QY3X/W"sYH+k*!"7;^
_T0g.e6i8/a.oW(R^0&aRup/g'F$XLB1Fa7/ghka)\s"t%M0-Y$k<[V%h0$b+Y>iC3%ZBt*#fkD/2f[W
3%#Xb*W?ig'b_2n()@]*+=/<^.OZi/87I=+*u>tO:7A\jW2cPJE+E@5c/%+"WIfW6hV?uDh9Ejdgdkn0
QB@5eJ:OGm)m-94T:;+.LkL8'DdZX?A7T1V>$+a#9LqT=5!;(o4[24s5!V=s6:aaD:JXYT770C184u]V
<EE7$:J+1W7fl.K7/fUk7n?9I:fC:n>$P?AAS5RbCj(8XK7J;orc\rtI\!jLQ$@4hOgVg6^:LVU\K8=g
MQs1cYEO^?PRj(WStDaTX/2)AURcgUC72Z<U]-cgS!fY2QBd\uP)k`gOH5WcNKg3@[CE`OWhlD`TqJ6[
XKA_0Vj3=(P*1rhP)tfiQ'[o,S"6"6Q'e5C\&,h9K8QS;\$N?GZD3YFPc2!kX/;YuYHY"+X0&G&VCSXG
F-aGTb0\>K]VcO1\B<1Dbg5"e^Ym5.R"N-9hp'*Y^qdOjZ)aUgQ]V-*9p1U$T!lekf[\*VYGn1hWN3J@
^raa4WLolWSXPt5QC+27TV86fZF$pC]#)PDmHC=6S@I/&g>V2]o]>,dgU=,ecgCZ*aKDVFW2cqJX08Q.
5JFG>[qJUeG5u1$Ye7TW]qKCKIpF-/#"3]J83&U_.O#iK'G(Z\$4.%I$4.+I#nS743'TS^-6*d8(*"ML
2EXGt2BNYL'bh8m&.T6_',DE),:=oh.Pa4^BSD*i+tdf;Za$O,SUG'T@$K0qg:;`iOMou0gYLX9`j+"J
JUrQ:NIYnZT;a<Q[A07[Q&L9CG'.\-<Dm79@:!,=;c$+W6U*[r4T7D^3&j&e4[DY6:/4S[8Oc-96:==9
:/Oqj<``9r7f>_,77K^66q9d?9M\Pd=B\s9@V07b@V0_-I=d$"IXZ]mH@_]jVMoP3GF,_J\%5GBWirk@
YHb(/Zabj7Z'Q2hS=HCRWi_eHK:nubF*!YVZ(mqaTUD15Q^3r(OH5?YLPC_LLl@b$YI1[?Xf/(jT:V^O
WNEA.ZEU3lNJrpYO8b7jPa.W%R@Bb:S!oh>WOK[RObedt_7d7]Xe:i7LleLAYck((YdC[8WN(EKXf81t
WoW*gd)snFS@P78Tt87caNE&f^9c\OTp_%Pj4DAkaMkp+Z`U."SWSheLP1;8OGK%!^s(0PbegrrWM6#a
YI_E_`QH00U6Cb&OHG]jQBmr/SYWEnZaI3Q_T:?qii/?0`n&\lhrjn&i7?B/Z`C@apAaNsXK5@$WN`\5
YcOe(UqFOO3ZQ^m!.MMd`Poa(In`"HCDdZn3-&P#4#euD+W2"-%h/dM"pP56#7LhE)D3p03ArB2*#KD+
*$Qsk3^Q;'1`Hu7%1E^F%jqo$'GVK.,q:H!2*XlPLOV0+,DWV6[B-0\C0X_FQIX^BZ[.%jbME0Q2qQ!c
f\URlK8>A;Fa9UV0<MRVS=GjsHZO@PCg^CD?"%,I>#nU!91;*/4?GSa3&`]Q3C,r":&[rk:J=;JrBpfZ
8kr2[<W6#P;+X,@5XIe*6UO7077g0K;H?q*>[LuTBO5([EI)t_Kn=l*J:2itSZ\Z>EGBTf8@Z.:\Zr<A
]"!NYTr"s&YF)GV*/9lVW2HVdL4+lTV2'SJQFXE#USOQLP`q>tQ'%&_Kn=l-KT;(UUT^`$XJhtkU7[sC
T;DLg$a6eAUQCFlLPh%NOSt@dQ^XD8TU_RIY.;<PNKKXC`4WO_VjE9oLQSOCY-P+,U8S+!WrB%"XK2?#
FQi&XkL\/Dd(Q"rQ*S*A`m3GVYJKer[A]@shqZ>pcH3l2YGn=gQ]?iQIscZpNfod8a2?!?_nEOaVkBQR
X1Z0]_SX+0ZC$W,KnYDDOHZ'!R\?UZZ+%6R]Z/^ld@Hl+e'ct'g[Fprf#l7`[B-aqp%/=Q[]KJ/0<h^d
XK+m&P,#FrP@r3X!)oc,aN)#R9//qbD^uh?1MgSo5WpnO*Z#G#$OI%A"TAKI":>MK,r[V=1b0gm)]'2%
(EtOg2EX5h7Oo,\#m^hE$k3^G&g%o1,:P?'3'UA`N,L!k4.EX]ZETgG?W0p6R+0mCW-^^=K\#&<hV6Z+
bhLuJG_:X*N09EmN]O;CT:qg8I;a1NF),2d:0V(3?<U?-:.[i=4?Yhi4#o8]4?c)!7nrtZ),<jq6UF%(
6:ORA:f1.l<)lji6pa+$5<qR76m"lh9M\Pf>$YKEAnl!c?Y4/%I"I!!IXQThH@hZoV29YDDh4q$\[B)_
\\#Jd9SBOKZEgL'RsHQVX/`.qTo+/IS>W?TM0kN$[&Tt"SX,G"Pa.GlN.le4JVArBPan_UUnt&fTq%U:
PE;-(WN3,#Wi3)$Q]6oWK7o#>OHPckQ^aJ7SXl@KZ+7QJP+Ao'^pLDOU6:7_NgHZPXKVf)UoUa!XT>N(
rhsk;XEh5+e'H:ch9V!6UTqGDaP4J1^$YFadC5IGi76/ubeh!"XJqn]P`CBEH@LX*O-lQH^UC_ma18IV
U6q%,U9_DA\@K/g^7pdJJ9u`tLm"$hS=u[UY-tdG]#imnaJ#ZNh::9:hXp3ec,RlM[&SS]h!XgnZ)FV$
X08\/XJl7bVk^o>]s"%[!05(7a2XfN/3@s$E^hDf/T"lm6p!%H)A<_m$OR.C!s8Z1#7M1].Pr\.0J"=`
'G1fa&f`>U1c@?P4uaGh$3^P9#RLtO%MT]u+=Js&3^m>!Mde+oA#Qc2Xf[Lt;bL)%PgMYNfqs(BWS?:b
h:pW:g=tE`?]g>2Q^sb5F[3=/T;8'5G&)5IF)>;c:01b/?<^H-:.[l>4[)(o4#oAe7K,\<7nZTQ;,C"[
7mfKs/jN!&:f::o<E3!n7moX*4$5bp6:=7492AGe>?tWIBPD!^?tOM0JV&E!H$Xd\H%?Bn[]l$JI?CeJ
]=>Dbrk*-^!Ec>!Z)XOkMe+fLZE1%"PCdt4TqJ0KMggl)[]ld,S!B(tOHPZ`MM$D/LQ@djStrBcStMpX
TUh@,F`3))Tq\NaU7nKfTTt[tK7AK-NK'$`Q(";;U8FZ_YdqKFPG,S4\Z`06R?*&UOd6HO[&g=+VQI8,
XfSV'W;`f6WsN4>\%]l*c*;4IWj'(FbL!_t`UiTkca/t8gsas*aM59lX/;MYOGSI4I>3uTS"Zac[B-^O
`OrXYQ[<S$R&@*o['6gH^o<fgLOFDnJqf8LStDdVY.;9U^!5Ht^S7jSeCij?na>#Sai/_LbdOOSd,O3*
Xf/4uY-4q-XJl1$R[Cb&_SBUg!8>N5`kum\,=[?.DF5``-#R3s8iJ:F)AEbl$jd.A!sAl?&J>j!-nHYn
0.e@f'+4jB#SnO10f1O:2`i2t%g`CB"9o/?%MKQq+Xo965"fF9MGbicG-S<NWgIm69hBe6@uAUhh7K&F
a5#P/h:C97h;$`b?_EgYSt):MO_D5$V4jB1D.n0BH#dJ":KV"7?sZr6:.[lA5sIOt4?c)#7R][26qU6P
;c6Lf8OYp+1dOc1;,^S"=]\Qu8OYs25!)"q6UaF692&/]>$YKIBOkLSAScXGM1gA)G^2>rGBn_*ZF?j#
Pc2%%]=Pbh\[oAa!)8rRW2HJfW.J6UW2?GdLNIQqS!]P-M11Q#['$9uR$*MjNf<sm5_XuQQ'n/7Tq\Qg
St;j[T9kRqH#e\,T;&9[T:Dd]WhPuLN.le9Ll@R^PF%f3V5L,hZ+IrKMk.Q&[&g0rOGXI"L6.^qYcF_%
X0Jk/ri0k<Wi2krX8l5([_]o&bd`[>WO9@Qcc)l`c/[X?c*!>%d`^7laM>9dWhZ)KM26_7NLQW;Unt'%
]<ANQ`OrRTQ$dS,S#Wa"\#la?]sFK&Q]?QBI=R-<S=cOSYIh]iajJr/]:QFbdaR"9puHnA]>)D,bJ:9`
\&cLnX/rD'X/rJ+X/Q(!Ng@Mq`PC"`"5Ui8b.^n%+B3]&@7MUU+Dtap90"LF(D@>h#mLY="UbqX()7Q&
-o!,#1H$U$'+=pC#o=j;0fLj@2`iQ1'+bKS"9f#;%h]Tq+"&p26r7ZLKgd+QP-qj(TnGR>91)6M@u/7^
h9s9^f\bZGh<*VMh;-rsNLlK-SXc:^K5S6!VP]f;F(9HCGB%D.=Bf?H?sHl7:.drB6iKA75X\1777BR2
6q9sM<E)mo91VNB7n??N<*3@2>$"Wt8Oc-:69RIr6:FC892/5_>@(]LBkLsdDKgSbLkIg9G^"FZG^4b"
Y-bL/QCtOjZaus9\?icY#'ul7VP^DhXDhFGTq7jJOa:o,S!'#+Ndunl[B?BuQB2$'/W>L>LP_1cUnaNP
TV/$[XJVemWLB'5Nf]HmTr4obT;/QnVkfrTQ&UKPLQ7StPn0:RU8Fce[(*c7OK6:6[]Y(QR#HWHL6.^r
Z)an)VkBldV4jlNSYN!]Wssp)_T0U2b,T\rWkQKmeC(LdaP+kjgUNZ<`mNDaaM"s^WM6&ONJr^VTW5/q
X/`8*]Y1ke_8*=PS!K;&SuT33\[T&\]W\3+SsPIjJq],KSY;^QY.DNibLPJ.X.d_hd*[<sp%?bI[_0T"
aiL`iZ+nGuYdD!DT<GW1X/Z.NZ)5@Uai!*T"ldA>a0]k=(0Plc=^3g$*+s"j838@C()%2g$j[1G%iHB,
)&F)+*\93*1,gs1(D.2i&f`5R4Zked4uju2(DRPj"pG8>&JPut*[`^/85jGWJ2JouZ+3N>Y`s<15W_M:
@tqnUgXaTNakP@mgM!D4ceI2ZSXu@DStDUb@V*9KTUh@+KQh]dG'%bEC1(jh?s[&;:J+)D6UX:17S$-B
7R]cF7KuFZ;c-=g:]=$69hnPb<``F/>#nHm8OQ$<5sRUt6:F=59M\Pe>@1iOBkqO*H%LL"LP^V1H$4CX
G^4UlVRX7>S"d$hYdRGXZ)tCA8s?!FUo15kY#SN)V59r\W3E7uW1TEHT8nE$[^)d!P`Lf^Nf8pPN09X)
X/DP_Vkp&XWNMtfYc+(WP*;6*Wir7hSuJrlUSFBNS<].lL5h7ZPa.`.Uo:;n\%8c-W4dYl[]uj(O+i%6
KT;FtZ`pI1UQ_=OVkKnNAYPirX]MgKa2Z$3_5UC6Wk--mfA,3Eg"b<3f[?dZ]%#H]`4E:YWM?,XQBmr0
Wjf@;XgGF6WO9FEWP5g@US43GVmX7KZ+%H_Z)XapTqe!8LPLtUR@9hLYe%]iakPLpYJPbCcd1.uo&Rfu
[(<ukccNGnXLbgJZEq*K:3!_FYcIhQ\[]Mtbe`<?!p.,;_6L2HNJ<I9?tX".).R_t8i\CD(_[Gj%Lim]
(*=eD)&aS;)]^Ih.jI#+*uPn4)C74)3AEKZ5:e!!'GhSt$3pbC%h]Nn+=K-9:fhmmF@.-fY.M?UXbgR[
2`a?(AVIVGh:0YsU"7E'f)Q<#Wlj!OPFJ#4S=Q7A[n1/5N.uq9IsZE`G'.tPGBnR[BjtCQ<)?4W6pj=0
7S-6G8k;EB84Q->8cDHb;#X?%;,U@o='&9t=&r6p91f+Q'15)P5t+438PN#Z=']9HBPML1K`6oKK7\W%
G]S%RH?ORgTX_VAZF%*M\@T,U[^E\=[sjR8Tr=iiWNJWrYctUIZE^pU_7[=aVl[8&WNrh,S!9%qNffNf
Nfod)Wi)YaU8XuaTpqs]Vld(rR?<`)Vm<e$RAmKlUnaX_T.l_#OGo6]OckrrT;AKgXgbdG\@]2RY-+am
LOj\uIu0SnZEC4/VPC2nX/W%hT;ni=WiVMuaNDH?^;?d3>,]0\c.qC<gYLiRnEAc^^UqbDcGI6&Yc4Lq
Tq%[KXL5OCWiWM2VkKZ[[]d3Q[&g1%Up%VRV5Cf<\?)^0VPpGdQ][5fOHZ-+Vm*bJa338ddF?F^cI:e=
o@CUTY-5=Sccil"XL#F@WN3/(\[eq<ZE1#eKsJ8'a3DEW!!D&`]X=o>X0Jb)T9Y.nTmUm%AP5$7+;tq-
'+kch)'UFT*uZ.C+;u+8-7pT"2(^$p+!i^39I(fC5Vj`2*W?p/'G(Z[%1Wpa)BUFh7p'2GIYFK._S3LY
Sps^(.l0.UA;IM;h9sNpf\PE@hoWnef[nm5P`_,mP*1oePAPYtG&V59DJX*'Ci+*6JWH.FE+WH]<_l@X
7/fO^84uZN91qlL8P)NI9)_Kq:/P"m<`iL-=&i0t;Gp:c9`.H^8,bt"7nQBK:fCM'@qf[pG`.ZGP)Y'?
Is$!ZG'A4VH&/0%rON-F]",DaI^ur!]=O#pVPgJrYH5*MMn-=.]<nZ4V5pf*Z`U@;\Zr39Un3p8O-5Zi
PEM<,Vkg#ZV5L2fVkp,`YcX^sV4<j>U8Y,pX0o=6W2QPfTq.dHS!B+rOHPfkR%:.SW2R,2Zad?FXK8:p
Q$[n&GC576WOB.5XJVksXfJFsI]''>WiN;,a3i>ZbKA;NI$iCAl/h:"f@/@,hrs(L_n!e/e]GbBZ*17-
UnFHYXgYR@YGn\0Y-+[pU:%A2Ydq$?WN`b:[BI<VZELL7WiN/#X.l)LO-GotT;8[(_8==Baj.oEaiVii
m,Y^dX/W/+_pQc:XK&P0Wi2r"I^6,\Z`C+(AXB^2]YVIpa:^MBSsYCpHXUH&Fa]+.UrCcRFC\$,/KbuK
'GD&l(*Y4T+sJ-R+X&$P*$?g`-7^o*.4R293B8cV3\N!4,TRmE*?>q1%h90b'cA,D4\A^_H[V=!`PT0m
RZ;>E2_H[:7::k`f%o*4g"G-::u0d[gXY*6h1U<,I=HZkG&qkICM@EjAS5RcAnPgpFG#mQMKNZC>$"No
84H!97nZNM9M8#P8kVfN92&&S9MA5^=BSm6=B/@";GU(b:/1^[.SEH.8k;KF8PDoX;d3X@CMe*AP+.l&
M1C#%@<m$@H[C!aNi&nZ[(3`[7D-4A\[AfN\\+N8YI(dJ[C<QU\[AiS]!SH4Uo:5lY,e\/Z*:4,TUhF2
NfT9`Ocu?3TV%pQWN2kjU8+WcXf7n\U84O^UE6A@\#u[.Wi;hgStDgOQ&godPEM,rSYrNeVm3P5Yl:[9
XfS7T@!mENJr>to[BQg7X/W'YXfJCsW1Tf[XKL%1jPenNjm)Etn+H\Zq=X::iTK7Qf\+Tc[)^;9`4`[d
Y,\=lUoCZ,YH"_+Y-Iu36*.)h\[JTAZa?g9[B?O3Zb!KBXg#%1XK8P2YGRhWR[K_@W3!PE^VS7;bJqE:
bgPM=d#ti?Wj97Vc,R)pZ`pW^Y,JA'ZE1F<Y,nOXT;&<gXJMPTVj`6hI!'IC?!UoMC3G9._:#Z9CIpK:
+<213&ec'),pOQW+s\N\,:"HY-S-_j,VV,53'/oK0fh?J-n6\p+s.mL,pF0=&JGlq*$Qjr:K:bLKVlT,
a1SUJN)pHH2)@Bk@#)YPf$r:\f[eg6gssEQ\@L5GFE.:t$YsEeA7T7aA7T+WA,TsUBPhgETr=3%D.HjP
;GBbR7n?<J9h\5R9)M?k92&)V:JOV]<`iL.=8l5);c$=e:JFO^9-$`':eXJQ8PMuY<EigACi4EMR\6.1
KRJ5mBR4oKrd"]qOJShL;67.8]">Pa[uG@.]Y1VY\@/lZ]">Yg\[f2W\@AcCVP^GtZ*^pCY-+RtTUV.+
N/NURNK]p(S=l^UWhuMaTUh[LVkTQCS#*0`TV&!^[BZe3X95T&US7[[,+k-\NfoThRA$LXW2R&)Yc=Ou
Y-G1'IV+(XIt`oLVR*M+!NE*tWEQ7"X)qR7YHRNipA+LXrVulqr;Q`qrr)cnqtTsRinhqgZG=Q(_nERc
X/DehUp.J:Wi;tuYHbCC\Zi0>[C3<=X/r1tY,A+u\[SoHY-YL:Yck7C^V-nKU]-r*WjB@P]u/.;bJV3:
c.M7I^mqp=XgGg\b/L]9[C*BGYH4h.YGZ_UQ_p[DP*(`aOG/.5I<pBdE,KQ+A7/eYEds:Zbgj:RB2:K<
+W2"/',;K7,9J!O+snW^-7'fY-7pYj*@3Es2)?g92Es,Q/1W;&,U4KW-S$\h()@]))^R.&9iYbTKrW)5
`k&@JK00i12E*s#@Z//Ef>,)OgXt?<gsa1^"`VQ;BP1jd@q&kR?=.)L@fBm:@M<6aD0UMmUSa?/EbA`^
;bftX8P/nV)GNn!:/+GU9MA)Q9i"S]:f:4k<)lpt<`N!or_NSjrD"M3;H-Rj9hJ)U;HI.3BQ/'<LR+En
MM6J)G'J=YH?jd_InPfmR@:+Y\\5_k]tCA>[D'>`\%]Pj^:qCu^V7.]YctRAW2Q\qYHYL>W3<G%TUqO5
NJWIKM2[dhS=H%BW2QMbTV7mHT:hmIQ^I`@/t/K5X/;_lX0&J%VP9WPStV^<O-#NhR%L=TTqe`p[BQg9
YHG!nK7JE!Jq]2O&YuY:Unk/rWN3&!XK@bET;Safrr2q.rVliqrVZTjqt'FSqXEe*aLedpcHaDA\$`?7
U7\3c\$W6:XK].C[C<TJX0&\4Yc4LrTqS6ZYI1gAWi3#'Za.!F[C3Zb]s4T=WMQ]$^VIS(b/_N:]uSLT
leKFq]!JcR_g]YTc+:TtZ`pU3WiE,!R?=AMWIK;GIXHHeGB%_IDJ3`sDeN?Z?tt+TXi/N7a,k(53\2Ko
()%8o+XSHW*[<*a.3p/c+sA3Z-m^#\,pX`^-8%27/L`/#/M&>#-RL5n1G0ae)&aPC0h"c6C4D8M`65s'
Y+98n69I1j6lf0<NPO#FU=RrIgYCT=a_FGDeD"JB?X@)F?XI,IraIEg@Us%Y@:NqgH\7Q[V4EEaB4"kA
:J=DQ85;rU:/+M\;,C(a:/+DU9hnJ[r_a)%;H$Fi:f("c;,[Bj)cBR4;G^=j:/"D\<EWX:BleEDLm+*a
M26_/H2W%IG^"L_LldUXT;f!']"GYe]Y(kg]Xthj^qRLo^:_"aZEg[8Z*(++W2d),[]QI4Z_X.aQ^*R0
MF<;[Q^jM3Q(">=TV/!OS"?1?S=,Y/R$F/2Q^OD<U84WaWi`D$Un=->OI_i%Nfo]sUT(&]UT1T.Z*LO7
X/;DLKme=`JVB)NUp[\2TWtc*XK/D'XK/A$X/l0u"oS>ur;HZorE9!pn+6,>lf-I8]X"uf`kf6u\$2d(
T:`<oZEUC3Z*q-R]<n]AWNWJ%Tqe<PUSFcfY-4q&Vld57]=GP`Y,8)-\?)j:Xf\kB]=Gi"bf.K8cd^Y3
hqZDe%(!CS^WP9T_oKI"Xf_T&&ZDb2XKAM'GBRqFE,9E2D/F+gB1$-DBj=hJC5&@h`R*5`P@[KO0d@VQ
'G2!$,pFNS,Ub,k.k2nj+Wr!T+<2LH*$cdS+t"ce,pt2r1c-m>/1;PY/h?o@&gAha8P)ZlI$hL_aM"dY
Q??Y1&N_p87SdZT^<!IBdFd1/hr!8hgB-*`i;R-`?7fMm@UW_T@:<PQ@q&kTA8QC:OJ\nHMK``@>?=]t
91MQJ:/4S];Gg@k;G^.ar_3tu9MJ;Z:Jjtb:/4V^:Jane;uKZ5;c-=f;,Bt];H7"1@VKh+I#O>SOGf!L
Isi#WI!U'^FEVhVKn"N,MMmL]VRF"IrOujS\@8uW\@T/W[^<<FYHP::WMuhqY-tpJX08e-TV.d@O,A^J
M2md_P*M5sR[fk8R?s;0S=#Y-OHbumR@08(R@TtBU8OunY-"[sRZWVmR?s"uQC=VMT:`$]ZF-a3WN3"q
SJ@0:IXHX"O-liX^9k#R^9t2HXf8>%rN>tr!ri6"rVfgpr;$'SkMb"E`O<(\_S3^t^UgbLT:VscYck@7
X0&Y4Za6sAY,nY&U7.U@QCa_?T;AQeV5^T%^;.Ir[B?@"YICgAX/W5.^U(AbaNhlKcdg_'kC2aJ_RQqZ
\@]o=f$*")ahu9G`ODtNWMl\kVf-BdBP(poD/=!&B4b[`BkL^T=^cQAZ,G)=cCScI4uFc1(D@>q*Zc:E
+!N$\-mp>d+sA'M*>oY3)AjP;)]TnD,9eHb0/ksQ2D6L")BgLS*#p.Q4AS=;Ck&.p`4`XdXWa6e?pm+9
4$u\NK!rFqS\`C_^rG$ahVHrAgtlFI@U`bTraG_6!b#MFraI0`BQ/9YUo^;THYQnl=B&*h7S-?J92AMe
<`N-u;G^.a9h\/O8cDBk:/=SW9heAX:f1+hr`'_7;c6Lj;,C"^:f^k1A86(,IuBGOO,O@'LOabuH$OXX
rc8KkF)Yu5DJjB;NNTe)rkDpV\@/fO[C!BLYd:[@Z)t17YGe7mU8P<,ZDjq/Xe)2VQ]HrTJr#GKLkgnK
PF7c&Pa%ArQ^<kqMi3XWOHboiNffWqS"Z^YWi;nmUR%%)OHu;rP*MK2UmRgVXKo+1USAm1Whu/>J:E'"
M3ss?\\#;RXeVAGP-:seXg"t3Y5\A!"9&/rrr2prrr2lprqc<Ig"P3%]!8W[^;7Or]="N-T;f6!W2Zr&
ZELC5Wi<,#WMQ;TO-5E]P*D5tS"cgTVld85[^WTJY,A2"['d3?WirtHZ+.ZhcHsqh0\tF8jPS+n[^*<U
ak-"Hm.Tr<k1IVkc`X@IV5C,fChmj#BkhEsAS>aiB4GFa@U&h48nEXP_p?TU]51G41FjRa&e>a"()@c2
,q:Ak,U+9O*uu48&e>Zf&f)8u'Gh]0*[N<i1Gq$F0dn.b*[N-Q*$Hgt8N]dfJu6/f)Qp'GZ_;VB5W^qf
8R$(mTUq6nH>?eW=MESJrnRV3h#Uhhra@Hf?XR5K?t!MSA78eQ@q0(aDL%;;WMu;8D.-[O<DcCX7SZTL
;,pb&>?Fs+;G^*e9Fsfb7n?9F84H-C9MSAZ:f:9l<@:jI;c-Cg:J=J\='oHJCiO]OM2[@OMMd(8H$FU[
I!^$XEc#K"?srtC"DWI_Z+9kH1:t0,ZF76N\@&]P[^E<=W33D'TV.jPY-P+'X0/LnSXPe&LP(86MN3CC
L5qUoU8"6Jrg?<BP)tTRLPh:WM1g\DO-Gp!U7n?WV50cJOHGZkP`:`hQ_Bq8T<#&rURI^KYcXU`LOal(
O/T4\T:2.2P)bBULl&CBYc4V&%BHN-rr2rtrqu]mrr2rsraGd)qYTmLk3:^N_mQhg`koO$[]ZL#TW#/s
W33M=^qR:_X/MnlUSFNHK7\]3M1^G;OI;W0UT1AtZEpmBWN!#'['Q^2YHu-\YJ7rkc,d`KgsXg7eAJf'
ZH2>!m,m0WrlYSocG[6JY,ne.2lis[CM.6pD.mWrAS>akAmo+X?s-K/<+LBI\]WFQa)kBM1+41\&e>Wq
'GMH20KVEU0..te*r[$E&dSjQ&J,<V%1s?o)^-RX/hf%:0I%_`+XA3J)^?t(6o\4eKr1/dNhs=oQ"`iP
3B1<+OFV1S:Hpm!2)R3MVqThT"kq_ehd9dj@Q\%)?=.)I?t3_[@UN\WBPMF.IZpY,URHjUARAVA;+j>G
8P;fT;,L:o=]ea*<)ZXl;,L.a91DE?85)eX:G,I@;cZt$=BJO$;,:"a9MSJf?XdVaFao1'Mi<LKLOjo#
H$ajgKR7l_DJ<Wg@/aR:B6fuFI\j-X^V7:i\$rlX]"G\d\$iTBVQdA(T:DF@Uo^MjWMl\bR[B>!L4tD:
KntP?MMmI\Uoh/<^V@7bWhlP`Q'@>iLlIUaR$s;/TV\Q_VPKcKP`V#mOc#*YPG+J0T;/?RN/<O_USOE?
K7AE$Qa*0CKn4u8MMmFRM2J4>"h0hiYHG#'s)@l6r;Q`qrr)fhmHs2qjOV\l\@p#1_nismYGn:hTrP/s
Y-P:>^<+aIcH3f6\?Dj$O,JO>J;&uGQ^F#*TW><$[^WNEY-5.=Z)+J'ZH'Y__8F6uTq8@-cd1+Z]<nlF
d+d9h\@&r_]u\XM_m7R:[&K7[Wi2k4D/X?5D/!j)D.dNrA7K4^>ZY$3@X4KRc-XbSL0I,*.3KKB%1O$f
(`OP=.QBps;,^.Q3AN-6+;GOs$OI4V(E",.*$Qph1H.6H-mKcT,9@U=+=frI3*^E]E(ii-KpS*T><t82
3-DHP:HUEj1bUXE3AE;qK%/(RJCE6.C&Vp*BkLsc@q&kS@:EeY@qfauFF8^tS#E0VSVhW*@p;u391D9<
84lTN92&/[<E)mp;G^4g;Z9TQ;Gg=j<)cdr<`N1%=]np3=]JBr:JOVW:K1M)@qTe/LOt)3Mi!1BJq&,o
J:W9(L4XbsF`_L"C&hs$D0_GEWirtE]rnN=V5L>rZ*q*K\$W6=Z)X@]OGo6hX/htnV59oRQ'@AgN/*(=
re2/EN/E[^T<#K>`5K[5^q.%eZ`pX@\@K-J\M(G(]tCYOV4Ep8OcYHUM2dgqS<onESpbm1JV/Q-LkL2)
I"@06L4=MrK:fHX['^XUVQ7;7YHb:6Yl"=loBuAKq>1$gs8DpLpuBlK^:V1q^qI7qaOJ&C^q$bQUnXKU
VQ6l%WMlo)^W4XA`luTA[B?[/T:r4_Xtm5dZa$mL`QHBH_7dCc[^E*,V5^Z4[^<WX^lF)%OdV`2Y-+e(
UnjukWhuMeXjH8$p2K`qe'5G*Vl$DjUi^p*Dea$$Bl@m'C1q'jC11=G:eF`0S]&[iai9fW83JUN*>T1q
%h]Qn)&=)4.lp-o91_]F69@+e0I\M-3'0,_5!M4q85`A^83S^T+<VaC&fDfC76a(DFb;4h-8mtI4\A$>
2$uB9:.[N#/i[WtJjFg7I;XqjftPDYgt[."GB@kEEG]<!A7&\O@:X+lFEDbVO-ZK8TUqa9Ir/b%<DcI]
6U=(091qiJ92//U:/+JYr_3Sl:/=S\:Jh$i03)"Q='/R-=]\X&;G^+^8kMo\>[LuUGCkj%K8#;;ItN6"
IY*3(JUrT0JU`&oH!,')EH?;QNh)r?Uo()KLjs\oIYj8]X0Jn4Xg#"'Q%j^5H]P5(S>)sZUmR@0P`C`\
Lk:/-Ko:nOPEVE.WNWY<]"5M]Z*:O<ZaI9S^Vn+2ai2*1[B6-irfeRcLkLD;NgHN4R[p79D/jTDF`MeV
H[L*bIXcioEcH2LN!Q,i_Sa:+\@&XAWsbr+^pTo)Q_(7qjS\rT@K#T@Z^Qr2QE76hXMMm&`l#R'ZEC.&
TUMFIXg"n-Y->4=ZEppHZ`^0oR\$%=SY2mZXgPUP^qn(1^q6q\\[SoITUhjRYI_*J[_AelI<pU"L6.^i
TV@s=OcPHXMN!`tTt/b;k2G7N`jr^n]"5FH6nfr3.61"&Anka]?=dk^<BVcW-;'l(N17Z)XDCKn1+"([
&e,0V&JuE()&j_G.P<>/2)-d7,U4T[-7CK(3C62+r_b+C9ggol-7:#W(D78s+>6)J86psY(E+5C*uuja
/M]+;/hS_++WhjM.m@d:T;/BaZbt2?eC)gpG&D56C2%U/Ec>c,BkhI&FoHV%I!:+&OcZ*)S<nkHBOFtA
:.RZ75t4F<r_"&$9h\2P9MA)P9M7rK84Z<G:/Fea;,^Kn<[1O?:/=SV7n6-I=']6HD0gtrI=6X%L4k>6
JV&E%Ko1P4I=EVoI!g3dF*2VKJ;&`8L4k>AEbJri?X[euLQe=%TqJ!FNIuLsEbTRnJQ%c/W2,uPQ'.5j
O,Sa@It`fBOcbipT:hmQU8=oiWMcJbTqJ9_Y-PLE]!\`EW2QPYOcYWaLP(/3Mi4(!R@9P?IVEM7H$4I\
I!^3`FF&F]F)cYKFa\mtS%$/J^q6t]YH=e%Uka)1An,ClL7c67l1XrMkf'N]HZa(FJ:`KA\&?J.\@8rR
ZE0mmQ^FGDY-YI=Za[3EXK&D'V4Es4Oc5'RPFA)<Vl?f#YI(dGV4jolXf8"_T;Sg$]<nuP_NfCcDgZqb
Ll@FXNJ<4IKR>t/I"-d*P,um`hV6N.dFHk$hr#F^#mLP;%3@9!?!L`E@UW"k,8Lt$(+h-m>->TIISW3d
.O5rI$O@%L'cHui!?`Ze+u^Vi,p46I'c.Ps()nJH/MJq<2)dEQ1a*hY*?,\'%1sI'2b$),>*:cW%h^!*
,q1;o.jZ8b0Hr_!(E"29.PY(hVlHo0\@T,LTqeZ3DJj6$A85t"EcH/CG'J:QEHunWF)>`/EK6NRR#5s"
@9QW+8k)-4786MQ9J9%084c?B7n-!<7S$0H:/+GX:f:7n<Du[h:/+;L6UaUC=C#EKE.*_"I=$?tLP>_^
"GM;DI><9"G^FgdI=?NdGB._JH[U?lI<^'gB45.O='B$FBQ8?PLk^P2FDYu8Bjt7K>@N2WVl-2WP`q8m
Nf8[?H[q!6N/Wd]R%'V7Pa%Q&QBdf%PEhH'TV/$UWMQGiV5KcBOc56TJpr0'N00X#R$sP9F_>?%G'A4X
H@0sT?u1:8D/*p+F*W@mL7GQa^V.=n]XkMTX)i#b?<C<<AoN9`W3X"JXH\?`EGB#j?!UroV7XR[\@/iQ
YGe7dP`;!-Y->.9ZEpjAWhZ2UQApZULP(;:Ng6!"S=cXUZ+.KMU84`cUn!a7RA-t!\@/oV\VG0=B6S]J
I>*E1Hu1EWIWKCGEHHS`MNP1!k2+b@f%/X@lg##c"Tnf,"U>DN+uMML6T#r!'bUr\rW<c<0nQI7N)rA*
/gMDP%1*7I(``Mn3#s+b+rqI8().;h%h/mU&/6'(*ZlUR.5<\=.2s0C(_mJd$P=7+4[MP7C4IN>$k+'t
*[)jY,Sq!t&g%br&/#`t.4m&PNhWS[rjG1tTUVQsEc#W-BP2!rEH?5EI"-?_G(4jYE,TW5I#O8SRZ2Q/
?s6Q-:.n)D7nc]R9heAX:JOVW8P2QA77Kd984cGQ9*%dbr_ae:<)HCd:/+8H6UsjL>@(fSFG,a*I<p@!
K7er9MMQ_*DgckNGC"[cH@1*_F*)DBF`hkPH$Oac?sQr>='&C'>\.\gEHH8>CM.Ht?X6oC@;pdXPbk@L
Q'di#O,8U>H$k@&Mi!=PP*_Q)QB78jLkq%LMiEXRNK''gUSjrcURma2OcYNSIt*-1PFJ25R$jY/DeNg$
GB%VFGBZu/@pE\X?Y*kdE-6V_K8H/%]"Pqr_Sa:,]PM4g>[:N??t3qjG^t^6KmIo`BO5"R?t*r#NLI)h
]stMXYGn:dPDb[#W3!)([^3<GY,IhYP(\AbJL?/,L5V"QR\m0fZamNIWi`A(TU1k+R\R-q[C3NVRs8g_
A8Z@.G^CE[Hu*A3B4>IeCiOQHL6%tGjm;'chV-W7f@L95rW<Z4!s8]5%2'F!,8_%(&e#!D"\T%1-pq.0
X(=d_0IInX&I\mP'c7i+)'0nD+s@p@'bUfZ$4@1L%1Nj['H8>L.PNS/+rhUC)A*;`%2C!@4?lA8I8Lai
$Odje()ogf+Wh$p%LE=G$kEsc+=\cr@YL;IX0&Y5Za@/^EGo]0BPV9pD/XB>I!0^]JqA;rKS5):Lk^V:
Pa$`=A6`5;;GBeT852oX:]=)k:JOY\r_EDc-;I<3:JFMY;,^@j;cHUj;,:"`7mfa=:f^e.ASugPK7&9!
K8"f&$@[ScN-g#'I=Qcord$kZIX?<^F`_YCE-HPLH$rq%>?kB5<)cn'@VBb"BP(poCh7="FEi.\J9ua,
SXYq5Q^*YgL4ai$K8P\KMi!IYQi<C'Ocb]dOcbfhOH>?ZOHuN:V50fPOH>ZhO+Vq7Lle!rTUD.2ST\[a
BQ%g&8S;jWGB[Y4BkM<tB4YapH[p^!Mj^B@Z+@Wd`lGo-@UNGG>$t`F@qKLuHZjCIEc,E$FEr4_H?Xdb
Q)qR*\@&TAURRI,Oe8WPYVE>a[BZj8WM#ZFOc56[OHbrjO-H-1YHbOGZE:=8Z`9FWP*MK0XKo:F\%R3.
Eb&cu,\_"-D0UAACi*s'BP1snEI37rSZ9?Ie)KiUg=ap$"pG/5!s8H(<Wr^8',;#e%MKE\$l9j),U+ET
,#3T)9L1Ea,8q7,$4IUe*ZZ1<*$HII+WhR<'bq>o'bqN$'+u*$-8$i'0IIn_+X.j7$4IOb,;_VP936`e
%MK3\*t\ni%M9^'$k3[U&.ApR%1sR*.kj+hEdEP/W3NV8\J&q#D/*j&D/F*-EHuqTEd*"cJUm`Q-&-r#
IXQKiLOjY`?X$W5:eXMU:f1(d:JOVX9h\2S:JX\[9i"Ra:a&S0:f("e;H$Il;,L4i;+X8L:/kA&@q]k2
N,F/rI"$d!rcnp)ML]tmDfKuGG^FjerdG0"H?j^XFE2>>D`DuF>?kE>>[(<8?Y!ngBObLcD/F03FEVkJ
Ec>r9F+K77Q^=#%N/!+=JqoDMOc56ZP*M;uR$Ep8O[>4rQ'.;lOHbutT:qpKP`V#jP)tBJL5:t\Tq7U9
R#>3`BP2!pBk:jdDKTc-?X-oD@:<b`Ed<"ZJ;8l9P+/J^_J701@UNPK?=@8OA7fIhDJNs"CMdj&FEr7_
G]n4NEH[,-YHtL:Xf%VRPaA)FZ`^L7Xfnq0W2c\eSXGb/S!ok;QB[`'Su/QlZ*(11YHtF'P*;?)U9:c0
\@J8BEcG`(D/3j"ASud3C&VQQAnYdlF*N(aNg63.TW>i^kWe7hecc3[!sAc2"9f#9%1`gQ#S%FX&K)N.
*Z#V-'+u*55>=I$0.J([&e>Ni*?uXG)B0Y<*?6+@)]0A,(`WGl3u8\M)BU4R.k2bd+<r0R&I]0b*@a'8
7878b"VD:S$kNmU$4.=c&ISdH"pYD=$kX9q+=Sp%2E+03Ho@:_VR(5\Df9cGI<^*fI!BdXFaSdmKnk,+
KR.leDfg2OI<^*WA7&PB;bp+_:f("c:/4MW9`@Zo8kDWJ92//V9h\8V:J^se!`Muqr_tIL;G9_Z;HI+1
Ao2^EJmj7^H@CKrI<g-nLjaG`Ci"'8H$apcI"$TpH$t$`GVXD]DJa?!?=78UDJs0$BPD!bA79(fDK'c;
EHZ).Amo4aDfKr\Q'RVrMi!4BKnk_POT(82OHYroP`UrfOcblpP`^ubO->frR\$%:Q'%8oO,esLMN!ah
Ssc+;RX7bCBOYRgBkLsiFED2)>?Y05?t3h`D/jT:Fa&+XI=?g0T<>c<@U`k\CN4E2CM[`p?XI2SCMn*7
EHHSIDJs3'Dfg8VT<>;tXfJ.bR@^4UZ`U@4Xf8A&WiDkeT:V[JUS=<KR[]n?Tr5#pXK/A%Xfe^uS=cLN
Xfnk6\\!VuEcG]*Df'9'AT2j0AR/PF?Y=+gDJjB8H[gU&LB`['Yg)(kmf!Cn#7;%V%/p]A#6kD;$kX*f
)A<i+%h&mP$4RXb)a?eN0.J4c()%B!*?uUE*#fe8*?#h5'bqN$)B9\5'bqQ))BL+O.4-5_,:"KU'b_?%
,VhDC9NlE_!>,kL$kNmX$4@[h%0uk7$Np_B$k<d[()\)2+Vu=K/k0>tNLFm2H$t3lGAqPEF`DADGCKO@
,&Ct4JU;ZUC2\3AI!L![C1COO<`2dk:f:4h;G^.a:/+DSrCQuZr^d>e92&)W;,U?k<%:mK;c$4b<*EU;
B5i-MH#%t\H$XpfG&_ngK6_HSDK'W>H$X[YH$X[WFZt,&Isu`gFE)>4AS>q#DJ<WjA7/\I?XdefDJNBV
?Z9Uh<a/sDDJjHEQB[>fNJr^JK7o,BO,AjWP`q8lNrG(LOH>TdNfK!SN/ipbR$jB@P6[A6NJNFJOHfa4
&Y,AYE*$^c@q0+_@:*bqDe38S>le;?rF5qCBkCt+BQ&-@H[^R*QCh]'E-->JDe<KkAn,7X?Y!haCgC7U
FDPeu?Y!hiEI*VJY,nb*Vk]u^VQ@&(WiE/&Yd(F6Vk^#ZT:hmNTq7gJSY<$aXKf(8XfJS(VP']ZW3ES7
Z*1XEIq*J5?t!baA6rnlEG&`b>?tNC@UrnWA7fC<Bl.p=K8GhaZHD&1$4[^c'b(ER#R:P;"pPJG%M&XD
"r7XU!WrW5&J5d,:-:3[,Tn!A(Dn,8*?6"<*ZZ7@)#b72'GM;t'GV8q()@c2+sSK^,pX]^,9@X;(a1Ff
4?uYNBGUd_$jR%H$jQtF*Yf"d"9\l3"pYG>#7:kr#mq(S*$?RZ0g\rYG^4[_Ec#JtA8,[qGBS"OH[C'O
@s<0CEGf`4FEVnTEI2V8?<UE1<;]Z6;Gg:e:/+DS8P)EB84Q-<7S$*D9hnM^:f:7mrDk1C;Gg@o>[V)W
FFAghEdiLbH[^9ZF+T-oEc#N+EH62BFa/1Y*-ugLFa&4`JVA]'H$a:?CM.'^>?4g2<aK9E?Y9:O,Z[fO
A7JqN?=%2UC2@gMP`_#cN/3.>K8P\NNJim^P)t]aNK=$t$B0k#MMm@KNg#cmrfJCbO,f0[Nf/p\PF7`'
S",=Q?=mh]AS5R\@rHI'?<L<2?!mS=!Fo^uBP1d]A7f[uGBS1XItV]XF*)82@TZfB?Y*t_?=RY\Alr,G
An5:U@UE\[Cit$%Z`^F7Yl:RjWi`S/W2Qr,ZEpd<X/VqjUnaQVUSX`ZV5()nXg,4;Yc=e'WMl\pYHt[C
\$`]6HtR2+?=@GW?!V8cBO=k@;d3L5>[CeZ@UWbU@:X(iH@gm1PbG2g%M93X"p=r-"Tnr8#6kM6$rd9/
#71Y?"9o#8#n7LZ7n#<e-RBcP)&XJ>+WVID+s%dF(_mc"',;/m&JGin'GhZ1+s8*V-70r^+X%mF+=Jm&
4%<1a58=D3$O@"G#mCMF(^pWJ!X&W0"pG2u#71_D#6kG@&/ZN8-7^f6G]@\:AnYdlDK0W7G'S.SH?adE
D0g/?DK9]8EH68GD1-D8?X-f;=&`-t<)cdl:f'k\r_!kq77Ba<7n6-B92//X;,L4i<EB*$+]h]C<*!42
A7oh+L4F\rIXcZjHZF+MJq\GcBP2+#EcQ.(Fa84VH$4E2H:<:2H@C?mIqN7t=]\g1?!^oE?".;NA7f=c
;d3g<?X7#I@:Eh^A7UXdQ&^`[M2-k?N/j$]Nf8pVNf]?\NK9*ZNK96^rer@cN00BiOH5K`NfT*WNJrs[
P*MB#S<@u0?Y*\RA7o:WA8cBq<E)q$?=@7l?Xmb`Bk:[]AS5UlDJF'0G'S%?B45+R?XmSX@pibT>\.Y`
C/\JN>?tP6@PMA*CM[mYZ*1@9Y,A8!YHY46YcP%4['Zs;X/VqkU8"<XW2$#ZTV/-]Wi2r!Y-,+7rN$pA
[^EKN]!6p0AnGR^?<pc@@Vfsm=]/'n>$i%P?=7>VAS#:ZAS#OpEH6;RJqsjA#6b#.&Hr=C"pP;;"UPSD
%06P;"9er-##>I1$OR2(9fXgT-6XHO*?ZOO+WMIC*?5t9(DRSr'GM2r'bhE"(E"5:+s8'T-71,e+s.pQ
.l07Q9O_<L&I/XL"pYD;"U>VS#6Fr-!X/H+&ISsR#mLV@#n.CY&/?*),\1B`BKg'DCMn!*EI2\GH$OUW
@r?1$CMRg*EH?/@EGTuBBOY:P=]\[*<)lpt;c6Ih:JOYY84>s;770L79288[;Z9T><*!(&=]np2='&O2
@qBM"JV8GsG(4a^HZsLRH%^]hChII"IW9CLF`VhQF`VeRH[^KoI!g9hI!eso>?P05?!L`A='oTG?Xm\X
@8^?9>$+m3?XdPX@pWZ%QC*bmNJ`RKLlIIXN/NUOMN!XYNK9-[NJN@JN/`gWNJrjXNfB'YOH5K`Nf/jX
O->irS!ntH@p<MO?Y*\R?tXIr?<:')ITg)c@:N_ZC1^scAS,[nDJsB,Ci4,p=^>???".8O?sI&M?!LiP
A7\_I?!CK;?XI;RA7]@gQ`IU#YHP(/YHP4:YH4h-Y-PCAZDsaqS=,Y(P+%i/U8"H\XK/>"Wi`M5[^30A
Y-G@B\%08EI;ND(?sd;H>$to\CgU:A"'&H.?iFFFAS,CZAS#IfDfTi8E--2H!<N-$r<3Q2"q(S<#7:_A
!<`Q)!sA`1#7(Y8#=^XA75?AB,pFNV,:+WY+!)@@*$6.<'bV)j%L`dZ'G_W-*?H@H+<i'Y-n6bs,parm
3'Kr;D*&OA"pkJ<#R1G:#o4'V!WrH)!X8N,3"$-#"pbMB%1s6d&.]Be'O+pSBkhEuBPM@#DgH85H$OXU
ASuC(ChIU'E-$#8D/XfABkCj]?<dA0r`1pV;c6Ii:J48J77K^66V'mH;H-Xr<`N1&=]eg1?!LQ:?"7G\
EHm1hJ9G[UG^"LYE-HeaG\p5mB4Yt#EcuYOH$+.MH$XgcIXZZpJ:Dro:/P"r?!LZ>>[:T@B3A2DA7]7O
?!:H6<E`d=A7f.PBoA(FS!&biM2-qINKB*UMi!=PP`_(,Nspr#KnbJGNJrpXNK9(uNZ4%?OH,9ZO-#Nl
Q^OA1G\^P\@q&hW?s@)RDIX#V<DcUs?!^uOAnV'QDe<WqCMdm)Chma#;,pb,@:<ML?!LQ=AQi)CARf(F
>?tWB>$bWHA7AhOCQY:#\ZN*@YHP4:ZE1(,Y-G7B]sau:Sskh$Mi3[bR\?XXWiWD*Y-+t4\%9#SYck7<
[BmKSO*bJ<A7/_Q?<LWLEaNH_=]JC&?!guL@qB(V@qo[kCiFB7E,T`6D?'\<"9er3!s8Z."UP84#71Y?
!X&T/!s/Q/"pbG:!t$kF:.6rj/1)Pc-RU/_+WqgI+se?M'bM#e$OR1M()Io3+<g_/)^ZmZ-n[,%.4Hi)
5XnO\Bdjc%!XT&8#mLJ9$r%EA!s/N)!X/c4#RLeB"pYME$k3a[&J>Zf%M*)[B5;<uC1q<mASu[6G'\:T
F)5T)D/F$'BPVR'C2J*ADeWir@:*;D>?Y35=&i4!r_X;(91VK=6q'L48k`#Z<`N.#='>K+(0k0P>$PKI
B5Ma=L4OblCjLDOH$+%L98%e;Dea$+EH?2AFa/%HDK^ASI!pBjI=HcrI=+pm=C#6=>?Y00<F''A?tE_T
?s6Z5>$4s0=^5BD?!hQ2O.2o2Nf8mRMia*bO8Y%BP*D,lO,]"qKHu>2NK'!\OH,9WNKK9^OctfbOH,Kg
R\-:FNd#5B;ds6E@p`Dg?u9Oa>?"R+?!^fC@qK4W@:X"bBkqO&DJsB.C2$^O?"%2L>ZXp';d3X<@:`kV
?WgE5?=@5H>$k`A=C-$6RBjZ6XK\q2Y-G79Wi3&)Zb*u`Z)XI^OGnpMO-Z0.XKf(8Xg#+8ZEgmK\?W3<
Y-bOA\>b:+?<(BA?=7"S=C,f[A6`5=>[CcF?XRAO>[(cSCi"$/rc&9_DJO%h!<WK/"9\T(!!E3)#RL\?
"p4o.!sJT*'EeUC!sK5t1.P>.0.n_#-7^Vs,p<11#:1`B)]'+r$iUJV%i#m$,:=f_+t"lk.P!/+0.SP,
2b$VMDGVMh"9Ji7"pYJ=!X95G#6P#/!sSW-&.&OD":,DF%1j'`&eblg%Ljh"BP_O'C2%R#A6iegEcPc)
E-5r+ASZ'pAn#LmC27s=GAUr'AnGIZra$(>>?=d%;c-@e9hRuF6:CcA!_Z9dr`(s[='/X3>[1QA?s[8O
B52C-I"HciCiOfJEdMqLH&$T]C1h@'F)l>CFa%nGDf^,GGBnCTH$amcGpdl==^GHC?Wpc=<)-G$?X?Z1
?!pc4<*37';cR(0?=%>lMN4(!TTfA75*(nlP`h#cOHPlmO,]-WKS"i/Ko(_GNffHaMi*CRPa.JtPEh>q
QC=A;Un<Tf@olrJ@pNYQ?"7b[=]A=$r*BnDA78hQA7]=cBkV*mChmm:BkpmY@UrnR>$=p'92o8)?rU-3
?<0p(?!^`;<F&s8>A/DMT!,c9Yc=b+YHbI@YGnP/[_')WYGn7]OH5BXMNO:%Wj/q8WN*//[CEZV\?`9>
Xfnq9Z(-G^>$,-?>@:]??u9C[=]AL1@:ESN?t*MM?=@GYC2Rg$Ci=/#DJX(i!sJl4"9S`-!!!*"#$(d,
"U5#.!WrN+!W`B,!sAuN1GV*f8iS@O.kND/0.7qa,pOZ\*>fJ%$47.K$4IL]*?umV,9\9]0ekF<1cI0F
2a9i3BOsLN$3LD:#R(J;":#SF"9&B!"ono-"pbG?#n%1M$4RP:%M'!XC2@d(Chmj,D/*g.G&1Yp?YXRq
C2@d#?=RJ\ChI[1G'@S/A7fIdA7AqS?X-c7;cHXl:eXJP7n#j:84Q-B:fC@pr`:mX>@(ZC?=.,MA8#^q
EHQ\_Hua%CH[9j\F)uSXDes'#DfTl>F*;bJEc?)CF`hkOG'81LI<g0aH!"?[?=$oB?X6f;@q/S:9MJPo
<`iL0<D?@k?!^`FDgIJ)Pb"V?PDtWbOHYolN/j-eQ]R)ZLkgV6JV/Q.M2R=RP)bHYN00?jR$sG1Q'[u2
USsuXLiHg)?"RVS@U<AMCKst=<*EZ.?4:1M@UWVRA7]=cBkM$BAnl!pC2$p]@q/tV>@(H6='oB><DQ@h
>#\O.@9?B,<aB$8@;UI]U9(i;[&p:-X0At<Z`'q4[^`T?V4XBFrf0'tM3+'qVm!>,X/W80\@8uWZ`^@2
WN3A1WL83J=BJp;?=I2G?tiqL<)Qh(?t*JP@U<DI?t*YXAnbrcBPMF%D/=(l"U=r04p(uk!WiQ2!s&B%
!X&Q+!sJ`+!<E<+!sT8T3&*6W:e!>r0J>+80e4=g-R:)^()%8k$OR7N#mq4Y*$H^WrZiI51H%0N3]T#U
5t+U]@otl3#6G#6#R1M;"U5J?r;ls&r<<E1"pP58#Q>#0$W%0:$kEdW%1R&fC1q9rD/O62F`;)+?!UZH
D/!j*CM%!^Ao)6tG&_VEA7/eUB4tph@prbQ?!('+<)QOe8k;E@7n?-?85<&_='Aa.='8i-?lNZfAnPjs
F*2_XKme#YFb"^cEc,o@I!9OFE-)#!$?^Q9D/XT?G'.qL7!3ZtH$Xd^G^*@r?!:E;?!CK=@:!#59hS&V
>#nd1>ZFZs='f0=BP`'ZNKTa*U77C1P*;5tQ&^`dPECcXK7nr1K7X#S.>Nb:MiNgUMN3sgR$sP9R?s80
TVeTWQ%s9`='fQJAmAAD?tWqR<a&i/?O:%J@U3;M@qK=c!bc=^rapCfBP;$d@:E_T?sR#C?t!DH=A_dc
;,pS!?t!,7;d!F4?#"/)VkpK%]tCYNVQ-f+\@euE\[JiGURR[9OH#-RL5D"XS"H^\X/W,'['mEU\[&KD
XfS\.WMl26B38>I>[h#E>[CrM?;t!0>[LrI@U`PI@:3PR#%VC[AnG^irauOL!sJi2"9eo1"9&K*!s/B$
#lt)/!sJi0!!!*""A9+2)F5u04&&R@2_m0E2`ET@+"8K\)\ikn%LNUO$O[@U()e5@-6s`]0K2'T5X[h#
4[i+O@8p/g(^C*G$O$k?!sJl9#6Y)0"U4l0"pYA8"U>5;"pbMA$4."GrX<lV$#49jAnPgnDfB]5AR8eR
?"7YfCi4<2BP(XeChdm2DL684?smJWCM7?mA78hO>?=j);c?Le91VQD84cEI:fCCt>$G*4>$PBA@:Wt_
BPqa0F`qqWJ9l0LG'eFZDfBrHH?*q:Dg$8HEH?/<C2S*6IW]UJF)uJJGBe=VG^3P#>?G$5?!^lF>Z=En
:eabg=BSj:?<1$%>$bNGCMf,qO,fHrUS4->PEM<"PDtNbP`goYL5:S9K78?)Knb;9Ll%"JNg#ctS=?+A
R?j/-US=6IR"/mS<+'9GAm/DK@qAqL;d<a=?sR)F>$,'="(5YH?i=LNAS,ReAS#7Y@UWVO>@(cJ?<0fu
:ek$i=Bo*@?s$E->@(THCN5c@W3!54]t1>EXfo=K]!noQ[Blm-SXG\!N/3=JN0'-gSti*XWiE,)YI1sS
[Bd'B\$W*9ZC#rM=^59:@9QlC@UreK;,g_*@pr_O>?G)J?sd>K?XmMS@UinW@q0$P"U"o0"9Sf3"p>#+
!!!'!!Yb_A"Te`*!sA`3$k5?a0eY@N;,]g\2Ej;e1b0k%-RB`K'GCu`$OR4L&/#Zo*[)aQ-7CN*3Bfl)
6pX::@Ui/3>qlur!X/i5#Qk/6#71P9!<NE/#Q=o.!s/W."pP;:#5nc4#RLbC#RPB`BDuR"CN"$%B4td_
?"%DaE,ff7D/!WoCMIL%Dg$GCAR](W@qf^mBkCja?sQo<=&r9u:JOR]8H_[];,^Np=XdNZ?!guLAS#Og
CN=N=F)uMOI!':>F)uPNEH-#?H?!\3D/jQ=F`VVA$u^''E,KW4EH62GG^'.1DKfJo>$+p1>$tW:<``-p
:/Y+r>$kNB>ZF^$=Bf$DBRH&-NK0'fU84KNPEV9"QBI8oQB@)\MMR(BJUW'"LPCJ8LkgbBO-5iuR@9_9
QBIQ(S!TA-Q@3@G;IEpDA6`DI?=d>A;HmI5?XR2H%9d%D?XI)G?!h#MAS,KP@r5de@UNPK>ZtKB=BAHt
9M//c?!^iG@:3;A='T!:BP;mnWiE+uXh)?WXKo:I^qdFa\$WB:St2C7Lk^\?MiNm]RA-FJV5gQ!['@!J
\[SlQ]tLMHXg""8AQW#9>@1Q<>[M,N<)HUs>@h8N!af/<r`oe6?!CWB?t3\Ura>k<"pOo,!<r`,!rW*'
!WrQ0"U5/0!r`9A#mhPD4#&??3D3LN5Wq1m5s$bK0.\Il(`*nu%/pSd%1s6f(`sh?+t,$"4$5c!7mfR:
?<g,k:f](X"9J]/"pY86"U5;:!W`?*"U>56"pP/4rWN?+"U+f/!=0#1#A"0R@qKIlD/X6+BOkX`?sdP\
C2Ij(ChRNtAS,RiGAMSNCh7'cA7fIhCM@BlAn5CY>Zt94<Dl[h91VWH9h\>^<`W:'>[CfJA8#^mCMRg.
F)c);G'eXWC2.[*FEVA9F`i"Nrb2FGDf651F`D,4Ci+'-DfL#IG^+FTG5c[m>$"j5>[(N;=&i2u;-Qpu
<`W@/=C,-3=&W+%?>O2(Q&pr`Ng-*2W2#iJPF7r,Pa.MsNf&dRLkUJ4J;&W/LPL\@LPq+QQC!u-S<fJ1
T:q[;Q^<qa@8p33>[Ll<=^PKE>ZOm,;d0c;?sm8?>$>0:>[:ZFARo?N@jGSrAR8PG?"%#B>$Y6.;,'_X
='Aa1>?kK@>?b02=^c2_LSq6QW>)GD]"GJ\\@TJl[B?jAX/)J_SWAX,K.De<Ng#j&T:r3`X08_7\$i]P
[(sG_USk/nNH8H/<E<7-<EEF4Am\M8;c=-/?=I>L='Jg2>?kE?A,^!G@pi_S@q,TA!sAf+!rrE#!<*$%
!sA]/rWE-$4Tu<$-;$BQ.kNVJ;Hm*k69e"24#&HD-mKcQ(_R;c#mq.R&Jl9'*$$@T0/u$[8P2KC9jhO.
4[i(@-jp.V!XAi3!WiN0#mL;0"p+l0"pP54rWE-&E<ZXS#m^b?#6tM?A7f=_Ci*iuBP_<i>?bQHBP(jo
DJ`usBk_6pEH5i>F_P;l?t*YZCMI[%C2%?n@U<;C=]ea*;,0eZ9i"P_<)lt$>@1fLB52:%Df0N6Ec5f2
DKgMUDJ3p*DfTu<E-HSQE+*>hC1qI&DfBQ1DfTo<E,T]=rHU\QG^+L[=BS^,>$=s*;cQak8P2o[=&W%%
?!LH0<`W:*Ankt4Q]mAdN/sC#WMuSYQCFD4Q'IMoN/isZLkgb?LAluIM26nBN0'$ZQ'[u1R[]nDU7.:0
Q'dMR?;t&+=pJA7=^YZG>>K]H<`N:,>?k<4?".5L?!LWBA7K+YA7fFdBNSJ@=Bf!0<a&[-:J")R<EW:#
>$bTA='8U+>A.njN2NnXUSFckZ*h3T]=Ybd['-O3WhuSfTp(LoM2I7SPEhK%SYN6fXKf1A[^<<I_SNUX
Uo()bLhg=#<E3.+='Ap?A6^6P;,gIt>[UlA>?kKB?!^fC@:`t[An#7[ARtlE!<N?*quZfs!!3'#!s8Z0
"8r9H!soAB.nMlS-7LQ/8QfD!8k)HG5rLDH-R9o\*Yf7s%hB6c(B,-n*$d'f1-J*$;,0hbB4an&3C->+
*sVlM!WiH-!WrW3#8[IB!<N<)!sJf0!sAf4"U,#3"pkP@#m^G9((4VbB4GI_BP1jiB3nVC?<h2Q@qB:e
r+HRUG&M8@EFiH]?!^rOC23`b#&\-fA7/VErE')#<;o_p;Z9Z>='8^6@Us+dDfKf<F)l>BChma$GCFm]
Df'K9G'A+NG'O::DII9sCMs,i.;WsGG'7nHDfTu@F*MtSGBnL\='8R(<)Zdp:/XnZ7SZfT=AVgo<Ei],
=!(RNCM.L@S!T1pN00R$UoC;bR$O87R#m5bMMR:RN/R[m,`IY=Ll$nFOHGZgQ^aM8R\$7HQ^!VtQB[/E
@p3#@>[1Q>>[JU]?s6?,>$+s4>?k98?t3\U?X-oF?=%)NA7]CeBN8/9r_cp#=&rC%9LMNL:0(1h;cm@5
>#n[(?#FP$OfYa`U7e<`XKB+R_nN^g[Bus4V5']YVP'HGOHPltQ^=/1TW,#pY-G@=Z*L[H]<A0/Uo(,\
Jo4su=BSd3?!RnGA7Se;<**((>[Ui>?N+@M?=$oE@:*AOA7B%[AS(rE!W`<%!WiB(!W2p%!WW3%!WrQ'
!\OTb$P"d`4=_[&/3#pf?Y3P<8kDT;/gV_b*[2jM)Aa,'(E"&,)BBtO0f(dX:]=3#<b#T34uP>b8iRas
"9SQ*rriQ0"pYA7!<*$-!s8]0!X&]4#6kA8r<<H2#R:VA$O]+/@q0+^A7fLdARo+P?tEt`?Xm>IBP:si
BPD@,D/sZ7AR/MF>[CrRC2@d+E,99%A78_H=^"s2=&i4!=T2G0>$YHCAnGdrF*7J'%<QW.C2.BsG^FaW
Dej1gEt3&.GBnFLBPM@#Df0]@DuO_cDf0K3C2J!3EH6)=F*7h6<)Z^q<`E(!r_G7B92\kn<_lOd9j(V"
<``F3CM%XDS!oM$O-H!#Tr4c`SXQ.CSWo(jN/<CQOH,9WMuJbVNK&jSO-,WoS=?%>T:qpEP)tcjQ^!#>
?sQo:r`U@A>[UrK=B/C(=^,'<?s?oC?X@#D>?4m5?<piF?XZ*-Al_r1<)cap<`N'q9MA8`=&i!n9Mf#$
=BJU*?uB_*PchBjUnXT^XK8nJbJCZl\@JoGVk]r^WMuYeSGep>SXuIJW3!&(ZaI9L[^ruMTVA0RVQ#i0
BjOe>>$,!0>@(iM=&W'u=Bo'=@9d,G?<pcA>ZY*9?X@&G>mt+L@fcZ2!WiB(!W`?#!<*&u!<30"!]:,j
#nnm_5V+0-.5<qS<FTNA;+sbY3%H7"+X/6[+W_RA+!;[L,9nKe2)Rg"<`iC,A7.tgr\FdA8hLnc"9JZ(
!sAZ/"pYD2!YPS;"pP/5"pP56"9S]-"pP57#%RlA#74gG?"72J@prbP>#S^:@q]Ia@:NqaB4POaC2\*)
EcZ22?<^T:?=IM[Bl.d/EG]K*An,7W?<g`=>$+p3>?Y<=?t*_]CiX`EH$=CQF)G`-AnYq(I!]mPC2S38
F(TIlFolGoD#S2YDf'B2DK'N5DfK]1D>nDQDan\aEH?7u:.nJ\:fC1c9LqNF<E31%;GU1j=^"j(<*<[D
@s!ElR$3SjOHQ!'U84Z`TUqjJR?<MgNfB*]OcPNaPECukOT(:`PEhW0S=?(DT9YM"O,fKmP'_"P?!(-3
=^"X-?XR8D<rH,2?<gT;>$PB@?=.#A>$Y?<(1(?S?X[GD;,'n_:K(1g:ImiH<*!+#r_Zm$?=$f9<``aD
@ss]O\>c9sS>3*cZb=N"\$W][]<nW6U8FlcVl$,YTUhXFTV86^XK8b9[C3Z^]s+9)Tq%gSVN6(<?;jp/
=BeX,?=@8B<)lq#=C#*8?<^b8>m4P?='Ag3!*fG.!a]8BqZ$TsqZ-WsrrW0"9EG:u!<E6'"pkGK/58G_
-6jZ_2*jo;B4tOM<`)CJ/h&4t-mpDi+sJ?Z,UXui/i#FO;I*R9@V]IH3&<<B2*XPY'F4gC!X&Q,!<iB+
qZ6p)!s8Z."TAQ-"pG&1"TJT'"o\]+?iFOq?sd5G>[(<5?"7AXCL1FaD.mTn?s[PgDeO34EG&W`>?P3?
AS5aoDfKo@EGfW-BP(a_?X@&G?=3\<2.0p+BPVX6I"$KkG'%_?C1q6nCNb#OF)c8DG&hP1DK'f?D/O6.
B5;L)Ci+$(BkqR'B4l#ZCH??OE,KQ49MJ;Z:ese\8P)EC:/t@u>>.gp>$5!-:/+i$An6%8QC!_pMMmR^
St2IIV59fVS"#\,Pl?jJOHZ"0OuJScOHP]gQ'n24SXZ.=S<o:pN/Wj`Q&Kp%?XdGK>Zk*$=^,BB=^#$4
<*<X8=BSd-=B\s8=&scS>?Y39?=-uD?W'm&;GU+d:eOGN853&b=BA6p<aB$;>?4U%A8#V,R'sH(Un4$H
V5gf.^VdUi[_BSm\?Mj0W2?JjV4jTUStDdOUoCN&[C3KR_S*@WSt2C@USXN<H=gDf?!CH59NPA*?W^E5
=B/I1>?G'4=&rF,>?2)2=]nj/>?tN=>@-q%"p"`+!WW3%rW>ps!<<0,#R2+q:I-T[+W_ma5"J@MAS#.O
=]S0`4>\iI/M&P,.4Znp-S6o*3(-YKB4Ygo@o,?C/hJ\64#nDs#6b;8"9S]*!WrZ3!WiK'!X&]0!WrQ(
!W`B+703Mm!s/N+"U+u1#%(kPA7/YO?X6l<?!q;SC2dZqCi!m$An,=dFE;,8Df95q?<gW;@:Ee\CMn'2
F*)JEEGo`2BkM&WAMn(4AnPgnDfKuIIXluuH?F1EBkLsgBPi'9I;sCRG&_;7CMe'4DesB0C1qL&CM@X'
Ch@BtrG>#AE,TW2E,KE+9MeYb:eakb8P)EH;-$\#?W'j*=^#$0;GpV.BkMX>R$`tnM2R@YT:qmNU84Z^
TUhRBR@'G0Q'[u/Q^7W<0U\5oR[fq>S!on:QBR8dNJis_O,.Xf?!^uI>?+a*>$PB;<EiR);d*F.<Erg5
<E24b=^#!5>$P99?!gl?=\hpp;GTtb:In#E92AVk>$Os*=Bf*=>#eR-Bl.U7PdIs$U7.[DT;f'#[_'/Y
[C-"G4M853Z*14.WMH5\TVJE^XKJh=[(!][]="i?URdjJVPTf0F^SQc@:*,?<``I1>?P67=BA^3=BA[1
=]>H(=BPQ($X-b>>Zk?8<)inu!r`0"!W)j$!W`B,!!36$"!n!L!<WW:#8e^Y6n]i/+<i?t6qL9\@:WeO
?!16+9h7Q54$5P]r\PTR5!28.=D)>aD/Wl\6oHbO-SdP=2\?Z,"pY>8r;m*)"Tnf/rW30("9JZ("8W'"
!sJT*2['9b!b#SMB4Yaf?s[/D>@h>L@VBIkCMms&BObXiF_kf4D/Nlm?X?r@?t!PVBP_U*EH?;GFoHD?
EH,o6Ci!s-DfKf=Fa8CbJqJZ&H#db:Bk:jfC2eK@IW]^PEcuD?CMn02F)Gu;DJj9*BkqU(9l4`bD/=!*
DK'N0Ci!s*CM$@=;H-Op<DZ@_92&>c:fCFr=BJg0=B8C%>@qD\H[_9LP)G'RNg6*,T:MRHVP^2`T:V[H
St2FDTV8(XTE_-]St;LCR/WK_Q'.,bM2[CSNfSd/CL7!F&RAO@=B]!6>ZY-4='/R*<EWUS?!UW;=]ed0
>$P99>$>09>>nBs<)lmt;bp%Z7nHWY;H$Ut=BJp9?!:<3>\e%jJWR.GZ)+"^R[^=^ZE^dI['[0GZ+%H\
]=PDX\$`]PYHY=@Ye%W]\$ro_]X+iAUnXHPU8=ZSH?EY(?XR>K>ub!2=C,3=?<^T8r`9e<>?P-6>$"X)
='Aa.=]np2<D`_rquZcr!s/K'!W<'I"9S`-!<N?1#7;@m7RK![+X/*\3'p)*:KLb/@pW>E?sR#=;c6Rm
r_k7B<*E:/Bl%X"D/Noa7Q<(R.Om,.3\_6\"pP58"p4r/!X&Q.!sA`/"9&?&!X/E'r;m$'!s8E'2$*eg
AS5ahAmo"N?!^iL@U*/JAn5=_CMINoB5;[(BQJ!+AR].U>[(QD@V'1eCMn*4FEVg*FT->7Ec?)CF`hkP
H@10mJqAN"F`M;4B4PRfCiafHJ9Z9YF)c2;C2@s2EG]Z7E,TW*.;3F0C2Ia'DJEs*Ec>i.Bk_6qCi<-J
<)umq;GBeV9i"bf:JOef;GU<l=<1IG?"[MXH\%NPQApf\N09X#St)CETr"QYTq@sKrgGO3T:V^KTq\6T
T:VUBQ^*l%P`h)cM27"INfK*HE,/ie>[CW==B8O1>Zk-2>?P06"]A?#=BSo.>!,hf>@1W=='/R+=^,*.
<)m"!<)H@_8kMfW;c?Fg<)ZXr>[:Q9=^>iTC4hJHZ)sdjS=6(NYHtOB\$EF@ZOa=J[_'/\['mEP\?iQO
\@2=H+LnkhZE'jsSsu7BUSEouF(/H\>[:]=<)m1,?<UWA?!J1M<*!($='A^1>?4[*>Zt-.=B8I&<`oG#
!rDru!Wi9#!s/K'!r`9j!WiK3"UH(i69d=Y,9\-X2EaAr8kr;j?s[/C>$5$4<E<=+=^PKFA8#OgC2%Bo
B3n\75Vju@-7LW)3[GOS"pP26"9e]*"pG,4!WrQ-rr`0##Qk,1!s/N+"U+Z'3Wil&An5=V?X-c9<aK<H
@:3YXA7]ImC1V!_BQe3(EGTH&@UieM>[CiI@qB7cCMe'3F`hbGFE;PGrcKZ5G^Fa_I"$QqIt)onF`;23
AnGR`BPhm6H\-KcF`DA=CL_."EGoZ2D%gc)CLh*oDJa6.DJX*&D/aE2Chir_/o,6!;,^=f9i4PS7Rg3R
<E2pr<E)q">$"g0;I!sJBmkT"R[&tkLl77YR[fk:rgj%\!hc0YrgOFeQ^F/,R$jA2R[BG0R$X*;Or9=>
L5(VGN/E@3D/3K^>?=s0<`)t)>Zb!-<**4-=A`(#>$P6:>?G!.>$P?=>$4p.=Bem*;H-Ok:/=SU7RTsK
<)ldo;c6Os?X6f:;-RmNC4VAGY,A+dR@KhFY-bUDZaI0HZa$^9Z*LX?YH\#/-Esh_[C3WU]"5D]['-O1
TpqR@Q^j\BKR.]K>[1E:>ZOX#>?Y35*Eu]N?!(!*=Bes4>?Y-0<**7+=BS^+<`<!u!!!)q!<*!`!!33&
!WiH+!Wi?($j[+X,=4RM0-_P^,qq;C6UaO?:fLM"=]JL%;H-Ih:JXee>$>9A@q9=fA6r/+69-\Gr[.t'
0K'd`&dAIArW<<*!!3<,!ser1!WrQ,!!36$!s&N,r;ls%rWE$!0k"X+@pieVBk:OS@:`qS?X[JWBl7d&
A78h[G&:o3C2@Kl@q&bL>[CiI@qK@eCi4:mEsQc,F*)JGGBS61HMr43H@1$aG&_A6BOtacA8#k'C3tGO
F)l/9CM.0oDf?#!D/F$&DJX-+D>nKoD/=!&CMRTuD/3fsB52C(:Jt.g:/Y"m;GBna<E2po;H-Xu>$>!/
<`EF>AnZXDR$j/"M2I4MOdV`-S!o\2R$jJ8S=lLHSX>b0R?j/*Q^F20R[oq5Q'.;lNerFEN/`[LKk>4;
>?Y0/<`W0s=Bg5Y<EE7&<a&U-=^#-=?X-c8<`iI(=Bo$2<E<70>>\@";G^4g<`D^`:K(4j;,L4j<F&p;
=&`+(CM@X=MlNqVT:ML@StrHlZ*L[D\[8`L['Ha7X0&G#Wi`G,Yd(OB[^N`U[Bm0BXJMPXS=>k7TV6OV
EaDsS<EW@#:K@Bs"Bo#2='PZ+(0=^D>$"^)<`iC$;d*:(<)ln$=TAL)r;cj!rVus#!WE'#!<N?%"9&<d
":GJ@*?@L20J+Uq+<rEp4?Pqs77^$J;cZgp<Dudh8P;lW;cQn'?X[AU@ocQ'76E@V,UOoe.P<Lb'bLQN
"8r9$!!iW.!s/N+!WiK&!WiK."Si*!"8i3$"9X/~>

%%EndBinary
grestore
np
grestore
18 271.399 mo
594 271.399 li
594 247.904 li
18 247.904 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
18 271.399 mo
594 271.399 li
594 247.904 li
18 247.904 li
cp
gsave
grestore
/535434692.0 
<<
/ID /535434692.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 20 45 ] 
/XStep 20 
/YStep 45 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 0 mo
20 0 li
20 45 li
0 45 li
cp
false sop
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[20 0 0 -45 -16.817 563.005 ]ct
snap_to_device
<<
/T 1
/W 20 
/H 45 
/M[20 0 0 -45 0 45 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~J,g]g3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^754C\_ML>q_P[5Q~>
/LZWDecode filter
<~J,g]g3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^754C>!.+>q_P[5Q~>
/LZWDecode filter
<~J,g]g3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^754C:Rl`>q_P[5Q~>
/LZWDecode filter
<~J,g]g3$]7K#D>EP:q1$o*=mro@So+\<\5,H7Uo<*jE<[.O@Wn[3@'nb-^754DJ<Xi>q_P[5Q~>
/LZWDecode filter
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/535434692.0 /Pattern get_res
[.757895 0 0 -.757895 10.4211 271.399 ]make_pattern set_pattern
f
2 vmreclaim
gsave
18 271.399 mo
594 271.399 li
594 247.904 li
18 247.904 li
18 271.399 li
clp
18 271.431 mo
25 271.431 li
25 247.431 li
18 247.431 li
cp
false sop
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[7 0 0 24 1.18298 291.575 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 31 
/M[9 0 0 -31 0 31 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!/cYkMMd:KMM_B6!!!!!!!%lV!!!!!!!!"V!!!!!!!!!!M?!VV!!!!!!/^aV!!!!!!!%lV!!!!!!!!"V
!!!!!!!!!!M?!VV!!!!!!/^aV!!!!!!!%lV!!!!!!!!"V!!!!!!!!!!M?!VV!!!!!!/^aV!!!!!!!%lV
!!!!!!!!"V!!!!!!!!!!M?!VV!!!!!!/^aV!!!!!!!%lV!!!!!!!!"V!!!!!!!!!!M?!VV!!!!!!/^aV
!!!!!!!%lV!!!!!!!!"V!!!!!!!!!!M?!VV!!!!!!/^aV!!!!!!!%lV!!!!!!!!"V!!!!!!!!!!M?!VV
!!!!!!/^aV!!!!!!!%lV!!!!!!!!!~>
<~!-E=)FEDVHFE@K_!!!!!!!%*@!!!!!!!!"@!!!!!!!!!!F8u:@!!!!!!-A2@!!!!!!!%*@!!!!!!!!"@
!!!!!!!!!!F8u:@!!!!!!-A2@!!!!!!!%*@!!!!!!!!"@!!!!!!!!!!F8u:@!!!!!!-A2@!!!!!!!%*@
!!!!!!!!"@!!!!!!!!!!F8u:@!!!!!!-A2@!!!!!!!%*@!!!!!!!!"@!!!!!!!!!!F8u:@!!!!!!-A2@
!!!!!!!%*@!!!!!!!!"@!!!!!!!!!!F8u:@!!!!!!-A2@!!!!!!!%*@!!!!!!!!"@!!!!!!!!!!F8u:@
!!!!!!-A2@!!!!!!!%*@!!!!!!!!!~>
<~!-<4&F)uDDF)q<]!!!!!!!%'?!!!!!!!!"?!!!!!!!!!!ErZ1?!!!!!!-8,?!!!!!!!%'?!!!!!!!!"?
!!!!!!!!!!ErZ1?!!!!!!-8,?!!!!!!!%'?!!!!!!!!"?!!!!!!!!!!ErZ1?!!!!!!-8,?!!!!!!!%'?
!!!!!!!!"?!!!!!!!!!!ErZ1?!!!!!!-8,?!!!!!!!%'?!!!!!!!!"?!!!!!!!!!!ErZ1?!!!!!!-8,?
!!!!!!!%'?!!!!!!!!"?!!!!!!!!!!ErZ1?!!!!!!-8,?!!!!!!!%'?!!!!!!!!"?!!!!!!!!!!ErZ1?
!!!!!!-8,?!!!!!!!%'?!!!!!!!!!~>
<~!#cao)B'M4)B&SU!!!!!!!!o;!!!!!!!!!;!!!!!!!!!!)?9a;!!!!!!#bh;!!!!!!!!o;!!!!!!!!!;
!!!!!!!!!!)?9a;!!!!!!#bh;!!!!!!!!o;!!!!!!!!!;!!!!!!!!!!)?9a;!!!!!!#bh;!!!!!!!!o;
!!!!!!!!!;!!!!!!!!!!)?9a;!!!!!!#bh;!!!!!!!!o;!!!!!!!!!;!!!!!!!!!!)?9a;!!!!!!#bh;
!!!!!!!!o;!!!!!!!!!;!!!!!!!!!!)?9a;!!!!!!#bh;!!!!!!!!o;!!!!!!!!!;!!!!!!!!!!)?9a;
!!!!!!#bh;!!!!!!!!o;!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
18 271.399 mo
96.0632 271.399 li
96.0632 270.641 li
18 270.641 li
cp
.750271 .679713 .654902 .901945 cmyk
f
19 270.431 mo
96 270.431 li
96 247.431 li
19 247.431 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[77 0 0 23 2.18298 292.575 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 102 
/H 31 
/M[102 0 0 -31 0 31 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 102 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 102 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 102 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 102 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
S;R@Ik]O:U!!(>ec?'$d[N"BKS,`QiMjsbIFm8t5!!%,g!6bEC)n5n0!!%qL!<)ruFdrF3FR0"4!!!te
!6P9AMn/oK!!%/8!;lfsFIW=2)t!^0!!%r-!6>-?Fh@_5!!%,9!;ZZq)k6m.Msp_K!!%/n!6,!=FM7b4
!!!t7!;HNoMjsbIFn,O5!!%,o!5nj;)o)I0!!%qT!;6BmFdrF3FS#R4!!!tm!5\^9Mo#JK!!%/@!;$6k
FIW=2)tj90!!%r5!5JR7Fi4:5!!%,A!:g*i)k6m.Ms(/K!!%/f!6tQEFLD24!!!t/!!*(XS,`P3l2\-j
!-HTgbQ%V^\,bUj!/mHLrVuq@S,`P2li=9j!#sAeaoDF"\cCaj!-Ot8qu?_=S,`O.mJsEj!/oA-a8c3_
]E$mj!-Ft9q>^L7S,`PIn,TQj!-Qln`W-!\^&[$j!#qa7p](;PS,`P3nc5]j!-Hlo_uKcV^]<0j!/m`T
p&G)8S,`P2oDkij!#sYm_>jRo_>r<j!-P7@oDel5S,`O.p&Luj!/oY5^]4@W_uSHj!-G7Anc/Y/S,`PI
kQ&!j!-QTfc2[id[K,Ij!#qI/!<A%J!!%0,!4)Y*FO:*4!!!tJ!9F1\Mk:"K!!%/3!!%--!3lM()q+f0
!!%qg!94%ZFeJg5!!%,2!!!u+!3ZA&Mq%gK!!%/S!9!nXFJAj4!!!t.!!%rH!3H5$Fk6W5!!%,T!8dbV
)l3Q0!!%qI!!%04!36)"FP-Z4!!!tR!8RVTMl-RK!!%/3!!%-5!3#qu)qtA0!!%qo!8@JRFf>B5!!%,2
!!!u3!2fesMqnBK!!%/[!8.>PFK5E4!!!t.!!%r@!4;e,FjC'5!!%,L!9X=^)h7~>

%%EndBinary
grestore
np
.55761 .472114 .467414 .125368 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 5052 29 <00030050ffd505e805e5000f001b001c008a402c8705c700c701c302c808
c90a064308153a0f031b3a07091c021c1c0b1231031a1e18310b191d1ed8
216a66182b2b4ef44ded4e10f64ded12392f003f3fed3fed313043794032
001a0d26012509250526160e18320014001232011a081832001006123201
170c1532011302153201190a1b320011041b32002b2b2b2b012b2b2b2b2b
2b2b2b81005d001716111007022120272611103712210012351000232200
1114122103049bbb92a7c4fe95feadc2ad94be0174011bebfef1ebe4fee0
f701150e05e5fac3fed0feb7daff00e0d8014a012ad40110faa20179f501
03013cfec7fecff4feb1055e>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/O 29 def
end
SBVPMX+Helvetica /Encoding get
dup 79 /O put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period 16{/.notdef}rp /question /.notdef /A 2{/.notdef}rp /D /.notdef /F /.notdef /H /I 4{/.notdef}rp /N /O 2{/.notdef}rp /R /S /T /.notdef /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf26.3368 263.82 mo(Overview)[9.43427 6.06316 6.74223 4.03797 6.06316 2.69204 6.74223 0 ]xsh96 271.431 mo
103 271.431 li
103 247.431 li
96 247.431 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[7 0 0 24 79.183 291.575 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 31 
/M[9 0 0 -31 0 31 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!/cYkMMd:KMM_B6!!!!!!!%lV!!!!!!!!"V!!!!!!!!!!M?!VV!!!!!!/^aV!!!!!!!%lV!!!!!!!!"V
!!!!!!!!!!M?!VV!!!!!!/^aV!!!!!!!%lV!!!!!!!!"V!!!!!!!!!!M?!VV!!!!!!/^aV!!!!!!!%lV
!!!!!!!!"V!!!!!!!!!!M?!VV!!!!!!/^aV!!!!!!!%lV!!!!!!!!"V!!!!!!!!!!M?!VV!!!!!!/^aV
!!!!!!!%lV!!!!!!!!"V!!!!!!!!!!M?!VV!!!!!!/^aV!!!!!!!%lV!!!!!!!!"V!!!!!!!!!!M?!VV
!!!!!!/^aV!!!!!!!%lV!!!!!!!!!~>
<~!-E=)FEDVHFE@K_!!!!!!!%*@!!!!!!!!"@!!!!!!!!!!F8u:@!!!!!!-A2@!!!!!!!%*@!!!!!!!!"@
!!!!!!!!!!F8u:@!!!!!!-A2@!!!!!!!%*@!!!!!!!!"@!!!!!!!!!!F8u:@!!!!!!-A2@!!!!!!!%*@
!!!!!!!!"@!!!!!!!!!!F8u:@!!!!!!-A2@!!!!!!!%*@!!!!!!!!"@!!!!!!!!!!F8u:@!!!!!!-A2@
!!!!!!!%*@!!!!!!!!"@!!!!!!!!!!F8u:@!!!!!!-A2@!!!!!!!%*@!!!!!!!!"@!!!!!!!!!!F8u:@
!!!!!!-A2@!!!!!!!%*@!!!!!!!!!~>
<~!-<4&F)uDDF)q<]!!!!!!!%'?!!!!!!!!"?!!!!!!!!!!ErZ1?!!!!!!-8,?!!!!!!!%'?!!!!!!!!"?
!!!!!!!!!!ErZ1?!!!!!!-8,?!!!!!!!%'?!!!!!!!!"?!!!!!!!!!!ErZ1?!!!!!!-8,?!!!!!!!%'?
!!!!!!!!"?!!!!!!!!!!ErZ1?!!!!!!-8,?!!!!!!!%'?!!!!!!!!"?!!!!!!!!!!ErZ1?!!!!!!-8,?
!!!!!!!%'?!!!!!!!!"?!!!!!!!!!!ErZ1?!!!!!!-8,?!!!!!!!%'?!!!!!!!!"?!!!!!!!!!!ErZ1?
!!!!!!-8,?!!!!!!!%'?!!!!!!!!!~>
<~!#cao)B'M4)B&SU!!!!!!!!o;!!!!!!!!!;!!!!!!!!!!)?9a;!!!!!!#bh;!!!!!!!!o;!!!!!!!!!;
!!!!!!!!!!)?9a;!!!!!!#bh;!!!!!!!!o;!!!!!!!!!;!!!!!!!!!!)?9a;!!!!!!#bh;!!!!!!!!o;
!!!!!!!!!;!!!!!!!!!!)?9a;!!!!!!#bh;!!!!!!!!o;!!!!!!!!!;!!!!!!!!!!)?9a;!!!!!!#bh;
!!!!!!!!o;!!!!!!!!!;!!!!!!!!!!)?9a;!!!!!!#bh;!!!!!!!!o;!!!!!!!!!;!!!!!!!!!!)?9a;
!!!!!!#bh;!!!!!!!!o;!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
96.0632 271.399 mo
175.642 271.399 li
175.642 270.641 li
96.0632 270.641 li
cp
.750271 .679713 .654902 .901945 cmyk
f
97 270.431 mo
176 270.431 li
176 247.431 li
97 247.431 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[79 0 0 23 80.183 292.575 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 105 
/H 31 
/M[105 0 0 -31 0 31 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 105 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 105 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 105 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 105 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
R>V%FlZKCR!!(Pk`H2([^DkoHVuZ>f!/m6F!-S2>ScAb4joDag!#s8baoDF"\cCXg!-P(;p&G)7R/d4+
pAgrg!/oe9\GuVPb5fig!-GUKjT#9"T)e`g!/m6F!-Ri4VuQg>g]5%g!#roXe,TK,YQ3qg!-O_1!<@50
!!!u*!3H5$Mq7sH!!%/X!8.>PFK5E1!!!t+!!%rV!1X#hFm&h2!!%,h!6>-?)nZ1-!!%qS!;$6kFdW40
FSPp1!!!tu!4Mq.Mp27H!!%/N!94%ZFI<+/)s[L-!!%r-!6"p<Fh[q2!!%,?!:^$h)jp[+Mu3RH!!%0(
!42_+FO1$1!!!tL!8mhWMkg@H!!%/0!!%-8!2BMo)rUe-!!%r#!7(WFFgV52!!%,5!;c`r)jp[+Mt-kH
!!%/s!58F5FN+=1!!!tB!9sOaMjaVH!-O\0!-IT.XT/>?f)W\g!/nYnf`2"pWrVSg!-FV/!#tn;S,`PI
kQ%mg!-Q]ia8c3^]E$dg!#qd8oDelLR/d50q#I)g!-I6$[f?CIblGug!/n;dirB(%R/d5/lN"*g!#sGg
`;fmr^B!!g!-P7@nGiQ2R/d4+quE;g!/ot>ZiC)KciD2g!-GdPhuE`rU]C)g!/m6F!-S#9UAt:9i;gCg
!#s)]cN!s'[/f:g!-On6qZ$V<R/d4+nc5Tg!/oV4^&S.U`W4Kg!-GFFl2Uf'RK*?gMjXPFFmT12!!%,m
!5ed:)o2O-!!%qX!:KmfFdW40FT)91!!!u%!3uS)Mp_UH!!%/S!8[\UFJ]'1!!!t+!!%rQ!20AmFlNJ2
!!%,c!6kKD)n,h-!!%qF!!%0-!3ZA&FO^B1!!!tQ!8@JRMl?^H!!%/0!!%-=!1j/j)h7~>

%%EndBinary
grestore
np
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf104.4 263.82 mo(Your trips)[8.08835 6.74223 6.74223 4.19562 3.0437 3.37111 4.03798 2.69205 6.74222 0 ]xsh175.642 271.399 mo
290.084 271.399 li
290.084 270.641 li
175.642 270.641 li
cp
.750271 .679713 .654902 .901945 cmyk
f
176 270.431 mo
290 270.431 li
290 247.431 li
176 247.431 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[114 0 0 23 159.183 292.575 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 151 
/H 31 
/M[151 0 0 -31 0 31 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 151 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 151 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 151 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 151 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
JrAoP!!&I1dWGNiZ?3["!!(.\U)W%kM?!X7q>c*InGiQ3P5s89!-G7A_#OHS_Z6Y9!/oS3OT5B(o)O@B
p](;9Mu_c9!#q^6a8c3u]E#/9!-QckQiI,.li;V;!WW3>K`L99!/mBJcN!rf[/dZ9!-HHcT)\j1jT(&9
!/pdUJcP3=!-OS-ec5\lXoQ09!#roXV>pUSh>iQ9!-Ru8JcPHD!-Eeml2Uf'RK1b9!/n,_\c;_QaoJ.9
!-I3#M?!Vqq>c*InGiQIP5s89!-P=B_#OIW_Z6Y9!#sYmOT5B>o)O@Bp](;:Mu_c9!-G":a8c2Z]E#/9
!/o>,QiI,/li;V;!WW4BK`L99!#qI/cN!s'[/dZ9!-QNdT)\k5jT(&9!#tk:JcP3=!/m-Cec5\mXoQ09
!-H3\V>pT8h>iQ9!/pONJcPHD!-Nknl2Ug+RK1b9!#r3D\c;_gaoJ.9!-R9$M?!Wuq>c*InGiP.P5s89
!/mlX_#OIX_Z6Y9!-HrqOT5A#o)O@Bp](;PMu_c9!-P(;a8c3^]E#/9!#sDfQiI,Eli;V;!WW4CK`L99
!-Fb3cN!qa[/dZ9!/o)%T)\k6jT(&9!-J/>JcP3=!#q4(ec5].XoQ09!-Q9]V>pU<h>iQ9!#tV3JcPHD
!/lF/l2Ug,RK1b9!-GLH\c;^LaoJ.9!/oh:M?!X!q>c*InGiQ2P5s89!#qs=_#OIn_Z6Y9!-R#rOT5B'
o)O@Bp](:5Mu_c9!/mWQa8c3_]E#/9!-H]jQiI+*li;V;!WW4YK`L99!-Oh4cN!re[/dZ9!#s/_T)\kL
jT(&9!-S5?JcP3=!-FM,ec5[hXoQ09!/nhsV>pU=h>iQ9!-Io7JcPHD!#pLil2UgBRK1b9!-PRI\c;_P
aoJ.9!#sntM?!X7q>c*InGiQ3P5s89!-G7A_#OHS_Z6Y9!/oS3OT5B(o)O@Bp](;9Mu_c9!#q^6a8c3u
]E#/9!-QckQiI,.li;V;!WW3>J,~>

%%EndBinary
grestore
np
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf183.221 263.82 mo(Fellow travellers)[7.40907 6.74223 2.69205 2.69205 6.74223 9.33727 3.0437 3.37111 4.03798 6.74222 6.06317 6.74222 2.69205 2.69205 6.74222 4.03796 0 ]xsh290 271.431 mo
297 271.431 li
297 247.431 li
290 247.431 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[7 0 0 24 273.183 291.575 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 31 
/M[9 0 0 -31 0 31 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!5H:`^V@Ou^V9aK!!!!!!!'b6!!!!!!!!#6!!!!!!!!!!^An66!!!!!!5AL6!!!!!!!'b6!!!!!!!!#6
!!!!!!!!!!^An66!!!!!!5AL6!!!!!!!'b6!!!!!!!!#6!!!!!!!!!!^An66!!!!!!5AL6!!!!!!!'b6
!!!!!!!!#6!!!!!!!!!!^An66!!!!!!5AL6!!!!!!!'b6!!!!!!!!#6!!!!!!!!!!^An66!!!!!!5AL6
!!!!!!!'b6!!!!!!!!#6!!!!!!!!!!^An66!!!!!!5AL6!!!!!!!'b6!!!!!!!!#6!!!!!!!!!!^An66
!!!!!!5AL6!!!!!!!'b6!!!!!!!!!~>
<~!3NB*Xf\_-XfVR'!!!!!!!',$!!!!!!!!#$!!!!!!!!!!XT/>$!!!!!!3H5$!!!!!!!',$!!!!!!!!#$
!!!!!!!!!!XT/>$!!!!!!3H5$!!!!!!!',$!!!!!!!!#$!!!!!!!!!!XT/>$!!!!!!3H5$!!!!!!!',$
!!!!!!!!#$!!!!!!!!!!XT/>$!!!!!!3H5$!!!!!!!',$!!!!!!!!#$!!!!!!!!!!XT/>$!!!!!!3H5$
!!!!!!!',$!!!!!!!!#$!!!!!!!!!!XT/>$!!!!!!3H5$!!!!!!!',$!!!!!!!!#$!!!!!!!!!!XT/>$
!!!!!!3H5$!!!!!!!',$!!!!!!!!!~>
<~!3<0$X/i;%X/c4#!!!!!!!'&"!!!!!!!!#"!!!!!!!!!!WrN,"!!!!!!36)"!!!!!!!'&"!!!!!!!!#"
!!!!!!!!!!WrN,"!!!!!!36)"!!!!!!!'&"!!!!!!!!#"!!!!!!!!!!WrN,"!!!!!!36)"!!!!!!!'&"
!!!!!!!!#"!!!!!!!!!!WrN,"!!!!!!36)"!!!!!!!'&"!!!!!!!!#"!!!!!!!!!!WrN,"!!!!!!36)"
!!!!!!!'&"!!!!!!!!#"!!!!!!!!!!WrN,"!!!!!!36)"!!!!!!!'&"!!!!!!!!#"!!!!!!!!!!WrN,"
!!!!!!36)"!!!!!!!'&"!!!!!!!!!~>
<~!9WG+k2tggk2lXD!!!!!!!)-]!!!!!!!!#]!!!!!!!!!!jo>A]!!!!!!9O7]!!!!!!!)-]!!!!!!!!#]
!!!!!!!!!!jo>A]!!!!!!9O7]!!!!!!!)-]!!!!!!!!#]!!!!!!!!!!jo>A]!!!!!!9O7]!!!!!!!)-]
!!!!!!!!#]!!!!!!!!!!jo>A]!!!!!!9O7]!!!!!!!)-]!!!!!!!!#]!!!!!!!!!!jo>A]!!!!!!9O7]
!!!!!!!)-]!!!!!!!!#]!!!!!!!!!!jo>A]!!!!!!9O7]!!!!!!!)-]!!!!!!!!#]!!!!!!!!!!jo>A]
!!!!!!9O7]!!!!!!!)-]!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
291 271.431 mo
383 271.431 li
383 247.431 li
291 247.431 li
cp
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[92 0 0 24 274.183 291.575 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 122 
/H 31 
/M[122 0 0 -31 0 31 ]
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 122 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
Lq`oir2ks\!!)boP,eQ_o&c;$li<OU!5I^tT`>(pirGqV!3=rVWrN.^f`85V!5I"`[/^3/cN(NV!3=6B
^An8r`;mgV!5H;LaT)=C])^+V!3<O.df9C1YlNDV!5GT8h#IGWVZ>]V!3;gok5YMESH/!V!5Fm$nGiQk
P5t:V!3;+[qZ$WYM#[PV^PDjiXo8<Y!!'(q!0@0\k4AY=!!'e&!1ElfXm,nY!!'(]!2KSpk266=!!'ci
!!'/!!0$sYX7lUW!!)0P!1*Zc^[2#k!!'.b!20AmX5a2W!!)0<!36)"^Y&Uk!!'.N!4;e,X3UdW!!)0(
!5AL6^Vp2k!!'.:!6G3@X1JAW!!)/i!7LoJ^Tddk!!'.&!8RVTX/>sW!!)/U!9X=^^RYAk!!'-g!:^$h
X-3PW!!)/A!;c`r^PMpk!3M%W!3?)!MZ<b>q#HKV!5J.+PlLfdmf8dV!3>AbT)\lRjT)(V!5IFlW;lq#
L]@FUquD]V!9X"UOoPKsnc5!V!3PVgS,`PikQ%:V!9W;AV>pV2h>jSV!3OoSYQ+[(e,ZlV!9VT-\c;`F
aoK0V!3O3?_uKe<^];IV!9Ulnc2[jZ[K+bV!3NL+fDkoPX8q&V!9U0ZiW&tnU&a?V!3Mdlli7$dQiQXV
!9TIFp&G*-NWAqV!3M(X!<B0V!!)0\!/ggW^\Ikk!!'.n!0mNaX7$%W!!)0H!1s5k^Z>Hk!!'.Z!3#qu
X,$`Uk554=!!'e.!0R<^XmuIY!!'(e!1X#hk3)f=!!'do!2]_rXkj&Y!!'(Q!3cG'k0sC=!!'d[!4i.1
Xi^XY!!'(=!5nj;k.gu=!!'dG!6tQEXgS5Y!!'()!8%8Ok,\R=!!'d3!9*tYXeGgY!!''j!:0[ck*Q/=
!!'ct!;6BmXc<DY!!''V!!*)^J,~>

%%EndBinary
grestore
np
.750271 .679713 .654902 .901945 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf298.421 263.82 mo(Your )[8.08835 6.74225 6.74222 4.19562 0 ]xsh.908049 .141939 1 .04477 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf327.221 263.82 mo(carbon)[6.06317 6.74222 4.03796 6.74225 6.74222 0 ]xshgrestore
gsave
18 271.399 mo
594 271.399 li
594 662.473 li
594 663.31 593.321 663.989 592.484 663.989 cv
19.5157 663.989 li
18.6791 663.989 18 663.31 18 662.473 cv
18 271.399 li
clp
19.5158 663.989 mo
592.484 663.989 li
592.484 663.231 li
19.5158 663.231 li
cp
false sop
.750271 .679713 .654902 .901945 cmyk
f
grestore
gsave
18 271.399 mo
594 271.399 li
594 662.473 li
594 663.31 593.321 663.989 592.484 663.989 cv
19.5157 663.989 li
18.6791 663.989 18 663.31 18 662.473 cv
18 271.399 li
clp
gsave
21.0317 662.473 mo
21.0317 663.31 20.3529 663.989 19.5157 663.989 cv
18.6787 663.989 18 663.31 18 662.473 cv
18 661.635 18.6787 660.957 19.5157 660.957 cv
20.3529 660.957 21.0317 661.635 21.0317 662.473 cv
20.2736 662.473 mo
20.2736 662.891 19.9343 663.231 19.5157 663.231 cv
19.0971 663.231 18.7579 662.891 18.7579 662.473 cv
18.7579 662.054 19.0971 661.715 19.5157 661.715 cv
19.9343 661.715 20.2736 662.054 20.2736 662.473 cv
eclp
gsave
18 663.989 mo
21.0317 663.989 li
21.0317 660.957 li
18 660.957 li
18 663.989 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
18 662.473 mo
18 663.31 18.6786 663.989 19.5158 663.989 cv
false sop
.750271 .679713 .654902 .901945 cmyk
@
grestore
grestore
grestore
gsave
18 271.399 mo
594 271.399 li
594 662.473 li
594 663.31 593.321 663.989 592.484 663.989 cv
19.5157 663.989 li
18.6791 663.989 18 663.31 18 662.473 cv
18 271.399 li
clp
gsave
594 662.473 mo
594 663.31 593.321 663.989 592.484 663.989 cv
591.647 663.989 590.968 663.31 590.968 662.473 cv
590.968 661.635 591.647 660.957 592.484 660.957 cv
593.321 660.957 594 661.635 594 662.473 cv
593.242 662.473 mo
593.242 662.891 592.903 663.231 592.484 663.231 cv
592.066 663.231 591.726 662.891 591.726 662.473 cv
591.726 662.054 592.066 661.715 592.484 661.715 cv
592.903 661.715 593.242 662.054 593.242 662.473 cv
eclp
gsave
590.968 663.989 mo
594 663.989 li
594 660.957 li
590.968 660.957 li
590.968 663.989 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
592.484 663.989 mo
593.321 663.989 594 663.31 594 662.473 cv
false sop
.750271 .679713 .654902 .901945 cmyk
@
grestore
grestore
grestore
gsave
18 271.399 mo
594 271.399 li
594 662.473 li
594 663.31 593.321 663.989 592.484 663.989 cv
19.5157 663.989 li
18.6791 663.989 18 663.31 18 662.473 cv
18 271.399 li
clp
18 662.473 mo
18.7579 662.473 li
18.7579 271.399 li
18 271.399 li
cp
false sop
.750271 .679713 .654902 .901945 cmyk
f
593.242 662.473 mo
594 662.473 li
594 271.399 li
593.242 271.399 li
cp
f
grestore
gsave
18.7579 663.231 mo
593.242 663.231 li
593.242 271.399 li
18.7579 271.399 li
18.7579 663.231 li
clp
33.9158 640.494 mo
34.6737 640.494 li
34.6737 639.736 li
33.9158 639.736 li
cp
false sop
.156741 .118563 .123629 3.0518e-05 cmyk
f
577.326 640.494 mo
578.084 640.494 li
578.084 639.736 li
577.326 639.736 li
cp
f
.757895 lw
0 lc
0 lj
10 ml
[.757895 .757895 ] .757895 dsh
true sadj
34.6737 640.115 mo
577.326 640.115 li
@
33.9158 287.315 mo
34.6737 287.315 li
34.6737 286.557 li
33.9158 286.557 li
cp
f
577.326 287.315 mo
578.084 287.315 li
578.084 286.557 li
577.326 286.557 li
cp
f
34.6737 286.936 mo
577.326 286.936 li
@
33.9158 318.388 mo
34.6737 318.388 li
34.6737 317.631 li
33.9158 317.631 li
cp
f
577.326 318.388 mo
578.084 318.388 li
578.084 317.631 li
577.326 317.631 li
cp
f
34.6737 318.01 mo
577.326 318.01 li
@
33.9158 365.378 mo
88.4842 365.378 li
88.4842 364.62 li
33.9158 364.62 li
cp
f
88.4842 365.378 mo
578.084 365.378 li
578.084 364.62 li
88.4842 364.62 li
cp
f
306.758 382.81 mo
307.516 382.81 li
307.516 365.378 li
306.758 365.378 li
cp
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
33.9158 419.189 mo
88.4842 419.189 li
88.4842 382.81 li
33.9158 382.81 li
cp
.0099794 3.0518e-05 .19086 3.0518e-05 cmyk
f
88.4842 419.189 mo
306.758 419.189 li
306.758 382.81 li
88.4842 382.81 li
cp
f
306.758 419.189 mo
512.905 419.189 li
512.905 382.81 li
306.758 382.81 li
cp
f
306.758 419.189 mo
307.516 419.189 li
307.516 382.81 li
306.758 382.81 li
cp
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
512.905 419.189 mo
578.084 419.189 li
578.084 382.81 li
512.905 382.81 li
cp
.0099794 3.0518e-05 .19086 3.0518e-05 cmyk
f
306.758 422.978 mo
307.516 422.978 li
307.516 419.189 li
306.758 419.189 li
cp
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
33.9158 470.725 mo
88.4842 470.725 li
88.4842 469.967 li
33.9158 469.967 li
cp
.156741 .118563 .123629 3.0518e-05 cmyk
f
88.4842 470.725 mo
578.084 470.725 li
578.084 469.967 li
88.4842 469.967 li
cp
f
306.758 488.157 mo
307.516 488.157 li
307.516 470.725 li
306.758 470.725 li
cp
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
306.758 510.894 mo
307.516 510.894 li
307.516 488.157 li
306.758 488.157 li
cp
f
306.758 533.631 mo
307.516 533.631 li
307.516 510.894 li
306.758 510.894 li
cp
f
306.758 556.367 mo
307.516 556.367 li
307.516 533.631 li
306.758 533.631 li
cp
f
306.758 560.157 mo
307.516 560.157 li
307.516 556.367 li
306.758 556.367 li
cp
f
33.9158 576.073 mo
578.084 576.073 li
578.084 575.315 li
33.9158 575.315 li
cp
.156741 .118563 .123629 3.0518e-05 cmyk
f
grestore
gsave
468.189 295.652 mo
576.568 295.652 li
577.405 295.652 578.084 296.331 578.084 297.167 cv
578.084 308.536 li
578.084 309.373 577.405 310.052 576.568 310.052 cv
468.189 310.052 li
467.353 310.052 466.674 309.373 466.674 308.536 cv
466.674 297.167 li
466.674 296.331 467.353 295.652 468.189 295.652 cv
clp
466.674 310.052 mo
578.084 310.052 li
578.084 295.652 li
466.674 295.652 li
cp
false sop
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
grestore
gsave
468.189 295.652 mo
576.568 295.652 li
577.405 295.652 578.084 296.331 578.084 297.167 cv
578.084 308.536 li
578.084 309.373 577.405 310.052 576.568 310.052 cv
468.189 310.052 li
467.353 310.052 466.674 309.373 466.674 308.536 cv
466.674 297.167 li
466.674 296.331 467.353 295.652 468.189 295.652 cv
clp
466.674 309.294 mo
578.084 309.294 li
578.084 295.652 li
466.674 295.652 li
cp
false sop
gsave
grestore
/569355468.0 
<<
/ID /569355468.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 20 20 ] 
/XStep 20 
/YStep 20 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 0 mo
20 0 li
20 20 li
0 20 li
cp
false sop
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[20 0 0 -20 -16.817 563.005 ]ct
snap_to_device
<<
/T 1
/W 20 
/H 20 
/M[20 0 0 -20 0 20 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1
"9\i1"9\i1"pP89"pP89"pP89"pP89"pP89#RC\A#RC\A#RC\A#RC\A#RC\A$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ&.fBa&.fBa&.fBa&.fBa&.fBa'bqGu'bqGu'bqGu'bqGu'bqGu+!2RH+!2RH+!2RH+!2RH+!2RH
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl1c.$G1c.$G1c.$G1c.$G1c.$G77BX677BX677BX677BX677BX6='&I)
='&I)='&I)='&I)='&I)~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)
!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"pP89"pP89"pP89"pP89"pP89#RC\A#RC\A#RC\A#RC\A
#RC\A$O[=M$O[=M$O[=M$O[=M$O[=M&.fBa&.fBa&.fBa&.fBa&.fBa()@Z$()@Z$()@Z$()@Z$()@Z$
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D.Olnt.Olnt.Olnt.Olnt.Olnt2E!HO2E!HO2E!HO2E!HO2E!HO7Rfj:
7Rfj:7Rfj:7Rfj:7Rfj:~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)
!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"pP89"pP89"pP89"pP89"pP89#mgnE#mgnE#mgnE#mgnE
#mgnE$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ&J5Te&J5Te&J5Te&J5Te&J5Te(Ddl((Ddl((Ddl((Ddl((Ddl(
+!2RH+!2RH+!2RH+!2RH+!2RH.4H\p.4H\p.4H\p.4H\p.4H\p2`EZS2`EZS2`EZS2`EZS2`EZS7n6'>
7n6'>7n6'>7n6'>7n6'>~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/569355468.0 /Pattern get_res
[.757895 0 0 -.757895 452.274 309.294 ]make_pattern set_pattern
f
2 vmreclaim
grestore
gsave
468.189 295.652 mo
576.568 295.652 li
577.405 295.652 578.084 296.331 578.084 297.167 cv
578.084 308.536 li
578.084 309.373 577.405 310.052 576.568 310.052 cv
468.189 310.052 li
467.353 310.052 466.674 309.373 466.674 308.536 cv
466.674 297.167 li
466.674 296.331 467.353 295.652 468.189 295.652 cv
clp
468.19 296.41 mo
576.568 296.41 li
576.568 295.652 li
468.19 295.652 li
cp
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
grestore
gsave
468.189 295.652 mo
576.568 295.652 li
577.405 295.652 578.084 296.331 578.084 297.167 cv
578.084 308.536 li
578.084 309.373 577.405 310.052 576.568 310.052 cv
468.189 310.052 li
467.353 310.052 466.674 309.373 466.674 308.536 cv
466.674 297.167 li
466.674 296.331 467.353 295.652 468.189 295.652 cv
clp
gsave
469.705 297.167 mo
469.705 298.005 469.027 298.683 468.189 298.683 cv
467.352 298.683 466.674 298.005 466.674 297.167 cv
466.674 296.33 467.352 295.652 468.189 295.652 cv
469.027 295.652 469.705 296.33 469.705 297.167 cv
468.947 297.167 mo
468.947 297.586 468.608 297.925 468.189 297.925 cv
467.771 297.925 467.432 297.586 467.432 297.167 cv
467.432 296.749 467.771 296.409 468.189 296.409 cv
468.608 296.409 468.947 296.749 468.947 297.167 cv
eclp
gsave
466.674 298.683 mo
469.705 298.683 li
469.705 295.652 li
466.674 295.652 li
466.674 298.683 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
468.19 295.652 mo
467.352 295.652 466.674 296.33 466.674 297.167 cv
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
@
grestore
grestore
grestore
gsave
468.189 295.652 mo
576.568 295.652 li
577.405 295.652 578.084 296.331 578.084 297.167 cv
578.084 308.536 li
578.084 309.373 577.405 310.052 576.568 310.052 cv
468.189 310.052 li
467.353 310.052 466.674 309.373 466.674 308.536 cv
466.674 297.167 li
466.674 296.331 467.353 295.652 468.189 295.652 cv
clp
gsave
578.084 297.167 mo
578.084 298.005 577.406 298.683 576.568 298.683 cv
575.731 298.683 575.053 298.005 575.053 297.167 cv
575.053 296.33 575.731 295.652 576.568 295.652 cv
577.406 295.652 578.084 296.33 578.084 297.167 cv
577.326 297.167 mo
577.326 297.586 576.987 297.925 576.568 297.925 cv
576.15 297.925 575.811 297.586 575.811 297.167 cv
575.811 296.749 576.15 296.409 576.568 296.409 cv
576.987 296.409 577.326 296.749 577.326 297.167 cv
eclp
gsave
575.053 298.683 mo
578.084 298.683 li
578.084 295.652 li
575.053 295.652 li
575.053 298.683 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
578.084 297.167 mo
578.084 296.33 577.406 295.652 576.568 295.652 cv
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
@
grestore
grestore
grestore
gsave
468.189 295.652 mo
576.568 295.652 li
577.405 295.652 578.084 296.331 578.084 297.167 cv
578.084 308.536 li
578.084 309.373 577.405 310.052 576.568 310.052 cv
468.189 310.052 li
467.353 310.052 466.674 309.373 466.674 308.536 cv
466.674 297.167 li
466.674 296.331 467.353 295.652 468.189 295.652 cv
clp
468.19 310.052 mo
576.568 310.052 li
576.568 309.294 li
468.19 309.294 li
cp
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
grestore
gsave
468.189 295.652 mo
576.568 295.652 li
577.405 295.652 578.084 296.331 578.084 297.167 cv
578.084 308.536 li
578.084 309.373 577.405 310.052 576.568 310.052 cv
468.189 310.052 li
467.353 310.052 466.674 309.373 466.674 308.536 cv
466.674 297.167 li
466.674 296.331 467.353 295.652 468.189 295.652 cv
clp
gsave
469.705 308.536 mo
469.705 309.373 469.027 310.052 468.189 310.052 cv
467.352 310.052 466.674 309.373 466.674 308.536 cv
466.674 307.699 467.352 307.02 468.189 307.02 cv
469.027 307.02 469.705 307.699 469.705 308.536 cv
468.947 308.536 mo
468.947 308.955 468.608 309.294 468.189 309.294 cv
467.771 309.294 467.432 308.955 467.432 308.536 cv
467.432 308.117 467.771 307.778 468.189 307.778 cv
468.608 307.778 468.947 308.117 468.947 308.536 cv
eclp
gsave
466.674 310.052 mo
469.705 310.052 li
469.705 307.02 li
466.674 307.02 li
466.674 310.052 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
466.674 308.536 mo
466.674 309.373 467.352 310.052 468.19 310.052 cv
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
@
grestore
grestore
grestore
gsave
468.189 295.652 mo
576.568 295.652 li
577.405 295.652 578.084 296.331 578.084 297.167 cv
578.084 308.536 li
578.084 309.373 577.405 310.052 576.568 310.052 cv
468.189 310.052 li
467.353 310.052 466.674 309.373 466.674 308.536 cv
466.674 297.167 li
466.674 296.331 467.353 295.652 468.189 295.652 cv
clp
gsave
578.084 308.536 mo
578.084 309.373 577.406 310.052 576.568 310.052 cv
575.731 310.052 575.053 309.373 575.053 308.536 cv
575.053 307.699 575.731 307.02 576.568 307.02 cv
577.406 307.02 578.084 307.699 578.084 308.536 cv
577.326 308.536 mo
577.326 308.955 576.987 309.294 576.568 309.294 cv
576.15 309.294 575.811 308.955 575.811 308.536 cv
575.811 308.117 576.15 307.778 576.568 307.778 cv
576.987 307.778 577.326 308.117 577.326 308.536 cv
eclp
gsave
575.053 310.052 mo
578.084 310.052 li
578.084 307.02 li
575.053 307.02 li
575.053 310.052 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
576.568 310.052 mo
577.406 310.052 578.084 309.373 578.084 308.536 cv
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
@
grestore
grestore
grestore
gsave
468.189 295.652 mo
576.568 295.652 li
577.405 295.652 578.084 296.331 578.084 297.167 cv
578.084 308.536 li
578.084 309.373 577.405 310.052 576.568 310.052 cv
468.189 310.052 li
467.353 310.052 466.674 309.373 466.674 308.536 cv
466.674 297.167 li
466.674 296.331 467.353 295.652 468.189 295.652 cv
clp
466.674 308.536 mo
467.432 308.536 li
467.432 297.167 li
466.674 297.167 li
cp
false sop
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
577.326 308.536 mo
578.084 308.536 li
578.084 297.167 li
577.326 297.167 li
cp
f
grestore
false sop
.633204 .553582 .545251 .294499 cmyk
YYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf475.011 305.504 mo(Delete your carbon profile)[6.06088 4.55191 1.52563 4.55191 2.28433 4.55188 2.2843 4.54361 4.55191 4.55188 3.03455 2.2843 4.54358 4.55194 3.03448 4.55194 4.55194 4.55188 2.2843 4.55188 3.03461 4.55188 2.2843 1.52563 1.52563 0 ]xshgsave
18.7579 663.231 mo
593.242 663.231 li
593.242 271.399 li
18.7579 271.399 li
18.7579 663.231 li
clp
.463905 .383337 .388098 .0267033 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 440 6 <00020040ffd9041c0598000f001c00714017870501460815350f051c3507
0d1238036f18380b1e471d1076c418d4edfded003fed3fed313043794034
001b0d2601251a2609250526160e18280014001228011b08182800100612
2801170c1528011302152801190a1c280011041c28002b2b2b2b012b2b2b
2b2b2b2b2b2b81005d001716111007022120272611343712211236113402
232202111417163303407c60577efee2fefe7e693f7601358aa678ad9f93
2f48ae0598e5b1feccfedcbffeeee0bb013bf4af0146fae5f80152f4013b
fed5fedddb85cb000000>SBVPMX+Helvetica AddT42Char 
1 1360 10 <000200340000042f059c0002000d005c402209020a080d010202be120606
07020601050708030106070a02750b05ef030c070403b80117b501960d08
ac0ab80158b3050f470e1076c418d4f5f43cfde4003f3ff43cfd3c113939
0111123911123939872e2b047d10c50f3130011109011121350133113315
231102a5fe3501cefd8c029098d3d301fb0289fd77fe05015eb0038efc5f
9dfea2000000>SBVPMX+Helvetica AddT42Char 
1 3588 20 <0002005affda057105e5001d001e00b1403b1b0597019605031f011f0482
018705891305530803861d111115063a1d030c3a15091e021e1e19033102
3b1031111a20093119191f20a1216a66182b2b4ef44ded4e10f64dedf4ed
12392f003f3fed3fed12392f10ed31304379403a001c172513260e251b26
0b160932000d1410320112110f10071c0932000500033201010204030a18
0c32000f120c3200081a06320104010632012b2b2b2b01103c103c2b2b10
3c103c2b2b2b2b2b2b815d015d080117232e012322001110123332373637
3306070621202726111037362123041e013411c221c5b2d9fef5f1efdc73
3d1ec21a92affed7ff00aee5acba01472805e5fedabb8ea6fecffec5fefe
febfa95991e89dbd9bcd01ac0145d0e20000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/zero 6 def
/four 10 def
/C 20 def
end
SBVPMX+Helvetica /Encoding get
dup 48 /zero put
dup 52 /four put
dup 67 /C put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero 3{/.notdef}rp /four 10{/.notdef}rp /question /.notdef /A /.notdef /C /D /.notdef /F /.notdef /H /I 4{/.notdef}rp /N /O 2{/.notdef}rp /R /S /T /.notdef /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [10.6105 0 0 -10.6105 0 0 ]msf307.516 377.504 mo( 0)[3.03461 0 ]xsh523.516 377.504 mo(4,000 )[5.89948 2.94971 5.89941 5.89954 6.63153 0 ]xshYYMPBE+Helvetica*1 [6.82105 0 0 -6.82105 0 0 ]msf553.832 377.504 mo(kg CO)[3.41052 4.16766 2.27136 4.92487 0 ]xsh.365667 .295354 .300633 .000549325 cmyk
YYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf534.884 402.515 mo(This month)[5.09381 4.63525 1.85077 4.33514 2.2843 6.94452 4.63525 4.63531 2.31763 0 ]xsh.463905 .383337 .388098 .0267033 cmyk
YYMPBE+Helvetica*1 [10.6105 0 0 -10.6105 0 0 ]msf307.516 482.852 mo( 0)[3.03461 0 ]xsh523.516 482.852 mo(4,000 )[5.89948 2.94971 5.89941 5.89954 6.63153 0 ]xshYYMPBE+Helvetica*1 [6.82105 0 0 -6.82105 0 0 ]msf553.832 482.852 mo(kg CO)[3.41052 4.16766 2.27136 4.92487 0 ]xsh74.8421 501.799 mo
80.9053 501.799 li
80.9053 495.736 li
74.8421 495.736 li
cp
3.0518e-05 .860288 .626764 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf74.8421 499.525 mo( )sh68.779 501.799 mo
74.8421 501.799 li
74.8421 495.736 li
68.779 495.736 li
cp
.623865 3.0518e-05 .245274 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf68.7789 499.525 mo( )sh307.516 492.704 mo
384.821 492.704 li
384.821 489.673 li
307.516 489.673 li
cp
.623865 3.0518e-05 .245274 3.0518e-05 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf307.516 493.462 mo( )sh384.821 492.704 mo
468.947 492.704 li
468.947 489.673 li
384.821 489.673 li
cp
3.0518e-05 .860288 .626764 3.0518e-05 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf384.821 493.462 mo( )sh307.516 507.862 mo
384.821 507.862 li
384.821 492.704 li
307.516 492.704 li
cp
.156741 .118563 .123629 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf307.516 496.494 mo( )sh384.821 507.862 mo
468.947 507.862 li
468.947 492.704 li
384.821 492.704 li
cp
.29102 .229496 .23447 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf384.821 496.494 mo( )sh74.8421 524.536 mo
80.9053 524.536 li
80.9053 518.473 li
74.8421 518.473 li
cp
.411261 .209232 .241093 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf74.8421 522.262 mo( )sh68.779 524.536 mo
74.8421 524.536 li
74.8421 518.473 li
68.779 518.473 li
cp
.47718 .24271 1 .0297551 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf68.7789 522.262 mo( )sh62.7158 524.536 mo
68.7789 524.536 li
68.7789 518.473 li
62.7158 518.473 li
cp
.742428 .303105 .758297 .138949 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf62.7158 522.262 mo( )sh56.6526 524.536 mo
62.7158 524.536 li
62.7158 518.473 li
56.6526 518.473 li
cp
.567895 .994476 3.0518e-05 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf56.6526 522.262 mo( )sh50.5895 524.536 mo
56.6526 524.536 li
56.6526 518.473 li
50.5895 518.473 li
cp
.153658 .239231 .894102 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf50.5895 522.262 mo( )sh44.5263 524.536 mo
50.5895 524.536 li
50.5895 518.473 li
44.5263 518.473 li
cp
.732967 .648646 3.0518e-05 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf44.5263 522.262 mo( )sh307.516 515.441 mo
311.305 515.441 li
311.305 512.41 li
307.516 512.41 li
cp
.732967 .648646 3.0518e-05 3.0518e-05 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf307.516 516.199 mo( )sh311.305 515.441 mo
315.095 515.441 li
315.095 512.41 li
311.305 512.41 li
cp
.153658 .239231 .894102 3.0518e-05 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf311.305 516.199 mo( )sh315.095 515.441 mo
318.884 515.441 li
318.884 512.41 li
315.095 512.41 li
cp
.567895 .994476 3.0518e-05 3.0518e-05 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf315.095 516.199 mo( )sh318.884 515.441 mo
322.674 515.441 li
322.674 512.41 li
318.884 512.41 li
cp
.742428 .303105 .758297 .138949 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf318.884 516.199 mo( )sh322.674 515.441 mo
326.463 515.441 li
326.463 512.41 li
322.674 512.41 li
cp
.47718 .24271 1 .0297551 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf322.674 516.199 mo( )sh326.463 515.441 mo
330.253 515.441 li
330.253 512.41 li
326.463 512.41 li
cp
.411261 .209232 .241093 3.0518e-05 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf326.463 516.199 mo( )sh330.253 515.441 mo
334.042 515.441 li
334.042 512.41 li
330.253 512.41 li
cp
.0195926 .823819 1 .00326543 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf330.253 516.199 mo( )sh334.042 515.441 mo
356.021 515.441 li
356.021 512.41 li
334.042 512.41 li
cp
.384405 .757473 .298924 .0386358 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf334.042 516.199 mo( )sh307.516 530.599 mo
311.305 530.599 li
311.305 515.441 li
307.516 515.441 li
cp
.156741 .118563 .123629 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf307.516 519.231 mo( )sh311.305 530.599 mo
315.095 530.599 li
315.095 515.441 li
311.305 515.441 li
cp
.29102 .229496 .23447 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf311.305 519.231 mo( )sh315.095 530.599 mo
318.884 530.599 li
318.884 515.441 li
315.095 515.441 li
cp
.156741 .118563 .123629 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf315.095 519.231 mo( )sh318.884 530.599 mo
322.674 530.599 li
322.674 515.441 li
318.884 515.441 li
cp
.29102 .229496 .23447 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf318.884 519.231 mo( )sh322.674 530.599 mo
326.463 530.599 li
326.463 515.441 li
322.674 515.441 li
cp
.156741 .118563 .123629 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf322.674 519.231 mo( )sh326.463 530.599 mo
330.253 530.599 li
330.253 515.441 li
326.463 515.441 li
cp
.29102 .229496 .23447 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf326.463 519.231 mo( )sh330.253 530.599 mo
334.042 530.599 li
334.042 515.441 li
330.253 515.441 li
cp
.156741 .118563 .123629 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf330.253 519.231 mo( )sh334.042 530.599 mo
356.021 530.599 li
356.021 515.441 li
334.042 515.441 li
cp
.29102 .229496 .23447 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf334.042 519.231 mo( )sh74.8421 547.273 mo
80.9053 547.273 li
80.9053 541.21 li
74.8421 541.21 li
cp
.0195926 .823819 1 .00326543 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf74.8421 544.999 mo( )sh68.779 547.273 mo
74.8421 547.273 li
74.8421 541.21 li
68.779 541.21 li
cp
.800595 .051545 .339452 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf68.7789 544.999 mo( )sh62.7158 547.273 mo
68.7789 547.273 li
68.7789 541.21 li
62.7158 541.21 li
cp
.0195926 .823819 1 .00326543 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf62.7158 544.999 mo( )sh56.6526 547.273 mo
62.7158 547.273 li
62.7158 541.21 li
56.6526 541.21 li
cp
.615106 .350988 1 .180087 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf56.6526 544.999 mo( )sh307.516 538.178 mo
346.168 538.178 li
346.168 535.146 li
307.516 535.146 li
cp
.615106 .350988 1 .180087 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf307.516 538.936 mo( )sh346.168 538.178 mo
362.084 538.178 li
362.084 535.146 li
346.168 535.146 li
cp
.0195926 .823819 1 .00326543 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf346.168 538.936 mo( )sh362.084 538.178 mo
392.4 538.178 li
392.4 535.146 li
362.084 535.146 li
cp
.800595 .051545 .339452 3.0518e-05 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf362.084 538.936 mo( )sh392.4 538.178 mo
396.189 538.178 li
396.189 535.146 li
392.4 535.146 li
cp
.0195926 .823819 1 .00326543 cmyk
f
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf392.4 538.936 mo( )sh307.516 553.336 mo
346.168 553.336 li
346.168 538.178 li
307.516 538.178 li
cp
.156741 .118563 .123629 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf307.516 541.967 mo( )sh346.168 553.336 mo
362.084 553.336 li
362.084 538.178 li
346.168 538.178 li
cp
.29102 .229496 .23447 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf346.168 541.967 mo( )sh362.084 553.336 mo
392.4 553.336 li
392.4 538.178 li
362.084 538.178 li
cp
.156741 .118563 .123629 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf362.084 541.967 mo( )sh392.4 553.336 mo
396.189 553.336 li
396.189 538.178 li
392.4 538.178 li
cp
.29102 .229496 .23447 3.0518e-05 cmyk
f
.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf392.4 541.967 mo( )shgrestore
43.0001 308.431 mo
33 308.431 li
33 295.431 li
43.0001 295.431 li
43.0001 308.431 li
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[12 0 0 15 15.183 253.575 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 15 
/M[12 0 0 -15 0 15 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!"gD!!!!!!!!!!!!"gD!!!!!!!!!!!"JVlp!!#B*Bk_9qT"d6E!<J,`!<E39]s@_?"9a-'
)@$M9]Rp=i#mk[Y]H'DTB5\(_#mk66]qMg5+Ctic#mjiVI_WQO)d<UT#mjEC&$:*c(/G5C#mj!(!#>Y:
#=8_'!WlaA#RC\A&R>G>!!"Q[C2.Ku@k7T[!!!!"!s8W-!<<*"!!!!"!s8W-!<<*"~>
<~!!!!!!!!!!!"^4o!!!!!!!!!!!"^4o!!!!!!!!!!"I#7A!!#,d<E3%!N3+ll!<IEJ!WiE7XJ>jt"9`B\
'EnYpY&+:E#RFb/X;!Oo<*T\7#RFBfXc9-E(fCVF#RF!:Bs"Ha'hJZ:#REX+$_1]5&O-O,#RE<k!"f;5
"Z$Di!Wl1-"pP89%8Hs+!!"EN?smAM=ss@N!!!!"!s8W-!<<*"!!!!"!s8W-!<<*"~>
<~!!!!!!!!!!!"U.n!!!!!!!!!!!"U.n!!!!!!!!!!"Hf%;!!#)d='&I)MQ8Kf!<IBI!WiE6WhBFo"9`B^
'EnYnWbhkA#RFe-W"h4k<F#k9#RFEiW/I@8),pkI#RF'<BWJ'['h\f<#REa/$CG?1&O6U-#REBm!"f;5
"Z-Jj!Wl1-"pP89%8Hs+!!"EM?XI/I=XX7M!!!!"!s8W-!<<*"!!!!"!s8W-!<<*"~>
<~!!!!!!!!!!!#6q3!!!!!!!!!!!#6q3!!!!!!!!!!"iJO,!!"YX!WiE)<9?S:!<FSK!!!!!gSt8T"U,;7
!!!!Xb7Om]$O[/oa8c5&!X&l=$O["9hFO2R!!3N9$OZq7%-H=F!!!B7$OZq7!-JPI!!!B7$OZq7!!!!!
!!!B7!s9)7!!!!!!"8r3!!"m#It)rtG;T@#!!!!""9\i1!<<*"!!!!""9\i1!<<*"~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf43.0105 305.504 mo( )sh.633204 .553582 .545251 .294499 cmyk
YYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf47.5579 305.504 mo(Share your carbon totals with fellow travellers?)[6.06626 5.05667 5.05667 3.02848 5.80244 2.28278 4.54737 5.05667 5.05667 3.52869 2.28278 4.54736 5.05668 3.02847 5.05668 5.05667 5.29313 2.28278 2.52833 5.05667 2.52834 5.05667 2.01904 4.79292 2.28278 6.56641 2.01903 2.52834 5.55688 2.28278 2.52834 5.05667 2.01904 2.01903 5.05667 6.81197 2.28278 2.52834 3.02849 5.05667 4.54736 5.05667 2.01904 2.01903 5.05667 3.02849 4.79292 0 ]xsh.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf238.547 305.504 mo( )shgsave
243.095 295.652 mo
283.263 295.652 li
284.1 295.652 284.779 296.331 284.779 297.167 cv
284.779 308.536 li
284.779 309.373 284.1 310.052 283.263 310.052 cv
243.095 310.052 li
242.258 310.052 241.579 309.373 241.579 308.536 cv
241.579 297.167 li
241.579 296.331 242.258 295.652 243.095 295.652 cv
clp
241.579 310.052 mo
284.779 310.052 li
284.779 295.652 li
241.579 295.652 li
cp
3.0518e-05 3.0518e-05 3.0518e-05 3.0518e-05 cmyk
f
grestore
gsave
243.095 295.652 mo
283.263 295.652 li
284.1 295.652 284.779 296.331 284.779 297.167 cv
284.779 308.536 li
284.779 309.373 284.1 310.052 283.263 310.052 cv
243.095 310.052 li
242.258 310.052 241.579 309.373 241.579 308.536 cv
241.579 297.167 li
241.579 296.331 242.258 295.652 243.095 295.652 cv
clp
241.579 309.294 mo
284.779 309.294 li
284.779 295.652 li
241.579 295.652 li
cp
gsave
grestore
/569355664.0 
<<
/ID /569355664.0 
/PaintType 1
/PatternType 1
/TilingType 2
/BBox [0 0 20 20 ] 
/XStep 20 
/YStep 20 
/PaintProc { begin save
Adobe_AGM_Core/AGMCORE_pattern_paint_type 1 put
0 0 mo
20 0 li
20 20 li
0 20 li
cp
false sop
gsave
/0 /CSA get_res setcolorspace
clp
[1 0 0 -1 16.817 563.005 ]ct
[20 0 0 -20 -16.817 563.005 ]ct
snap_to_device
<<
/T 1
/W 20 
/H 20 
/M[20 0 0 -20 0 20 ]
/MD true
/BC 8 
/I true
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%
!<E3%!<E3%!<E3%!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1
"9\i1"9\i1"pP89"pP89"pP89"pP89"pP89#RC\A#RC\A#RC\A#RC\A#RC\A$k*OQ$k*OQ$k*OQ$k*OQ
$k*OQ&.fBa&.fBa&.fBa&.fBa&.fBa'bqGu'bqGu'bqGu'bqGu'bqGu+!2RH+!2RH+!2RH+!2RH+!2RH
-n$Jl-n$Jl-n$Jl-n$Jl-n$Jl1c.$G1c.$G1c.$G1c.$G1c.$G77BX677BX677BX677BX677BX6='&I)
='&I)='&I)='&I)='&I)~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)
!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"pP89"pP89"pP89"pP89"pP89#RC\A#RC\A#RC\A#RC\A
#RC\A$O[=M$O[=M$O[=M$O[=M$O[=M&.fBa&.fBa&.fBa&.fBa&.fBa()@Z$()@Z$()@Z$()@Z$()@Z$
*Zc@D*Zc@D*Zc@D*Zc@D*Zc@D.Olnt.Olnt.Olnt.Olnt.Olnt2E!HO2E!HO2E!HO2E!HO2E!HO7Rfj:
7Rfj:7Rfj:7Rfj:7Rfj:~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!<E3%!WiE)!WiE)
!WiE)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-"9\i1"9\i1"9\i1
"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"9\i1"pP89"pP89"pP89"pP89"pP89#mgnE#mgnE#mgnE#mgnE
#mgnE$k*OQ$k*OQ$k*OQ$k*OQ$k*OQ&J5Te&J5Te&J5Te&J5Te&J5Te(Ddl((Ddl((Ddl((Ddl((Ddl(
+!2RH+!2RH+!2RH+!2RH+!2RH.4H\p.4H\p.4H\p.4H\p.4H\p2`EZS2`EZS2`EZS2`EZS2`EZS7n6'>
7n6'>7n6'>7n6'>7n6'>~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
Adobe_AGM_Core/AGMCORE_pattern_paint_type 0 put
restore end }
>>
/Pattern add_res
/569355664.0 /Pattern get_res
[.757895 0 0 -.757895 227.179 309.294 ]make_pattern set_pattern
f
2 vmreclaim
grestore
gsave
243.095 295.652 mo
283.263 295.652 li
284.1 295.652 284.779 296.331 284.779 297.167 cv
284.779 308.536 li
284.779 309.373 284.1 310.052 283.263 310.052 cv
243.095 310.052 li
242.258 310.052 241.579 309.373 241.579 308.536 cv
241.579 297.167 li
241.579 296.331 242.258 295.652 243.095 295.652 cv
clp
243.095 296.41 mo
283.263 296.41 li
283.263 295.652 li
243.095 295.652 li
cp
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
grestore
gsave
243.095 295.652 mo
283.263 295.652 li
284.1 295.652 284.779 296.331 284.779 297.167 cv
284.779 308.536 li
284.779 309.373 284.1 310.052 283.263 310.052 cv
243.095 310.052 li
242.258 310.052 241.579 309.373 241.579 308.536 cv
241.579 297.167 li
241.579 296.331 242.258 295.652 243.095 295.652 cv
clp
gsave
244.611 297.167 mo
244.611 298.005 243.932 298.683 243.095 298.683 cv
242.258 298.683 241.579 298.005 241.579 297.167 cv
241.579 296.33 242.258 295.652 243.095 295.652 cv
243.932 295.652 244.611 296.33 244.611 297.167 cv
243.853 297.167 mo
243.853 297.586 243.513 297.925 243.095 297.925 cv
242.676 297.925 242.337 297.586 242.337 297.167 cv
242.337 296.749 242.676 296.409 243.095 296.409 cv
243.513 296.409 243.853 296.749 243.853 297.167 cv
eclp
gsave
241.579 298.683 mo
244.61 298.683 li
244.61 295.652 li
241.579 295.652 li
241.579 298.683 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
243.095 295.652 mo
242.258 295.652 241.579 296.33 241.579 297.167 cv
.0678111 .0485237 .0503853 3.0518e-05 cmyk
@
grestore
grestore
grestore
gsave
243.095 295.652 mo
283.263 295.652 li
284.1 295.652 284.779 296.331 284.779 297.167 cv
284.779 308.536 li
284.779 309.373 284.1 310.052 283.263 310.052 cv
243.095 310.052 li
242.258 310.052 241.579 309.373 241.579 308.536 cv
241.579 297.167 li
241.579 296.331 242.258 295.652 243.095 295.652 cv
clp
gsave
284.779 297.167 mo
284.779 298.005 284.1 298.683 283.263 298.683 cv
282.426 298.683 281.747 298.005 281.747 297.167 cv
281.747 296.33 282.426 295.652 283.263 295.652 cv
284.1 295.652 284.779 296.33 284.779 297.167 cv
284.021 297.167 mo
284.021 297.586 283.682 297.925 283.263 297.925 cv
282.845 297.925 282.505 297.586 282.505 297.167 cv
282.505 296.749 282.845 296.409 283.263 296.409 cv
283.682 296.409 284.021 296.749 284.021 297.167 cv
eclp
gsave
281.747 298.683 mo
284.779 298.683 li
284.779 295.652 li
281.747 295.652 li
281.747 298.683 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
284.779 297.167 mo
284.779 296.33 284.1 295.652 283.263 295.652 cv
.0678111 .0485237 .0503853 3.0518e-05 cmyk
@
grestore
grestore
grestore
gsave
243.095 295.652 mo
283.263 295.652 li
284.1 295.652 284.779 296.331 284.779 297.167 cv
284.779 308.536 li
284.779 309.373 284.1 310.052 283.263 310.052 cv
243.095 310.052 li
242.258 310.052 241.579 309.373 241.579 308.536 cv
241.579 297.167 li
241.579 296.331 242.258 295.652 243.095 295.652 cv
clp
243.095 310.052 mo
283.263 310.052 li
283.263 309.294 li
243.095 309.294 li
cp
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
grestore
gsave
243.095 295.652 mo
283.263 295.652 li
284.1 295.652 284.779 296.331 284.779 297.167 cv
284.779 308.536 li
284.779 309.373 284.1 310.052 283.263 310.052 cv
243.095 310.052 li
242.258 310.052 241.579 309.373 241.579 308.536 cv
241.579 297.167 li
241.579 296.331 242.258 295.652 243.095 295.652 cv
clp
gsave
244.611 308.536 mo
244.611 309.373 243.932 310.052 243.095 310.052 cv
242.258 310.052 241.579 309.373 241.579 308.536 cv
241.579 307.699 242.258 307.02 243.095 307.02 cv
243.932 307.02 244.611 307.699 244.611 308.536 cv
243.853 308.536 mo
243.853 308.955 243.513 309.294 243.095 309.294 cv
242.676 309.294 242.337 308.955 242.337 308.536 cv
242.337 308.117 242.676 307.778 243.095 307.778 cv
243.513 307.778 243.853 308.117 243.853 308.536 cv
eclp
gsave
241.579 310.052 mo
244.61 310.052 li
244.61 307.02 li
241.579 307.02 li
241.579 310.052 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
241.579 308.536 mo
241.579 309.373 242.258 310.052 243.095 310.052 cv
.0678111 .0485237 .0503853 3.0518e-05 cmyk
@
grestore
grestore
grestore
gsave
243.095 295.652 mo
283.263 295.652 li
284.1 295.652 284.779 296.331 284.779 297.167 cv
284.779 308.536 li
284.779 309.373 284.1 310.052 283.263 310.052 cv
243.095 310.052 li
242.258 310.052 241.579 309.373 241.579 308.536 cv
241.579 297.167 li
241.579 296.331 242.258 295.652 243.095 295.652 cv
clp
gsave
284.779 308.536 mo
284.779 309.373 284.1 310.052 283.263 310.052 cv
282.426 310.052 281.747 309.373 281.747 308.536 cv
281.747 307.699 282.426 307.02 283.263 307.02 cv
284.1 307.02 284.779 307.699 284.779 308.536 cv
284.021 308.536 mo
284.021 308.955 283.682 309.294 283.263 309.294 cv
282.845 309.294 282.505 308.955 282.505 308.536 cv
282.505 308.117 282.845 307.778 283.263 307.778 cv
283.682 307.778 284.021 308.117 284.021 308.536 cv
eclp
gsave
281.747 310.052 mo
284.779 310.052 li
284.779 307.02 li
281.747 307.02 li
281.747 310.052 li
clp
1.51579 lw
0 lc
0 lj
10 ml
[] 0 dsh
true sadj
283.263 310.052 mo
284.1 310.052 284.779 309.373 284.779 308.536 cv
.0678111 .0485237 .0503853 3.0518e-05 cmyk
@
grestore
grestore
grestore
gsave
243.095 295.652 mo
283.263 295.652 li
284.1 295.652 284.779 296.331 284.779 297.167 cv
284.779 308.536 li
284.779 309.373 284.1 310.052 283.263 310.052 cv
243.095 310.052 li
242.258 310.052 241.579 309.373 241.579 308.536 cv
241.579 297.167 li
241.579 296.331 242.258 295.652 243.095 295.652 cv
clp
241.579 308.536 mo
242.337 308.536 li
242.337 297.167 li
241.579 297.167 li
cp
.0678111 .0485237 .0503853 3.0518e-05 cmyk
f
284.021 308.536 mo
284.779 308.536 li
284.779 297.167 li
284.021 297.167 li
cp
f
grestore
.633204 .553582 .545251 .294499 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 6252 34 <000200aaffd9052f05bd00150016003c4023170527053810030a0002053a
1009160316161409250c1a18012514191718a0219570182b2b4ef44ded4e
10f64ded12392f003f3fed3f3c5d31300111141716333237363511331110
07022120032619012101743c59d3fd5b31ca4986fe8cfe8c8549024305bd
fc74a06aa0ad5e9f038cfcc7fef192fef6010a92010f0339>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/U 34 def
end
SBVPMX+Helvetica /Encoding get
dup 85 /U put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero 3{/.notdef}rp /four 10{/.notdef}rp /question /.notdef /A /.notdef /C /D /.notdef /F /.notdef /H /I 4{/.notdef}rp /N /O 2{/.notdef}rp /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf249.916 305.504 mo(Update)[6.0609 4.5519 4.55191 4.55191 2.2843 0 ]xshgsave
18.7579 663.231 mo
593.242 663.231 li
593.242 271.399 li
18.7579 271.399 li
18.7579 663.231 li
clp
.55761 .472114 .467414 .125368 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 736 8 <000100400000041e059d002200a6404e3604460457056b1d6e1e7a1e8401
8702082a085a196b197c197c1cb519050022010f041c0e1921071c190401
00051f0f0f22130a351305201f7521220c217f0738166f220e270f811f38
222447231076c418d4edf4ed10f5ede4003f3cfd3c3fed1112392f121739
0111123912393911391239005d31304379401c04190c2511260b120e2800
091407280119040d100a280108150a2801002b2b1010012b2b2b2b81005d
36123f01363736353426232207060723363736213212151407060f010607
06072115214a85c1c0813452967db9472604b70342750128f6e37946b589
6238641a030efc29b90112706f4b35536b7d938c4b85bb76d0fef6a3ac7a
47654c3631576aaa0000>SBVPMX+Helvetica AddT42Char 
1 2316 14 <00020049ffd80411059a001b002700ab402e19052b052816480658056805
8919881a981a09460807212727350a0a182135100504351bc7180d07023c
071e3114b80155400b0d00291b8124380d2947281076c418d4edf4ed10f5
fd397d4b52787a2f18003feded3fed12392fed1112393130437940341f26
191a0b13010312250226220f24280020111e28010319002800260b242800
230e2128011f13212801011a042800250c2728002b2b2b2b012b2b2b2b2b
2b81818181015d01161716333236130e0123220235341233201316151007
02212226350036353426232206151416330110086b374581b6263cb166cf
f1eee8013977424f83fec7d2da0232b19f7b849b8895015a95391ed70149
5f4d0102cbc30128fee69be9fef9cbfeaedca601268db09e9bb1948ca500
>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/two 8 def
/nine 14 def
end
SBVPMX+Helvetica /Encoding get
dup 50 /two put
dup 57 /nine put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero /.notdef /two /.notdef /four 4{/.notdef}rp /nine 5{/.notdef}rp /question /.notdef /A /.notdef /C /D /.notdef /F /.notdef /H /I 4{/.notdef}rp /N /O 2{/.notdef}rp /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [.757895 0 0 -.757895 0 0 ]msf33.9158 340.367 mo( )sh88.4842 340.367 mo( )sh306.758 340.367 mo( )sh512.905 340.367 mo( )shYYMPBE+Helvetica*1 [18.1895 0 0 -18.1895 0 0 ]msf39.9789 360.831 mo(2009)[10.1133 10.1133 10.1133 0 ]xsh.254093 .200656 .205875 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 2616 15 <000200e3000001b40421000300070032401a052a07032a0006070a091717
1a05016404001908096421787c182b2b4ef44d3cfd3c4e456544e6003f3f
4ded10ed31301333152311331523e3d1d1d1d10421dafd93da000000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/colon 15 def
end
SBVPMX+Helvetica /Encoding get
dup 58 /colon put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero /.notdef /two /.notdef /four 4{/.notdef}rp /nine /colon 4{/.notdef}rp /question /.notdef /A /.notdef /C /D /.notdef /F /.notdef /H /I 4{/.notdef}rp /N /O 2{/.notdef}rp /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf88.4842 360.073 mo(Total so far: )[6.94602 6.32084 3.16042 6.32084 3.02401 3.04673 5.68421 6.44588 3.04674 3.16042 6.32085 3.7856 3.41052 0 ]xsh.365667 .295354 .300633 .000549325 cmyk
YYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf152.147 360.073 mo(0 kg CO)[6.82106 3.04672 5.68422 6.44589 3.04674 8.20801 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 4468 26 <00010023ffd9036d05bd00130042402209061906670b7a06970205780401
09090412020d9204091125001a150a2507191415b80151b3218c70182b2b
4ef44ded4e10f64ded003fed3f12392f5d31305d011407062122263d0133
15141633323736351133036d3766fee2a5eabb6b719f311ec501b6ba67bc
b3e5696978796d43ba03d300>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/J 26 def
end
SBVPMX+Helvetica /Encoding get
dup 74 /J put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero /.notdef /two /.notdef /four 4{/.notdef}rp /nine /colon 4{/.notdef}rp /question /.notdef /A /.notdef /C /D /.notdef /F /.notdef /H /I /J 3{/.notdef}rp /N /O 2{/.notdef}rp /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf88.4842 404.031 mo(January)[5.68421 6.32084 6.32084 6.32084 6.32084 3.78561 0 ]xsh.365667 .295354 .300633 .000549325 cmyk
YYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf129.411 404.031 mo(, )[3.78569 0 ]xsh136.232 404.031 mo(no trips, we envy you.)[6.32085 6.55957 3.04674 3.16043 3.7856 2.52379 6.32083 5.68422 3.53557 3.04674 8.20801 6.94611 3.04672 6.32085 6.32083 5.68422 5.92294 3.04675 5.68422 6.32082 6.32086 0 ]xsh.55761 .472114 .467414 .125368 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 1960 13 <00030042ffd7041a059c000b0017003200cb4047560157095a0f59136401
65096b0f691377250949107b197623722573277c317c3288198720872788
2e883198190d47083208250e0225320b3511112c05351e0517352c0d0238
21b80186b70e38296f2f08381bb80186b514382f3447331076c418d4edf4
ed10f5edf4ed003fed3fed12392fed39390111123912393130437940352a
2e1c201216030d162d1428000c2b0e28010a12082800061d082800041f02
2801152e1728000d2a172800071c0528010320052801002b2b2b2b012b2b
2b2b2b81818181015d005d00363534262322061514163312363534262322
061514163300272635343633321615140706071617161514022322243534
363702a48680838274966688a5aa8581a3959cfeb52a4fe8d5ceea442650
59335ffee8d1fedf7c7a0340855c5086865a6572fd3b87868b90938270a3
02a02b5080a0e6d99186532f2d293564a0bdfef9e3d87fb93100>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/eight 13 def
end
SBVPMX+Helvetica /Encoding get
dup 56 /eight put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero /.notdef /two /.notdef /four 3{/.notdef}rp /eight /nine /colon 4{/.notdef}rp /question /.notdef /A /.notdef /C /D /.notdef /F /.notdef /H /I /J 3{/.notdef}rp /N /O 2{/.notdef}rp /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf307.516 422.978 mo( )shYYMPBE+Helvetica*1 [.757895 0 0 -.757895 0 0 ]msf33.9158 445.715 mo( )sh88.4842 445.715 mo( )sh306.758 445.715 mo( )sh512.905 445.715 mo( )shYYMPBE+Helvetica*1 [18.1895 0 0 -18.1895 0 0 ]msf39.9789 466.178 mo(2008)[10.1133 10.1133 10.1133 0 ]xsh.254093 .200656 .205875 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf88.4842 465.42 mo(Total: )[6.94602 6.32084 3.16042 6.32084 2.5238 3.52421 0 ]xsh.365667 .295354 .300633 .000549325 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 660 7 <000100c4000002d5059200080023b10801b80133400c0404070c04079605
000a47091076c418c4d5fd39003f3ff4cd313013353e013733112311c4c3
9a268ec003f68a1359a6fa6e03f60000>SBVPMX+Helvetica AddT42Char 
1 1516 11 <00010042ffdc041c0580002000bb402b4812881f02390c46135713671304
3a080c0d07000c0a0f0e0e75121313120e0f201213070013170a17350ab8
0122401a0d7f0e0e1d123a0f04043520c71d0d1107381a6f003820224721
1076c418d4edf5edc4003feded3ffd12392fe4f4ed111239011112393912
3939872e2b7d10c5001239011112393931301843794028181f0109022603
1e00280001001f20051c0728010918072801011f042800061b0428000819
0a2801002b2b2b012b2b103c103c2b2b8181005d5d131617163332363534
262322060727132115210336373633320415140221222427fd127d4054a0
9ab7805d852f9c6d02e8fd9f3d322d5069c50112fbfeedaffef310016d9a
3b1ecc7c96a44840090303aefe72261321fec3cbfecac5cc0000>SBVPMX+Helvetica AddT42Char 
1 1812 12 <0001004b0000042f0580000f00534036050b1902380b3a0c390d4a0d5502
56046202b7070a7c0db40dc50d030209010d0e3a000f04090c020d080000
6f0e083809ac0e1147101076c418d4f4ed10e511123939003f3f3cfd3c39
1239015d31305d01150602070607060723121336372135042f45e558572d
1d2ec744e88997fce805809d43feb4c0bb9a63dc019a0196eeadb500>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/one 7 def
/five 11 def
/seven 12 def
end
SBVPMX+Helvetica /Encoding get
dup 49 /one put
dup 53 /five put
dup 55 /seven put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero /one /two /.notdef /four /five /.notdef /seven /eight /nine /colon 4{/.notdef}rp /question /.notdef /A /.notdef /C /D /.notdef /F /.notdef /H /I /J 3{/.notdef}rp /N /O 2{/.notdef}rp /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf120.316 465.42 mo(5,871 kg CO)[6.32084 3.16042 6.32083 6.32085 6.67326 3.04674 5.6842 6.44589 3.04674 8.20801 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf88.4842 502.557 mo(September)[7.58282 6.32084 6.32084 3.16042 6.32085 9.46981 6.32083 6.32085 0 ]xsh.365667 .295354 .300633 .000549325 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 2704 16 <0002005c00de046f03360003000700274015012000cd07200604001a0907
021908095c213f52182b2b4ef43c10f63c002f4dedfdfd31300115213501
152135046ffbed0413fbed0336a8a8fe53abab00>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/equal 16 def
end
SBVPMX+Helvetica /Encoding get
dup 61 /equal put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero /one /two /.notdef /four /five /.notdef /seven /eight /nine /colon 2{/.notdef}rp /equal /.notdef /question /.notdef /A /.notdef /C /D /.notdef /F /.notdef /H /I /J 3{/.notdef}rp /N /O 2{/.notdef}rp /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf144.568 502.557 mo(, )[3.78569 0 ]xsh151.389 502.557 mo(2 trips = )[6.82104 3.04674 3.16042 3.7856 2.52379 6.32085 6.18442 3.04675 6.82104 0 ]xsh.463905 .383337 .388098 .0267033 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 1016 9 <00010031ffd9041a059a003100c4401f490c532d6529632d7529752d0696
26014b082b0a182b140d03f93114350d20b8012340141135107f0d0d311b
3524050735310d1896274411b8014a400f0a382e6f021f29208103270233
47321076c418d4edf4ed10f5ededf4ed003fed3fed12392ff4fde610ed10
ed111239011112393130437940362f301926000905261d25222606000328
00040308300a28011c231f28001a251828010401072800092f0728001e21
1b280119261b2801002b2b2b2b012b2b2b103c2b2b2b2b818181005d015d
0402353316171633323635342623220607351e0133323736353426232207
06072334373621321615140706071e01151400230116e5bc0c2846b78eac
b5a11225131c26166541729865b4452605b2406e0115dbf0472c46717ffe
f2f8270117c88b3f719878947601019f03022038906b7478427aa070c8c3
b98452331d1fb180cdfefe000000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/three 9 def
end
SBVPMX+Helvetica /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero /one /two /three /four /five /.notdef /seven /eight /nine /colon 2{/.notdef}rp /equal /.notdef /question /.notdef /A /.notdef /C /D /.notdef /F /.notdef /H /I /J 3{/.notdef}rp /N /O 2{/.notdef}rp /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf196.105 502.557 mo(3,231 kg CO)[6.32085 3.16042 6.32085 6.32085 6.67326 3.04672 5.6842 6.44591 3.04672 8.20802 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf88.4842 525.294 mo(June)[5.68421 6.32084 6.32084 0 ]xsh.365667 .295354 .300633 .000549325 cmyk
YYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf113.495 525.294 mo(, )[3.78568 0 ]xsh120.316 525.294 mo(7 trips = )[6.82105 3.04673 3.16042 3.7856 2.52379 6.32085 6.18442 3.04674 6.82106 0 ]xsh.463905 .383337 .388098 .0267033 cmyk
YYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf165.032 525.294 mo(907 kg CO)[6.32085 6.32083 7.0598 3.04672 5.68422 6.44589 3.04672 8.20801 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 4600 27 <000100970000061705bd001300cb405944014b03020601090316011903d7
010513011c03140b1b0c57015803d401db03d40bdb0c0a040a040d450286
02045102970202290a280d380a380d4702570276020725640d0a02031203
01020b0c120306081517171a040405b8019b400d0a1f030b06fd0c0102fd
0d1f12b8019bb6130019147670182b4e10f43c4dfde419f43939f4393918
e4fd3c4e10456544e6003f173c3f3c1217394b5279b10d0cb801aab40201
020a0bb801aab202020387054d2e7afd047dc487052e7afd047dc4313000
5d727101725d71132109012111231134363501230115141615112397011d
01a601a3011abd04fe5dc5fe5a05be05bdfb2604dafa4303632dd077fb29
04d72d36dd34fc9d0000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/M 27 def
end
SBVPMX+Helvetica /Encoding get
dup 77 /M put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 10{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero /one /two /three /four /five /.notdef /seven /eight /nine /colon 2{/.notdef}rp /equal /.notdef /question /.notdef /A /.notdef /C /D /.notdef /F /.notdef /H /I /J 2{/.notdef}rp /M /N /O 2{/.notdef}rp /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf88.4842 548.031 mo(May)[9.46981 6.32084 0 ]xsh.365667 .295354 .300633 .000549325 cmyk
YYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf110.463 548.031 mo(, )[3.78568 0 ]xsh117.284 548.031 mo(3 trips = )[6.82105 3.04673 3.16041 3.78561 2.52379 6.32083 6.18443 3.04674 6.82104 0 ]xsh.463905 .383337 .388098 .0267033 cmyk
YYMPBE+Helvetica*1 [11.3684 0 0 -11.3684 0 0 ]msf162 548.031 mo(1,731 kg CO)[6.32085 3.16042 6.32085 6.32083 6.67328 3.04672 5.68422 6.44588 3.04675 8.20801 0 ]xsh.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf307.516 560.157 mo( )shYYMPBE+Helvetica*1 [14.4 0 0 -14.4 0 0 ]msf33.9158 604.115 mo(Total carbon)[8.79829 8.0064 4.0032 8.0064 3.7728 3.8016 7.2 8.00639 4.7951 8.00639 8.0064 0 ]xsh.254093 .200656 .205875 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [14.4 0 0 -14.4 0 0 ]msf115.011 604.115 mo( for all your trips to date:)[3.80159 4.0032 8.00641 5.4287 3.80159 8.00639 3.19681 3.94559 3.80161 7.20001 8.00639 8.00639 4.82388 3.80161 4.0032 4.79509 3.19681 8.00639 7.28639 3.80159 4.00322 8.1216 3.80159 8.00639 8.00641 4.0032 8.00638 0 ]xsh.633204 .553582 .545251 .294499 cmyk
YYMPBE+Helvetica*1 [14.4 0 0 -14.4 0 0 ]msf360.568 604.115 mo(5,871 kg CO)[8.00638 4.0032 8.00638 8.00644 8.35199 3.80157 7.19998 8.71207 3.80157 10.3968 0 ]xsh.254093 .200656 .205875 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 104 2 <0001009c0371015205bd000300264013029d03000517171a002903190405
c121bb48182b2b4ef44dfd4e456544e6003f4ded31300103230301522174
2105bdfdb4024c00>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/quotesingle 2 def
end
SBVPMX+Helvetica /Encoding get
dup 39 /quotesingle put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 6{/.notdef}rp /quotesingle 3{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero /one /two /three /four /five /.notdef /seven /eight /nine /colon 2{/.notdef}rp /equal /.notdef /question /.notdef /A /.notdef /C /D /.notdef /F /.notdef /H /I /J 2{/.notdef}rp /M /N /O 2{/.notdef}rp /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [9.85263 0 0 -9.85263 0 0 ]msf33.9158 616.999 mo(All of Dopplr's carbon calculations are provided by )[6.57178 2.18729 2.61095 3.03461 5.47806 2.85726 3.03461 7.11359 5.47807 5.47806 5.47807 2.18729 3.28085 1.88179 5.47807 3.03461 4.92632 5.47806 3.28086 5.47807 5.47806 5.66525 3.03461 4.92632 5.47807 2.18727 4.92633 5.47806 2.18729 5.47806 2.73903 2.18729 5.47806 5.47806 4.98543 3.03461 5.47806 3.28085 5.63571 3.03462 5.47806 3.28087 5.47804 4.92632 2.1873 5.47806 5.47806 5.5766 3.03461 5.47806 5.13322 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 4072 22 <000200af000004ed05bd000b000c004e4024071e04040b031e0100020908
1e0a0b080c020c0c02000669023b091a0e03082500190d0eb8010bb32195
89182b2b4ef44dfd3c4e10f64df4e41112392f003f3f3cfd3c3f3ced1239
2ffd313013211521112115211121152101af042ffc93032bfcd5037cfbc2
021f05bdb4fe42aafe0eaf05bd000000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/E 22 def
end
SBVPMX+Helvetica /Encoding get
dup 69 /E put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 6{/.notdef}rp /quotesingle 3{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero /one /two /three /four /five /.notdef /seven /eight /nine /colon 2{/.notdef}rp /equal /.notdef /question /.notdef /A /.notdef /C /D /E /F /.notdef /H /I /J 2{/.notdef}rp /M /N /O 2{/.notdef}rp /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [9.85263 0 0 -9.85263 0 0 ]msf259.011 616.999 mo(AMEE)[6.57178 8.20718 6.57178 0 ]xsh.254093 .200656 .205875 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [9.85263 0 0 -9.85263 0 0 ]msf287.053 616.999 mo(.)shgrestore
.55761 .472114 .467414 .125368 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 3324 19 <000300970000050405bd000a00150028008240385a0d5a116a026a0d6a11
7a02772107490d4811021d081f0f041f131e000027081e17020b1e270804
311b690f31231a2a091525281619292ab8015fb3217666182b2b4ef43c4d
fd3c4e10f64dedf4ed003ffd3fed12392ffd390111123931304379401218
1a0508192506260718042b01051a082b01002b012b2b2b8181015d5d0132
373635342726232111013237363534272623211103212017161514070607
16171615140706290102c47e466e754282fe9d01adb74e318f4c7dfe75c3
027701026d404f294d7138635985fedefd93035023378f90321cfe39fd5a
6a435fa03a1ffdfb05139a5b778b592f272b3660a98e73ac>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/B 19 def
end
SBVPMX+Helvetica /Encoding get
dup 66 /B put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 6{/.notdef}rp /quotesingle 3{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero /one /two /three /four /five /.notdef /seven /eight /nine /colon 2{/.notdef}rp /equal /.notdef /question /.notdef /A /B /C /D /E /F /.notdef /H /I /J 2{/.notdef}rp /M /N /O 2{/.notdef}rp /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf180.947 12.199 mo(FOR ROBERT)[5.55682 7.0757 7.07571 2.28276 6.56641 7.07571 6.06625 6.06625 6.56642 0 ]xsh.156741 .118563 .123629 3.0518e-05 cmyk
%ADOBeginSubsetFont: JXRAAA+TimesNewRomanPSMT Initial
ct_T42Dict begin
0.137 -0.215 0.637 0.691
 256 array 0 1 255 {1 index exch /.notdef put} for  /JXRAAA+TimesNewRomanPSMT
Type42DictBegin
[<00010000000b000b000b000b63767420fe30def0000000bc000007da6670
676d87e4a70600000898000005b1676c796643a6a18d00001e4c0000016c
68656164f8aeed6d00000e4c000000366868656112ef092700000e840000
0024686d74780a10023700000ea8000000086c6f636100b6003c00000eb0
000000066d617870065906ad00000eb8000000206e616d65fe4e27490000
0ed80000002a7072657039e6c80d00000f0400000f456764697200000000
0000000000000000058e0000054c001f054c001c0394001b0000ffe10000
ffe40000ffe8fe4afffc056b0023fe6affe00313000000ad000000ad0000
000000250096009f002400f0013100c200c0004a00a60041005000940047
00cf00af000e007901cb00040023004400a80025011f0002004600170105
009900d9005c007200e500e00028004b00de011200240045007000160039
ffe90016004b0088ffb900d9000a004300ae00ba016c0153002f00430048
022c012b0025008fffc000170028ffcdffd80025009d00e50124ffb10048
009d00e600110027007f00910012006a00cafffc00000024006200a7017c
01e900210060008b0434048aff6b003b00b500d5014bff6b004d007905d8
09b5006c009100a3011701c0ffdfffe700be04010065007f008200880099
00b200c0022e034305a000200026003d004e00610065007b00d901130131
0340ff27ff42ff99004e00a700f2022b02c603070011002b0049005f008d
00a100af00d600e400f5010b0135019d01ab01ab01d101ee05d80000004b
0075007a0080009d00a600a700ac00b90131013102170217000200170029
00550080008f00a500b200b300d0014b015901c001c103a50530fe3fff14
ff15ffe7ffff002a00580099009f00c100e400f40130015901ab01ab0322
0374041e04740532fd81004d0064009c00d000d100d600de00e500f500f8
012a012a01e1027e027fff57ffa8ffe500000008001f00380051005a006f
0076007700a200c000c200c400f101fb0209027e02cf04c5057a05f0ff92
001200260042004b004f005100530064008b00ae00b200b800b800d600f5
0111012001310138014e01520167018f019601b801d901d9020602210271
02ea03b003cb03dc04360505ff3a00120016001e001f002300570068006c
007e0088009200a500a800c500c901150126012d013001d601d901f6023b
0244024402a302cf02de0385038f04fc0586fee0feebfefbff8a00070044
00470058007500aa00e400ef011601200129016a017301e3027e029002b4
030e0310032303350341035403590388039403c803ce047204ab04da0549
056105ab0761fe6efed1ff4bff84000000010006001e0027002c00340037
00620066006a006b006c007000700072007c0081008a008e0091009200a0
00ab00b800bf00c900d500dd00ec00f40100012101300169016a016d017c
0185018e018e019901ac01c101c501c901e101f601f601f6022202220228
0236023f02430246026702850285029402d002d602e8031c0363037f0380
0380039e03b603d90400040404ff053205320548058b05a706cb07280748
076208ccfcedfd2afd59fddefe00fe1afe5bfe96fec1fee7ff56ff790001
0025002d002e007c00870091009900a100a500a500aa00af00b600c600cc
00d700dd00ec00f201020105011701180123012a012c0131013f01470149
0149014d01510151015501550157015a015a0161016201680168017f0180
018201830184018d0195019501950198019901a501a901b601b601b701ba
01ba01d501df01e601ea01f2020002000203021702250227022f02390243
02430247024f025202520267026f026f027002720276027e02a702b302b9
02d603130325032d03610371039903ae03c203d403f90402042c042f043c
04560467048304cf04d104d804fb051f05450568059e05c2061b06340655
066a069806af06e806fc070607500762077c07d407ff082500ad00c700aa
00b5000000000000000000000000002f06cf01730514047802df009c0018
037005870155002500060254036c038e03d2056601f0032001da018a0369
036bffa3034602f8036f015602bf0122031f053a0366008c00ff01ab02e1
02f402e70415015402e90128049101b7026f034302060000000005d30415
048305e8000002d7003a027d01c002c503830383ffbd003a059e01df059e
02d1002004e0021300df01c001870297000000ce0269028b0058043405fb
0069015a01a905780182013e0288012a03d4049e00e5032302f301f00196
007a00cd014a0424025e023901ab00cf00fd011e00ed0171007001950040
01bb01dd01b8000101a803a7014c020c018d01b0020d0137010000cd0321
01d4030a00590000000001260215015002f0025503bc06d00335010100d0
00d2007a01030130007c000000000000000000fe006e006600940227002b
0045004d00d3013200180097004100f4febcffe9001605d8058b009100a1
032c00520030005d02cb003a009200e500e500580086003200ba00990088
00300298007cff8001640028004d0065000200b8016a002f010b00110017
0100007f00040016022200a6005f000000f8000a00ca0043004b01ee0077
012000f401c00028045f0000008c044500c20060007b008b008b0064005d
00c2009c009206b505d3004f011700000420fe9e00cc00dc005e004600e3
0032001a003c0091005a00a1042c0041002000490071009c009cfe480040
0040008600cb0102007d003a003e006a0050044800290096ff6a00970069
00e0004c001b00c90069ff970043ffbd0052ff83ff8b005fffa1ff5c0067
0053ffa8002a0076ffb20036008705590256052b043400de00c901c40048
00db018b00b3004800da01160125011800ea00ea00ae0000003e05bb008a
04d70053003fff8cffd500150028002200990062004a00e4006d00ee00e5
004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a0068ff6c
004f00bc00a5070500ab0080001e05a50025008b04660230006900290016
012f0080005c059f000040425554403f3e3d3c3b3a393837363534333231
302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19181716141312
11100f0e0d0c0b0a090807060504030201002c4523466020b02660b00426
2348482d2c452346236120b02661b004262348482d2c45234660b0206120
b04660b004262348482d2c4523462361b0206020b02661b02061b0042623
48482d2c45234660b0406120b06660b004262348482d2c4523462361b040
6020b02661b04061b004262348482d2c0110203c003c2d2c20452320b0cd
442320b8015a51582320b08d44235920b0ed51582320b04d44235920b090
51582320b00d44235921212d2c20204518684420b001602045b04676688a
4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b01723
70b101173e01b0172370b10217453ab10200080d2d2c45b01a234445b019
23442d2c2045b00325456164b050515845441b2121592d2cb00143632362
b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a2d2c20
69b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0036159
2d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2cb01243
588745b0112bb0172344b0177ae41b038a45186920b01723448a8a8720b0
a05158b0112bb0172344b0177ae41b21b0177ae45959182d2cb002254660
8a46b040618c482d2c4b53205c58b002855958b00185592d2c20b0032545
b019234445b01a23444565234520b00325606a20b009234223688a6a6061
20b01a8ab000527921b21a1a40b9ffe0001a45208a54582321b03f1b2359
61441cb114008a5279b31940201945208a54582321b03f1b235961442d2c
b110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b2d2cb10c0d
432343650b2d2cb10e0f432343650b2d2cb11011432343650b2d2c4b5258
45441b2121592d2c0120b003252349b04060b0206320b000525823b00225
3823b002256538008a63381b212121212159012d2c4bb06451584569b009
43608a103a1b212110592d2c01b005251023208af500b0016023edec2d2c
01b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20
b001600110203c003c2d2c20b001610110203c003c2d2cb02b2bb02a2a2d
2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b802b023701020b802
b04520b0005058b00161593a2f182d2c21210c6423648bb84000622d2c21
b08051580c6423648bb82000621bb200402f2b59b002602d2c21b0c05158
0c6423648bb81555621bb200802f2b59b002602d2c0c6423648bb8400062
6023212d2cb4000100000015b00826b00826b00826b008260f1016134568
3ab001162d2cb4000100000015b00826b00826b00826b008260f10161345
68653ab001162d2c4b53234b515a5820458a60441b2121592d2c4b545820
458a60441b2121592d2c4b53234b515a58381b2121592d2c4b5458381b21
21592d2c014b53234b515ab00225b00425b006254923451869525a58b002
25b00225b00525462345696048592121212d2cb0134358031b02592d2cb0
134358021b03592d2c4b54b012435c5a58381b2121592d2cb012435c580c
b00425b00425060c6423646164b807085158b00425b00425012046b01060
482046b0106048590a21211b2121592d2cb012435c580cb00425b0042506
0c6423646164b807085158b00425b00425012046b8fff060482046b8fff0
6048590a21211b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53
234b515a58b03b2b1b2121592d2c4b53234b515ab012435c5a58381b2121
592d2c0c8a034b54b00426024b545a8a8a0ab012435c5a58381b2121592d
2c462346608a8a462320468a608a61b8ff8062232010238ab9035803588a
70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a2d2cb102
0042b123018851b1400188535a58b910000020885458b202010243604259
592d2cb0024354584b53234b515a58381b2121591b21212121592d000000
000100000005028f7e1db19c5f0f3cf50819080000000000c5a3d1060000
0000c5a3d106011bfe46051c058e00000009000100000000000000010000
0721fe4500571000fb74fadf100000010000000000000000000000000000
00020639011c03d7011b0000003c00b6000000010000000200f20002009d
000700020010002f0056000005e204eb0005000200000001001200010000
00000006001800005849475957542b54696d65734e6577526f6d616e5053
4d540000b9005403ecb3032a1f3f411503e4006003e9009f03e500df03e5
0004001003e4001003e5003f03e5007003e400ff03e40005ffc003e1b345
453240b803e1b32b2e3240b803e1b2282932b9ffc003e1b21a1c32bd03e1
02ac0027001fffc003dfb2161b32b9ffc003deb2424232b9ffc003deb236
3832b9ffc003deb32a2d32df410a03de00ef03de000203de03df0028001f
ffc003dfb3282e32f0410d03df0001037e000f0101001f00a003dd00b003
dd0002004003dab32426329fbf03cc000103ca03c90064001fffc003c9b2
0d1132410a03c703b70012001f03b603b50064001fffc003b5b30e113200
4173038d000100c0038d00d0038d00e0038d00f0038d0004006f03a7007f
03a7008f03a700af03a70004000f03a7001f03a7002f03a7004f03a70004
03ab03ab00ef03a50001000f03a5002f03a5006f03a5008f03a500040054
03aa0001006b03aa000103a8036a0022001f038c03940015001f038b0393
0015001f03a40393001a001f03a20394001e001f03a10393001e001f039f
0394001e001f039b0394001a001f039a0393001e001f039903940016001f
039803940016001f03970393001b001f03960394001b001f03950393001b
001f03760375001a001f03740375001a001f03a00373b21e1f10411e0393
002003930030039300030020039400300394004003940003000003940001
0383036c001e001f03b1036c0032001f036d036c0032001fffc0037db221
2332b9ffc0037db3171932a0410a037d00b0037d00c0037d00d0037d0004
ffc0037cb2212332b9ffc0037cb3171932a0412d037c00b0037c00c0037c
00d0037c0004003003730040037300020000037300100373002003730003
00e0037300f00373000200b0037300c0037300d003730003008403730090
037300a0037300030377036a0029001f0389036ab2281f40b80367b33940
323fbb0366000100400366b3191d328fbb0366000100400366b3090a3240
b80366b3090e3240b80366b3090f323fbb0365000100400365b3090c3240
b80365b31a1d3240b80365b3090e326b410e0363007b0363000200140363
00240363003403630044036300040363b2242f1fba034e006d0800400e1f
7f027f037f047f050430440112bf033200500800001f0012032d003c0800
40291f5f3c01376009700980090310092009300940095009056f037f038f
03031f032f033f034f035f0305b8ffc0b2073a33b8ffc04047063a33900b
a00bb00bc00bd00b05b006c006d006e006f0060520063006400650066006
700680069006a006099006900702600b700b800b03100b200b300b400b50
0b051f0701a0418503620001000003620010036200700362009003620004
00f0035f00010020035e0020035f0030035f0040035e00040000035e0000
035f0010035f00d0035e00e0035f00050010030f0020030f0030030f00d0
030f00e0030f00050000030f0010030f0050030f0060030f0070030f00d0
030f00060000030f0010030f0020030f0030030f00e0030f00f0030f0006
030f00270000030e0030030e000200e0030e00f0030e0002030e004a00e0
030d00f0030d0002030d002700d002fc0001001002fc002002fc005002fc
000300d002fc00e002fc0002000002fc001002fc002002fc003002fc0050
02fc006002fc000600e002fc00f002fc0002002002fc003002fc004002fc
000302fc406127c02901b02901a02901902901403c3f413240223f413212
12125f235f255f285fa5046f236f256f286fa5044f234f254f284fa5043f
233f253f283fa5042f232f252f282fa5041f231f251f281fa5048f4caf4c
bf4ccf4c045f4c6f4c7f4c0337b8ffc0b3b22b3032b8ffc0b3b2222532b8
ffc0b5b2191a32370f413b02af0001005f02af009f02af00df02af000300
1f02af002f02af003f02af006f02af000402af02af001f02ad002f02ad00
3f02ad004f02ad005f02ad000500df02ad0001000f02ad001f02ad003f02
ad005f02ad009f02ad0005005f02ad00df02ad0002000f02ad001f02ad00
3f02ad0003004002acb23a334f414a02ac005f02ac009f02ac0003002f02
ac003f02ac0002000f02ac003f02ac00af02ac000300b002ac00e002ac00
02004f02ac005f02ac00a002ac0003001f02ac002f02ac003f02ac000300
0f035a0001000f035a001f035a003f035a005f035a0070035a000500cf03
5700df03570002000f0357001f03570070035700af03570004035a035a03
57035702ad02ad02ac02ac032c400d31151f001616000000121108104110
020c004a000d01a8004a000d0198004a000d0189004a000d013f004a000d
0124400e4a0df64a0dbe4a0d864a0d274a0dbe02280041000d0194004100
0d0121400b410db4410d4f410d29410d411002170021000d02150021000d
02060021000d01eb0021000d014e0021000d012c4014210df9210df3210d
f1210d9d210d71210d3d210d4110021c001f000d0214001f000d020b001f
000d0196001f000d014a001f000d0126400b1f0dc61f0d571f0d371f0d41
0d019e0141000d00420141000d001e0141000d001b0141000d01f2b40f44
0f0009bb01f20044000d0201b23c291fb80200b23c291fb801ffb23c411f
b801feb23c471fb801fdb23c9e1fb801fab23c931fbc01f9010f0101001f
01f6b224e41f411501f401490401001f01f301490401001f01f1014900ab
001f01f001490067001f01a6003c0125001f01a4b23c811f411501a3010f
019a001f01a200220801001f01a100500401001f019f0149019a001f019d
01490067001f019cb22c621fb8019bb22c791fbc019a002c0101001f0197
b22ce41fb80193b22c891fb80192b22c6c1fb8018fb2259e1fb8016ab23c
2a1f4111016700240201001f0163002502ab001f014c010f019a001f0148
0149006c001f0147b22c891fb80145b22c9e1fb80144b22c791fb80143b2
23311fb80127b23c811fbc012300500101001f011fb223e41f4115011d00
23019a001f011c00230801001f011b00250801001f010e010f0401001f01
0d00220401001f0108b223811fb80106b425e41ff73cbb0125001f00f501
0fb29e1fe3bc01490156001f00e20149b2ab1fd1b901490401b21fcf2cb8
0125b61fce23bb1fc524b80156b21fc02cb80801b21fbf2cb80201b51fb1
24e41fb0b901490201b61faf2c671fad23b80801b21fa523b80201400b1f
9f3c2d1f9b235a1f9925b80201b21f812cbc0401001f006d010f0156400b
1f592c3e1f4c3cab1f4625b80101b21f403cb80125400a1f3a23721f393c
ab1f38b80149b3ab1f3124b80401b21f3025b802abb61f2a24e41f2623b8
0156b21f5537ba023500070175402c0774076207560751073b0733072d07
20071d071c071408120810080e080c080a080808060804080208000814b8
ffe0402b0000010014061000000100060400000100041000000100100200
0001000200000001000002010802004a00b013034b024b534201b0124b00
4b5442b0372b4bb807ff52b0382b4bb008505b58b101018e59b0382bb002
88b801005458b801ffb101018e851bb0124358b90001012f858d1bb90001
017c858d5959014bb0c063004b6220b0f65323b8010a515ab00523421800
16763f183f123e113946443e113946443e113946443e113946443e113946
60443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b
2b2b2b181db0964b5358b0aa1d59b0324b5358b0ff1d594bb04753205c58
b90271026f4544b90270026f45445958b9017a0271455258b90271017a44
59594bb04753205c58b9002202704544b9003c027045445958b901b30022
455258b9002201b34459594bb04c53205c58b9014900224544b122224544
5958b901c20149455258b9014901c24459594bb06753205c58b900240271
4544b90050027145445958b9021e0024455258b90024021e4459594bb802
0153205c58b9010f00224544b1222245445958b90c00010f455258b9010f
0c004459594bb01c53205c58b125254544b12c2545445958b13725455258
b125374459594bb0ab53205c58b125254544b1232545445958b901590025
455258b9002501594459594bb8010153205c58b125254544b12825454459
58b902080025455258b9002502084459592b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b65422b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b01b361dc64634565234560
23456560234560b08b766818b080622020b164dc4565234520b003266062
636820b003266165b0dc236544b064234420b161634565234520b0032660
62636820b003266165b063236544b0612344b10063455458b163406544b2
6140614523614459b3a67f434b456523456023456560234560b089766818
b080622020b1437f4565234520b003266062636820b003266165b07f2365
44b043234420b1a64b4565234520b003266062636820b003266165b04b23
6544b0a62344b1004b455458b14b406544b2a640a645236144594b524201
4b5058b108004259435c58b108004259b3020b0a124358601b2159421610
703eb0124358b93b21187e1bba040001a8000b2b59b00c2342b00d2342b0
124358b92d412d411bba04000400000b2b59b00e2342b00f2342b0124358
b9187e3b211bba01a80400000b2b59b0102342b0112342002b0018456944
456944456944456944737373747373737475752b73737474751845694473
73742b4bb021534bb046515a58b03cb03c45b040604459012b2b2b2b7575
75757575757543584010bf3ccf3c026f3c7f3c8f3c9f3caf3c0575755943
584012bf22cf22025f226f227f228f229f22af2206757559435c58b6403c
9f22ef220375592b2b017474747445447373747475754544734544737445
44737475737373737300757575737575752b2b757575752b752b43584122
0063032d00010003032d0013032d0023032d0033032d0053032d000500c3
032d00d3032d00e3032d00f3032d00040083032d0093032d00a3032d00b3
032d0004032d032d4518694474747575592b4358b900180332b330353238
b80332b361663238b80332b3535a3238b80332b3454e3238b80332b33c41
3218b80332b23f330a410f0332000100ba033200ca033200da033200ea03
3200fa03320005033203324518694474752b2b2b2b2b2b597300732b012b
7575002b2b2b74002b2b2b732b74012b002b2b017373737474732b2b0073
2b2b002b2b2b017374732b012b2b012b2b2b2b2b2b2b2b2b2b2b2b2b2b00
017375007373004569440073730173742b2b2b2b2b732b00732b752b2b73
2b2b2b2b2b2b2b2b2b73742b2b00000000>
[365 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 120 1 <0001011bfe460349058e00260082404c78037028025b0354126b03641264
137412061e0b686f0a010a0a0b0a15681411006801131ead0b0a7c043824
2418073821210e381b3e113818b315000101141420153015401550157015
0515ba01250028016bb17a182b10f65d3c103c103c10f4edf4ed3c10ed10
3c10fdf43ced003fed3fed1112392f5ded393130005d015d011526263534
363534262735363635342635343637150606151416151406071616151406
1514160349a7d12e796b6b792ed1a7756d2d949390972d6dfe692317e189
48bf35487d0e290e7c4935be4988e216231c7f4c3bc14465be3435c26544
c13b4c7f>JXRAAA+TimesNewRomanPSMT AddT42Char 
1 0 0 <0002011c0000051c050000030007004db10201bb02be0006000702bfb200
0504b802beb403000a0704b802beb5010019080605bf02be000200030129
0009016b015e00182b10f63cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd
3c31302111211125211121011c0400fc2003c0fc400500fb002004c00000
>JXRAAA+TimesNewRomanPSMT AddT42Char 
JXRAAA+TimesNewRomanPSMT /CharStrings get begin
/braceleft 1 def
end
JXRAAA+TimesNewRomanPSMT /Encoding get
dup 123 /braceleft put
pop
end
%ADOEndSubsetFont
/YYMPBG+TimesNewRomanPSMT /JXRAAA+TimesNewRomanPSMT findfont ct_VMDictPut/YYMPBG+TimesNewRomanPSMT*1 [123{/.notdef}rp /braceleft 132{/.notdef}rp]YYMPBG+TimesNewRomanPSMT nfYYMPBG+TimesNewRomanPSMT*1 [30.3158 0 0 -30.3158 0 0 ]msf403.011 66.7674 mo({)sh133.2 217.589 mo
594 217.589 li
594 200.157 li
133.2 200.157 li
cp
.0112306 3.0518e-05 .195956 3.0518e-05 cmyk
f
.55761 .472114 .467414 .125368 cmyk
%ADOBeginSubsetFont: SBVPMX+Helvetica AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal SBVPMX+Helvetica gcheck setglobal} if
1 5304 30 <000200af000004f805bd000a001400614035690c6912790c7a1204481458
1468147a140407081e1110100a010e0f1e0100020a080206120c04091414
31041a160f092500191516b8010bb3219589182b2b4ef44dfd3c4e10f64d
fd11121739003f3f3cfd3c1012392f3cfd3c015d31305d13213216151406
2321112300272623211121323635af0295c4f0d6defe32c70380784273fe
74018c86a705bdddc8acfffd9304b93a1ffe03729000>SBVPMX+Helvetica AddT42Char 
SBVPMX+Helvetica /CharStrings get begin
/P 30 def
end
SBVPMX+Helvetica /Encoding get
dup 80 /P put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/YYMPBE+Helvetica*1 [32{/.notdef}rp /space 6{/.notdef}rp /quotesingle 3{/.notdef}rp /plus /comma /.notdef /period /.notdef /zero /one /two /three /four /five /.notdef /seven /eight /nine /colon 2{/.notdef}rp /equal /.notdef /question /.notdef /A /B /C /D /E /F /.notdef /H /I /J 2{/.notdef}rp /M /N /O /P /.notdef /R /S /T /U /V /W /.notdef /Y 7{/.notdef}rp /a /b /c /d /e /f /g /h /i /.notdef /k /l /m /n /o /p /.notdef /r /s /t /u /v /w /x /y 134{/.notdef}rp]YYMPBE+Helvetica nfYYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf136.232 211.525 mo(Please visit )[6.06625 2.01904 5.05667 5.05667 4.54736 5.29314 2.28279 4.54736 2.01903 4.54738 2.01903 2.78299 0 ]xsh.544701 .232364 .0248112 3.0518e-05 cmyk
YYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf184.737 211.525 mo(our new shop)[5.05667 5.05667 3.5287 2.28278 5.05667 5.05667 7.31218 2.28278 4.54736 5.05667 5.05667 0 ]xsh.55761 .472114 .467414 .125368 cmyk
YYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf240.821 211.525 mo(, for things that make travel better.)[3.02856 2.28276 2.52834 5.05667 3.78334 2.28278 2.52835 5.05667 2.01901 5.05667 5.05667 5.29315 2.28278 2.52835 5.05667 5.05667 3.27411 2.28278 7.57584 5.05667 4.54736 5.55688 2.28278 2.52835 3.02847 5.05667 4.54736 5.05667 2.51926 2.28278 5.05667 5.05667 2.52832 2.52835 5.05667 3.02847 0 ]xsh580.358 204.704 mo
590.968 204.704 li
590.968 203.946 li
580.358 203.946 li
cp
.365667 .295354 .300633 .000549325 cmyk
f
580.358 214.557 mo
590.968 214.557 li
590.968 213.799 li
580.358 213.799 li
cp
f
580.358 214.557 mo
581.116 214.557 li
581.116 203.946 li
580.358 203.946 li
cp
f
590.211 214.557 mo
590.968 214.557 li
590.968 203.946 li
590.211 203.946 li
cp
f
.365667 .295354 .300633 .000549325 cmyk
YYMPBE+Helvetica*1 [8.33684 0 0 -8.33684 0 0 ]msf583.39 212.283 mo(x)shYYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf194.589 362.346 mo(2)sh.463905 .383337 .388098 .0267033 cmyk
YYMPBE+Helvetica*1 [6.06316 0 0 -6.06316 0 0 ]msf574.295 379.02 mo(2)sh.365667 .295354 .300633 .000549325 cmyk
YYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf184.737 467.694 mo(2)sh.463905 .383337 .388098 .0267033 cmyk
YYMPBE+Helvetica*1 [6.06316 0 0 -6.06316 0 0 ]msf574.295 484.367 mo(2)shYYMPBE+Helvetica*1 [9.09474 0 0 -9.09474 0 0 ]msf260.526 504.831 mo(2)sh220.358 527.567 mo(2)sh226.421 550.304 mo(2)sh.633204 .553582 .545251 .294499 cmyk
YYMPBE+Helvetica*1 [12.1263 0 0 -12.1263 0 0 ]msf442.421 607.146 mo(2)shgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/CSD [/0 /1 ]]
[/Pattern [/535434496.0 /535434692.0 /569355468.0 /569355664.0 ]]
] del_res
/YYMPBF+Helvetica-Bold*1 uf/YYMPBF+Helvetica-Bold uf/KUDAAA+Helvetica-Bold uf/YYMPBG+TimesNewRomanPSMT*1 uf/YYMPBG+TimesNewRomanPSMT uf/JXRAAA+TimesNewRomanPSMT uf/YYMPBD+LucidaGrande*1 uf/YYMPBD+LucidaGrande uf/KVXQMX+LucidaGrande uf/YYMPBE+Helvetica*1 uf/YYMPBE+Helvetica uf/SBVPMX+Helvetica ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
