%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Visio-TDDEpisode.vsd)
%%Version: 1 5
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 17:02:34 07/08/05
%%For: (hongbing)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 121 401 471 699
%%HiResBoundingBox: 121.0 401.0 471.0 698.640015
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf HB  0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: file Pscript_T42Hdr PSVER
userdict /ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
  version
  cvi
  2015
  ge
} bind def
/AllocGlyphStorage
{
  Is2015?
  {	
		pop
  } 
  { 
		{string} forall
  } ifelse
} bind def
/Type42DictBegin
{
	25 dict begin
  /FontName exch def
  /CharStrings 256 dict 
	begin
		  /.notdef 0 def
		  currentdict 
	end def
  /Encoding exch def
  /PaintType 0 def
  /FontType 42 def
  /FontMatrix [1 0 0 1 0 0] def
  4 array  astore cvx /FontBBox exch def
  /sfnts
} bind def
/Type42DictEnd  
{
	 currentdict dup /FontName get exch definefont end
	ct_T42Dict exch
	dup /FontName get exch put
} bind def
/RD {string currentfile exch readstring pop} executeonly def
/PrepFor2015
{
	Is2015?
	{		  
		 /GlyphDirectory 
		 16
		 dict def
		 sfnts 0 get
		 dup
		 2 index
		 (glyx)
		 putinterval
		 2 index  
		 (locx)
		 putinterval
		 pop
		 pop
	}
	{
		 pop
		 pop
	} ifelse			
} bind def
/AddT42Char
{
	Is2015?
	{
		/GlyphDirectory get 
		begin
		def
		end
		pop
		pop
	}
	{
		/sfnts get
		4 index
		get
		3 index
	  2 index
		putinterval
		pop
		pop
		pop
		pop
	} ifelse
} bind def
end
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.19 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.19 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
dup { cid_extensions /cid_UpdateDB known and } if
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
MaskDict /DataSource get dup type /filetype eq { closefile } { pop } ifelse
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1250 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-14, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:6c7faec6-3c29-4592-a66a-337ec9b118fd' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0.1 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:6c7faec6-3c29-4592-a66a-337ec9b118fd' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreatorTool='PScript5.dll Version 5.2.2' xap:ModifyDate='2005-07-08T17:02:23-10:00' xap:CreateDate='2005-07-08T17:00:07-10:00' xap:MetadataDate='2005-07-08T17:02:23-10:00'></rdf:Description>
<rdf:Description rdf:about='uuid:6c7faec6-3c29-4592-a66a-337ec9b118fd' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:a74181b1-8089-4b8b-a388-12c8f48dddf2'/>
<rdf:Description rdf:about='uuid:6c7faec6-3c29-4592-a66a-337ec9b118fd' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Visio-TDDEpisode.vsd</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>hongbing</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
121 401 350 298 rectclip
/N12 [/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/ColorSpace defineRes pop

121.0 401.0 350.0 297.640015 re
W
n
1 J
1 j
0.48 w
n
136.800003 684.0 m
194.400009 684.0 l
198.419998 684.0 201.600006 687.179993 201.600006 691.200012 c
201.600006 695.159973 198.419998 698.400024 194.400009 698.400024 c
136.800003 698.400024 l
132.839996 698.400024 129.600006 695.159973 129.600006 691.200012 c
129.600006 687.179993 132.839996 684.0 136.800003 684.0 c
h
[/DeviceRGB] cs 0.0 0.0 0.0 sc

S
%ADOBeginSubsetFont: ArialMT Initial
ct_T42Dict begin
-0.664 -0.324 2.027 1.004
 256 array 0 1 255 {1 index exch /.notdef put} for  /ArialMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320cdf326b000000cc000000566376
74209670d27600000124000006306670676dcc79599a000007540000066e
676c7966aa98c47e00006e640003472668656164cd0dee9e00000dc40000
003668686561126d11aa00000dfc00000024686d7478caa2734000000e20
000014a06c6f6361097890ec000022c0000014a46d61787009e30c950000
3764000000206e616d65960adc280000378400002bdf7072657052fec4e9
0000636400000aff67646972000000000000000000000000000103880190
00050000059a05330000011b059a0533000003d1006602120805020b0604
02020202020400007a878000000000000008000000004d6f6e6f00400020
fffc05d3fe510133073e01b2400001ffffff0000bbc305ba001905ba001a
05a70019042600180000ffe70000ffe80000ffe7fe69ffe805ba0019fe69
ffe802ea000000b8000000b80000000000a800ad016900ad00bf00c201f0
001800af00b900b400c800170044009c007c009400870006005a00c80089
005200520005004400940119ffb4002f00a1000300a100cd00170057007e
00ba00160118ffe9007f008503d300870085000d002200410050006f008d
014cff75005c00df04830037004c006e00700180ff58ff8eff92ffa400a5
00b903c8fffd000b001a0063006300cdffee05d8ffdc002d005c00950099
00df019209b500400057008000b9039d0072009a035d0401ff67fffa0003
0021007700cd0004004d00cd01c0022b004c006500e70118017c034305d8
ffa3ffb0ffc40003001c005d0068009a00ba013501470221055cff4dffcd
0016002d00780080009900b200b600b600b800bd00da010c05f0ffa4fff0
0019002c0049007f00b400ce01c003fefd81fe3f00000005001800290039
0049006f00be00c700d0012301c1026f050c05320540057affd400140031
0055005700a700b400e601f7027e027e027f03c60446ff42000e00850091
00bf00c200c500e1011a012f014f01560229026f029e03720008002c0031
0031006400690089009800c700de012b01b6020c02cf03a304ab04fb061d
fee0ff0e00060026009b009d00c1010d011801200173018201d601e30243
025f029b02e2039404a904d20761001c005e006d008d00ab00f701120138
0151015b0168017c01870191019901cd01d001e802410254026b02ef0368
037103bd044204420453047304830586058b06e8fe58fec4fed1fef7ff32
ff860051007c008100910095009e00b400b900cf00d900d900df00e20105
010b010e010e012001210155017b017b017e018d01a201a801a901b401d0
01d001e201e901f201f501fb020002000206021b02210222022202230272
02770294029c02cf02cf02d002ec02f903170322032b0335033c0359036f
037103870390039003b503e1041a04cf04ff053205320596059f05a805ab
05c205f0060c0782080008ccfca3fd2afddefe00fe88fe96feb2feb4ffe1
00150019001a001c001f003c005100610061006a0078009600a500af00d3
010c0118011a012a013e014c0151015f016a0171017801820184019a01a5
01a801a901ae01bc01cd01d701ef0200020d021c02210222022e02350242
024f024f025e026502710290029202b402d602fa0307030b030f0315032a
0347035d036503740379039603b003cc03dd03e203f603fc03fc03ff040a
041f04220426042b0447045f0475049e04e704e7055c05cb05e5060a066d
068606b806f10736073e07500751075d078f07b607d4086000b600c300b5
00b700000000000000000000000001e00381034503b5008e0233041902ce
02ce002d005f0064034d023f000002a80188027d01b402240578063b023b
014e00f00426029402c6029f02f6023b034d014b0153006a023100000000
0000061404aa0000003c04c300ed04bc026502ce03b50078060c017e02ef
060c00b201000239000001c50330042b03cb00da03df010704a100db040a
011701ed02a70350010b01bd043e05580021039c00ae0371017d00b50245
00000afb088c012b014e01aa00870054013201f803ff0003024e00b40037
03e30083006b02d800ed00770088009701640467008e0033017c00e700a6
029e0329056e062a061501c90269048a021301b4000204a9000002390124
010305140084015d039a06ef02d9007500cf040a00de03ac04bc02cf02ae
034d04f005520168006d007d00860071ff810079055804d2016700030156
002504e00094007c033204210094007f0072005c002f00b6001800ba00b8
0041034d00720018001f004c016a01550099009a009a009800b200040078
006900140057006e00ce00b4065402b80067050e016500e7000004cbfe52
005affa60099ff67006eff92002dffd40087ff7c00b800a800e5008f00a8
0185fe7b0070001e00d900de014c054602cf0546ff2d028a02d902530296
00b700000000000000000000000000000125011800ea00ea00ae0046003e
05bb008a04d70053003fff8cffd500150028002200990062004a00e4006d
00ee00e5004803c00033fe4e02b1ff460370007905df0051ffa7ff1f010a
0068ff6c004f00bc00a507050061072b4043555441403f3e3d3c3b3a3938
373534333231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a19
1817161514131211100f0e0d0c0b0a090807060504030201002c45234660
20b02660b004262348482d2c452346236120b02661b004262348482d2c45
234660b0206120b04660b004262348482d2c4523462361b0206020b02661
b02061b004262348482d2c45234660b0406120b06660b004262348482d2c
4523462361b0406020b02661b04061b004262348482d2c0110203c003c2d
2c20452320b0cd442320b8015a51582320b08d44235920b0ed51582320b0
4d44235920b09051582320b00d44235921212d2c20204518684420b00160
2045b04676688a4560442d2c01b10b0a432343650a2d2c00b10a0b432343
0b2d2c00b0172370b101173e01b0172370b10217453ab10200080d2d2c45
b01a234445b01923442d2c2045b00325456164b050515845441b2121592d
2cb00143632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b0
0743650a2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364
615c58b00361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb017
23442d2cb01243588745b0112bb0172344b0177ae41b038a45186920b017
23448a8a8720b0a05158b0112bb0172344b0177ae41b21b0177ae4595918
2d2c2d2cb0022546608a46b040618c482d2c4b53205c58b002855958b001
85592d2c20b0032545b019234445b01a23444565234520b00325606a20b0
09234223688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a
54582321b03f1b235961441cb114008a5279b31940201945208a54582321
b03f1b235961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d
4323430b2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb1101143
2343650b2d2c4b525845441b2121592d2c0120b003252349b04060b02063
20b000525823b002253823b002256538008a63381b212121212159012d2c
4bb06451584569b00943608a103a1b212121592d2c01b005251023208af5
00b0016023edec2d2c01b005251023208af500b0016123edec2d2c01b006
2510f500edec2d2c20b001600110203c003c2d2c20b001610110203c003c
2d2cb02b2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76
b8022323701020b802234520b0005058b00161593a2f182d2c21210c6423
648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b59b0
02602d2c21b0c051580c6423648bb81555621bb200802f2b59b002602d2c
0c6423648bb84000626023212d2cb4000100000015b00826b00826b00826
b008260f10161345683ab001162d2cb4000100000015b00826b00826b008
26b008260f1016134568653ab001162d2c4b53234b515a5820458a60441b
2121592d2c4b545820458a60441b2121592d2c4b53234b515a58381b2121
592d2c4b5458381b2121592d2cb0134358031b02592d2cb0134358021b03
592d2c4b54b012435c5a58381b2121592d2cb012435c580cb00425b00425
060c6423646164b807085158b00425b00425012046b01060482046b01060
48590a21211b2121592d2cb012435c580cb00425b00425060c6423646164
b807085158b00425b00425012046b8fff060482046b8fff06048590a2121
1b2121592d2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b0
3b2b1b2121592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a03
4b54b00426024b545a8a8a0ab012435c5a58381b2121592d2c4b5258b004
25b0042549b00425b00425496120b0005458212043b0005558b00325b003
25b8ffc038b8ffc038591bb04054582043b0005458b00225b8ffc038591b
2043b0005458b00325b00325b8ffc038b8ffc0381bb00325b8ffc0385959
5959212121212d2c462346608a8a462320468a608a61b8ff806223201023
8ab902c202c28a70456020b0005058b00161b8ffba8b1bb0468c59b01060
68013a2d2cb1020042b123018851b1400188535a58b910000020885458b2
02010243604259b12401885158b920000040885458b2020202436042b124
01885458b2022002436042004b014b5258b2020802436042591bb9400000
80885458b202040243604259b94000008063b80100885458b20208024360
4259b94000010063b80200885458b202100243604259b94000020063b804
00885458b202400243604259595959592d2cb0024354584b53234b515a58
381b2121591b21212121592d2063000100000002fae15106facd5f0f3cf5
081b080000000000a2e3272a00000000b8118221faaffd67103a080c0000
0009000100010000251000010000073efe4e00431000faaffe33103a0001
000000000000000000000000000005280600010000000000023900000239
0000023900b002d7005e0473001504730049071d0077055600580187005a
02aa007c02aa007c031d004004ac0072023900aa02aa0041023900ba0239
000004730055047300df0473003c047300560473001a047300550473004d
047300610473005304730055023900b9023900aa04ac007004ac007204ac
00700473005a081f006f0556fffd0556009605c7006605c7009e055600a2
04e300a80639006d05c700a4023900bf04000037055600960473009606aa
009805c7009c063900630556009e0639005805c700a10556005c04e30030
05c700a105560009078d0019055600090556000604e300290239008b0239
00000239002703c100360473ffe102aa00590473004a0473008604000050
047300460473004b02390013047300420473008701c7008801c7ffa20400
008801c7008306aa00870473008704730044047300870473004802aa0085
0400003f02390024047300830400001a05c700060400000f040000210400
002802ac0039021400bc02ac002f04ac00570556fffd0556fffd05c70068
055600a205c7009c0639006305c700a10473004a0473004a0473004a0473
004a0473004a0473004a040000500473004b0473004b0473004b0473004b
023900bd023900230239ffe5023900090473008704730044047300440473
004404730044047300440473008304730083047300830473008304730049
033300800473006b0473001b0473005102cd006d044c000104e3009905e5
000305e50003080000e102aa00de02aa003d0464004e0800000106390053
05b4009a0464004e0464004d0464004d0473fffd049c00a003f4003805b4
007a069600a1046400000231000002f6002f02ec002d0625007f071d0044
04e3008104e3009e02aa00e804ac0072046400540473002e0464003304e5
001a047300860473008c080000ef0556fffd0556fffd0639006308000081
078d00520473fffc0800000002aa005302aa004701c7008001c7006c0464
004e03f4002f04000021055600060156fe390473ffe402aa005c02aa005c
040000170400001704730049023900b901c7006c02aa0047080000250556
fffd055600a20556fffd055600a2055600a20239008d0239ffe002390004
0239001506390063063900630639006305c700a105c700a105c700a10239
00c602aa001902aa000602aa001d02aa002e02aa00e502aa00a202aa006b
02aa003a02aa00b702aa00280473000001c700030556005c0400003f04e3
002904000028021400bc05c7fffd0473004905560006040000210556009e
0473008704ac007204ac00a102aa006b02aa001902aa002106ac006b06ac
006b06ac0021047300000639006d04730042023900b10556005c0400003f
05c700660400005005c700660400005004730046046bffe102aa01f10556
fffd0473004a0556fffd0473004a05c7009e04eb004705c7fffd055600a2
0473004b055600a20473004b0473009601c7004204730096025500880473
009a02ac008305c7009c0473008705c7009c047300870639006304730044
05c700a102aa008505c700a102aa003c0556005c0400003f04e300300239
002404e300300300002305c700a10473008305c700a10473008304e30029
0400002804e3002904000028046800a4063900600662005504a000480474
00480391006204f000440329002e05300048046bffe1040000b002eb0052
08c000330800004f040000990800004f040000990800004f040000980400
009807d5016a05c0009e04ab007204d5009d04ac007104d5022204d50105
05abffe9050001c905ab027e05abffe905ab027e05abffe905ab027e05ab
ffe905abffe905abffe905abffe905abffe905ab01c005ab027e05ab01c0
05ab01c005abffe905abffe905abffe905ab027e05ab01c005ab01c005ab
ffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905abffe905ab02d6
05ab006605abffea05d5ffff04d500920800000007eb013007eb012007eb
013007eb012004d500b204d5008004d5002a082b0198086b01b807550010
060000f40600006f0440003a0540003704c0003f04150040040000250600
005505e100bf038d008904d5ffd90180008002d50086071500610296000f
04d5009202d6008302d6008304d500b202d600700556fffd0473004a05c7
00660400005005c7006604000050055600a20473004b055600a20473004b
055600a20473004b0639006d047300420639006d047300420639006d0473
004205c700a40473008705c7001f047300060239ffce0239ffce0239ffe4
0239ffe40239fff60239fff5023900a301c700660400003701c7ffa20556
009604000088040000860473009601c7fffa05c7009c0473008705c900a5
0473008b0639006304730044063900630473004405c700a102aa006b0556
005c0400003f04e300300239000c05c700a10473008305c700a104730083
05c700a10473008305c700a104730083078d001905c70006055600060400
002101c700890556fffd0473004a08000001071d00440639005304e30081
023900b9078d001905c70006078d001905c70006078d001905c700060556
00060400002101c7008a02aaffe10473001b04cd005a06ac006b06ac0022
06ac002206ac004a02aa00e202aa006b02aa00de02aaffea0557ffff0646
ffa706b4ffa80312ffa80632ffa706d8ffa70605ffa701c7ff780556fffd
055600960558fffe055600a204e3002905c700a4023900bf055600960558
000b06aa009805c7009c0533006d0639006305c700a40556009e04f20094
04e30030055600060556000906af007f05fb0061023900040556000604a0
0048039100620473008b01c7006b04600088049a008c0400001903870048
0473008b0473005c01c700890400008604000018049c00a00400001a0395
005c04730044048d008303db0056046000880433001105b4007a063f0057
01c7ffc9046000880473004804600088063f0057055700a206eb00320455
00a105c000640556005c023900bf02390004040000370875000d081500a4
06d5003104a900a10515000a05c000a00556fffd054000a7055600960455
00a1056b0000055600a20763000704d5004e05c000a105c000a104a900a1
0540001206aa009805c700a40639006305c000a00556009e05c7006604e3
00300515000a061500520556000905eb009f05550057075500a1078000a1
06550000071500a8054000a505c00055081500a405c7001a0473004a0495
005b0440008802eb008804ab00000473004b055afffb03ab003204780087
047800870380008604ab00180580008c046b008804730044045500880473
00870400005003aa0026040000210695004b0400000f0495008a042b0045
066b008d0695008d0500002805c0008b042b008404150030060000890455
001f0473004b0473000002eb00890415004b0400003f01c7008802390009
01c7ffa20740001306800083047300000380008604000021046b008803e9
00a1034a008808000041089500a00585002d02aa010102aa001e02aa0031
02aa003102aa010102aa007e02aa007e02aa008c02aa008c02aa010102aa
001002aa010102aa01210310007d02aa008c023300d202aa030b02aaff04
023900b90481006904560032033100190411002d04d1009601f9009b030f
005f04ca009b04b8008c01f9009b0413002803b0005003b4003c04ca009b
04cf005001f9009b02d2003c0498005a043c00190488006e045f007303b1
001903d4000a0466009604130028058e00640524002803f2009b03f2009b
03f2009b01e3005a0356005a0686009b01f9ffac041300280413002803b4
ff5703b4ff570448002d058e0064058e0064058e0064058e006404810069
048100690481006904560032033100190411002d04d10096024b0000034a
000004b8008c024b00000413002803b0005003b4003c04cf005002d2003c
0498005a0488006e045f007303d4000a0466009604130028058e00640524
002801f9009b0456003203b00050045f0073049b003c0000ffdc0000ff25
0000ffdc0000fe51028d00ab028d00a002da0043034d007901a80000019c
004601e50046019c0046019c004601ad0048019c004601b1004601510046
0435017c0435012e043500b7043500810435012c043500be043500af0435
00810435009a043500db04350085028d00c1043500b30600010006000100
02420036060001000435009e04350098043500cb06000100060001000600
0100060001000600010001b1004606000100060001000600010006000100
06000100060001000600010006000100051b000006000100060001000600
010005b5008005b5008001f4fffd01f4fffd060001000600010006000100
060001000481003604350036043d0000043d000003e9009003e90090067f
005a0776005a03270000041e0000067f005a0776005a03270000041e0000
051b003204b5006a06000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
06000100060001000600010001cf003001b1004601b1004601b1004001b1
004606000100060001000000ffdc0000fe510000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ff160000ffdc0000
ff160000ffdc0000ff200000ffdc0473004a080000000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100060001000600010006000100028d007f028d005d0600010004ee0015
034d007901a8000e01d6002201a8005601d60056037500780375007801a8
002d01d60059051b003204b5006a01f4000001f4000001a8009301d60059
05b5008005b5008001f4000001f40000024200000300003d05b5008005b5
008001f4000001f4000005b5008005b5008001f4000001f4000004810036
04350036043d0000043d00000481003604350036043d0000043d00000481
003604350036043d0000043d000002b300a502b300a502b300a502b300a5
03e9009003e9009003e9009003e900900692008406920084043f0000043f
00000692008406920084043f0000043f000008c9008408c9008406c50000
06c5000008c9008408c9008406c5000006c5000004a7000004a7000004a7
000004a7000004a7000004a7000004a7000004a70000045a002a039a0036
0435000003270000045a002a039a00360435000003270000064f006d064f
006d02240000021a000004a7008c04a7008c02240000021a000004cf0073
04cf00730327000003270000040d008d040d008d01a8000001a8000002b4
006902b4006903270000032700000435008b0435008b01f4000001f40000
024200360300003d039a0000032700000375007803750078051b003204b5
006a051b003204b5006a01f4000001f40000045a004004ce0040045a0026
04ce0030045a005304ce0041045a005304ce00410600010006000100019c
0046019c00460600010006000100060001000151004601b1004606000100
0600010001ad004801e5004606000100060001000600010001b1004601b1
004601b1004601b1004601b1004001cf003006000100019c0046019c0046
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100028d00ca028d00c7028d00c6060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100010000000800
00001000000006dc0063053f004406d500a1055b00830000fddc0000fc2f
0000fca60000fe540000fcd70000fd730000fe290000fe0d0000fd110000
fc670000fd9d0000fbf50000fc720000fed50000fed50000ff02041b00a0
06ac006b06ac00190000feb60000fd730000fe080000fca60000fe530000
fd110000fbc80000faf40000faaf0000fc720000fbaa0000fb6a0000fcf1
0000fc7d0000fbdd0000fcc10000fb980000fdea0000fe840000fdc20000
fcf10000fd5f0000fe760000febc0000fceb0000fd6c0000fd580000fc90
0000fd150000fc2c0000fc130000fc120000fb960000fb9601c700880556
fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473004a
0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd0473
004a0556fffd0473004a0556fffd0473004a0556fffd0473004a0556fffd
0473004a055600a20473004b055600a20473004b055600a20473004b0556
00a20473004b055600a20473004b055600a20473004b055600a20473004b
055600a20473004b0239006301c7001f023900ba01c7007c063900630473
004406390063047300440639006304730044063900630473004406390063
047300440639006304730044063900630473004406dc0063053f004406dc
0063053f004406dc0063053f004406dc0063053f004406dc0063053f0044
05c700a10473008305c700a10473008306d500a1055b008306d500a1055b
008306d500a1055b008306d500a1055b008306d500a1055b008305560006
04000021055600060400002105560006040000210556fffd0473004a0239
ffe201c7ffb0063900630473004405c700a10473008305c700a104730083
05c700a10473008305c700a10473008305c700a1047300830000fefe0000
fefe0000fefe0000fefe0455fffd02eb000c07630007055afffb04a900a1
0380008604a900a10380008605c700a4046b00880473fffd040000140473
fffd04000014055600090400000f05550057042b0045055500a1042b0088
06050063047300550639006004730044000000000000006c0000006c0000
006c0000006c00000118000001c000000362000005e8000007900000097a
000009c000000a4000000ae600000bc600000c2e00000ca600000cec0000
0d2800000d9800000f54000010300000125a00001434000015940000174e
00001924000019d000001c6400001e9800001ef400001fb2000020340000
20a40000212a0000221c0000241c000025c60000275e00002898000029e0
00002aa400002b5a00002cea00002df000002ed400002fbc000031f20000
327c000035a600003750000038840000398a00003b7e00003dea00004094
0000414200004266000043da000046180000492400004aca00004c0a0000
4c7400004cde00004d4200004dca00004dfe00004e7a0000514c0000532a
000054de0000569200005850000059a400005b9400005d3800005e2c0000
5f44000061dc000062d800006508000066ce0000689000006a5400006bea
00006cf000007098000071bc0000735a00007578000079e200007c060000
7e5e00008046000081440000819000008292000083320000837e000083b2
000083ee0000843000008496000084dc00008510000085460000857c0000
85cc0000860e0000866000008698000086ea0000872000008760000087a2
000087e00000882a0000886a00008898000088d000008920000089560000
8996000089d000008a1400008a5e00008a9a00008aca00008b0e00008b46
00008bd600008c5c00008e6a00008ffe000091ae000091fa0000928e0000
94b200009706000098f6000099e200009a6400009ace00009bec00009d48
00009f900000a0f20000a1800000a22a0000a2ee0000a4360000a5e00000
a6ce0000a7940000a7f80000a8660000a9900000aab40000ab440000ad26
0000af800000b2d20000b3c80000b46e0000b4be0000b5740000b6940000
b8320000b8cc0000b9900000ba500000bab80000baf40000bb4c0000bb9a
0000bdb20000bff80000c0300000c0620000c18c0000c2b80000c3660000
c40a0000c4ac0000c57e0000c5d20000c6080000c6600000c7b20000c824
0000c87e0000c9f60000cb620000cc420000cc740000cd100000ce340000
d0aa0000d0e40000d1280000d1640000d1c60000d2080000d24e0000d29a
0000d2cc0000d3200000d35e0000d38e0000d3cc0000d4120000d4540000
d4920000d5140000d5820000d6680000d6a40000d7240000d7580000d7fa
0000d8820000d8ee0000d97a0000d9e60000dad20000dbc40000dbf80000
dc2c0000dc5c0000dca00000dd180000de920000e0ac0000e0de0000e118
0000e2120000e3a00000e3d60000e53a0000e5b60000e6960000e78c0000
e91c0000ea860000ec740000ed700000edb60000edea0000ee2c0000ee66
0000eeba0000ef020000ef4c0000ef7c0000efac0000f1940000f1d20000
f20c0000f23c0000f2700000f2a00000f2cc0000f3140000f4ca0000f644
0000f6700000f6b20000f6f60000f7260000f7560000f7ac0000f88a0000
f99c0000f9e00000fa160000fa700000faae0000fae20000fb120000fb4e
0000fb8e0000fbcc0000fc080000fc4a0000fc800000fcbc0000fcfc0000
fe0a0000ff760000ffc60001012200010178000101ac000101fa00010246
00010288000102c0000102f60001033e000103e00001057c000107440001
08c600010ab800010c0a00010d8e00010e700001100a000110740001109c
0001113a000113bc000113fc0001143c0001147c000114ba000115180001
1576000115e400011604000116ee0001178e000117c4000118120001185c
000118a6000118c2000118de000118fe0001191e0001193e0001195e0001
1984000119aa000119d0000119f600011a2600011a4e00011a7600011aa2
00011ace00011b0200011b2c00011b5800011b8e00011bb800011be40001
1c1a00011c4400011c6e00011ca200011cd200011d0600011d4a00011d7a
00011dae00011df000011e2400011e5600011e9800011ecc00011efc0001
1f3e00011f8200011fc800012024000120400001205c0001207800012094
000120b00001221e000124ee0001275e0001277a00012794000127b00001
27cc000127e800012804000128600001289a00012904000129ce00012a6e
00012b4400012bc400012c4c00012cbc00012d5200012db000012df60001
2e5400012eb600012f6e0001302c00013058000130b4000130f800013264
00013358000133820001339e000133ca000134020001344e0001348e0001
34c2000134f2000135220001355200013596000135c6000135f600013636
0001366600013696000136c6000137060001373600013766000137960001
37c4000139c8000139f800013a2800013b7800013d2e00013d5e00013d8c
00013dbc00013dea00013e1a00013e4800013f76000140a4000140d40001
42440001427c000142ac0001443e0001446c0001449a000144c8000144f0
0001464e000147e60001481e0001485e0001489a000148ca000148f80001
4914000149440001497400014a6400014bcc00014bfc00014c3600014c76
00014ca600014cd600014d1800014eb800015098000150d8000151180001
51480001518800015272000152f2000153d6000154060001543600015466
00015496000154d200015504000155360001556600015596000155dc0001
560e0001563e00015674000156e60001571a000158e8000159ea00015b7a
00015daa00015ffa0001618c000161f00001627a0001628a000163180001
651600016642000167ae0001689e00016a2200016c3c00016e6800016f5a
00016f6a00016f7a00017092000170a2000170b2000170c2000170d20001
70e200017200000172100001722000017294000172a40001737400017384
00017496000174a6000174b6000174c60001762400017802000178440001
787a000178b0000178e000017910000179640001798c00017b1600017c5e
00017db200017f1a0001809e0001810200018294000183b0000183c00001
83d00001855600018566000186cc000188260001895a00018ab800018c26
00018dec00018e2c00018e6400018e9a00018ec000018ef000018f160001
908c000190bc000191f200019202000192120001925400019264000193f8
000195a40001972e0001975600019786000198e2000198f200019a2a0001
9a3a00019ad400019c3400019c4400019eaa0001a0340001a19c0001a1cc
0001a3420001a4740001a4840001a4940001a4a40001a57e0001a58e0001
a59e0001a5ae0001a6a60001a8200001a8300001a9580001aa8c0001abde
0001ad720001ae900001b01c0001b12e0001b1640001b39a0001b43a0001
b44a0001b5e00001b7820001b8060001b9880001b9980001bc000001bd80
0001bf000001bf300001c0d00001c2560001c41a0001c5460001c5560001
c6860001c6960001c6a60001c7660001c7760001c95c0001c96c0001caa2
0001cbb00001cd5c0001cf120001d0540001d1c40001d30c0001d35e0001
d5400001d6bc0001d6fa0001d8a00001d8c40001da040001da140001da24
0001da5c0001da6c0001dbf80001dd660001deda0001defe0001df2e0001
e09c0001e14e0001e20c0001e23a0001e3f00001e4e80001e5760001e6a2
0001e7560001e8300001e87a0001e8f80001e9be0001e9e60001ea300001
ea860001eb720001ebbc0001ebf00001ec180001ec400001ec740001ecb8
0001ecfc0001ed3a0001ee780001ef300001f0500001f0c60001f1940001
f1e60001f2780001f3280001f41c0001f4700001f5060001f5c40001f6ae
0001f7600001f8800001f8d20001f97c0001fab20001fb8a0001fc700001
fd760001fe5c0001ff3e00020032000200d0000201d6000202d000020348
000203c0000204360002046c000204c8000205900002061c000206540002
069a000206ca00020734000207f400020828000208580002088c000208bc
000208ec0002091c00020abc00020af400020b3400020b6c00020ba40002
0c4000020d3a00020d6a00020e0e00020e3c00020e7c00020ecc00020efc
00020f48000210e000021246000213a6000213ec00021440000214780002
15ea00021620000216b2000216f00002171e0002175c0002188c000218b4
000219f000021a8000021b2a00021bac00021c6800021d8000021e8e0002
1ec200021f48000220a400022126000221700002227a000222c2000223c6
000224420002249a0002251e000226080002271e0002281a000228c40002
29b400022a8600022b7000022c5800022d0800022d8a00022fe800023012
0002303c000230f40002311e0002326000023366000234500002347a0002
34a4000234ce000234f800023522000236a2000236cc000236f600023720
0002374a000237740002379e000237c8000237f200023826000238500002
387a000238a400023a1e00023a2e00023b5000023b6000023b8a00023bb4
00023bde00023c0800023db200023fce000240fc0002410c000242880002
4298000243de000245aa000246b000024830000249d000024bf400024d4e
00024f3000025074000251a2000251cc000251f6000252200002524a0002
52740002529e000252c8000252f20002531c00025346000253700002539a
000253c4000253ee00025418000254420002567e000257fa0002593e0002
5b2600025c6e00025c9800025cc200025cf200025d2200025d7200025dc2
00025e0200025e7400025ec800025f2600025f7c00025fb200025ff40002
603a00026084000260b4000260ec0002611c000262540002659a000265c4
000265ee00026618000266420002666c00026696000266c0000266ea0002
67140002673e0002676800026792000267bc000267e6000268100002683a
000268640002688e000268b8000268e20002690c00026936000269600002
698a000269b4000269de00026a0800026a3200026ad000026ae600026b10
00026df000026e0000026f1a0002703c0002717a000272bc000274620002
7472000275b400027704000278f400027ac800027be000027bf000027c72
00027d0000027e0000027e1000027eb000027ec000027fd6000281280002
8258000282680002833600028346000284bc000284cc000285e0000285f0
00028724000288ba000289760002898600028a8400028bde00028c6a0002
8c7a00028da400028f3000028fec00028ffc00029094000290a400029170
000291800002925800029268000293700002938000029546000295560002
96ae000296be000299280002993800029b3200029b4200029cac00029cbc
00029dac00029dbc00029f5400029f640002a0820002a0920002a1d20002
a1e20002a1f20002a2020002a37a0002a38a0002a39a0002a3aa0002a4fc
0002a64a0002a7180002a7fc0002a97c0002aafe0002abfe0002ad120002
ae560002ae660002af540002b02e0002b1ca0002b1da0002b2f80002b3fe
0002b6060002b6160002b6260002b6360002b7800002b7900002b8480002
b8580002b9660002b9760002ba620002ba720002bb900002bba00002bc3e
0002bc4e0002bc5e0002bd4c0002bec00002bfec0002c0e60002c0f60002
c1060002c1160002c2b40002c46e0002c53c0002c54c0002c7ac0002c9f6
0002cc7c0002cee40002d1680002d3de0002d5ae0002d7680002d7920002
d7bc0002d7cc0002d7dc0002d8060002d8300002d85a0002d86a0002d87a
0002d8a40002d8ce0002d8de0002d8ee0002d9180002d9420002d96c0002
d97c0002d98c0002d99c0002d9ac0002d9bc0002d9cc0002d9f60002da06
0002da160002da400002da6a0002da940002dabe0002dae80002db120002
db3c0002db660002db900002dbba0002dbe40002dc0e0002dc380002dc62
0002dc8c0002dcb60002dce00002dd0a0002dd340002dd5e0002dd880002
ddb20002dddc0002de060002de300002de5a0002de840002deae0002ded8
0002df020002df2c0002df560002df800002dfaa0002dfd40002dffe0002
e0280002e0520002e07c0002e0a60002e0d00002e0fa0002e1240002e14e
0002e1780002e1a20002e1cc0002e1f60002e2200002e24a0002e2740002
e29e0002e2c80002e2f20002e3920002e3d60002e44c0002e4760002e4a0
0002e4ca0002e4f40002e51e0002e5480002e5720002e59c0002e5c60002
e5f00002e61a0002e6440002e66e0002e6980002e6c20002e6ec0002e716
0002e7400002e76a0002e7940002e7be0002e7e80002e8120002e83c0002
e8700002e8a40002e8d80002ea6a0002ec060002eda20002ef2e0002ef74
0002efba0002f0280002f0840002f0d60002f1460002f21e0002f2ea0002
f3c20002f48e0002f52e0002f6480002f6fc0002f77e0002f7d80002f818
0002f9360002fa800002fc180002fc740002fcd20002fd2e0002fd8a0002
fe3e0002fef40002ffa00003004c000300f8000301b00003026800030320
000303320003034400030356000303680003037a000303e8000304560003
050e0003052000030532000305440003055400030566000305780003058a
0003059c000305ae000305c00003066e0003071a000307c8000308740003
090c00030946000309700003099a000309ee00030a4000030abc00030b06
00030b8200030bd600030c5a00030cac00030d2200030d7a00030de00003
0e3600030e9000030f0e00030f5a00030fb80003101c0003106a000310b8
000311100003115800031182000311b0000311d60003120a0003123a0003
126a000312bc0003132a00031380000313f400031448000314bc00031502
0003156a000315b00003160c0003163c000316760003169c000316cc0003
16f2000317180003174a0003177a000317cc0003183200031888000318ee
00031942000319b0000319f200031a5200031a9400031ae000031b1a0003
1b5600031b9000031bcc00031c0000031c3200031c6200031c9200031cbc
00031ce200031d0c00031d3a00031d6400031db000031df400031e2a0003
1e6600031e9a00031ec800031f0600031f3600031f7000031f9a00031fc8
00031fee00032014000320400003209c000320cc000320fc0003212c0003
216400032198000321c6000321f6000322260003225600032286000322ba
0003231000032344000323a4000323d80003243000032464000324c00003
255e0003262c0003274c00032814000328a40003293a00032b2600032d22
00032e9a00033016000331c0000333720003345a00033590000336880003
379a000338b8000339ee00033b5800033cc600033e5c00033fd8000340e8
000341f80003432400034460000345a2000347260001000005280100003f
0063000500020010002f00560000040d0aff0003000200000046034e0000
00030000000000fe00000000000300000001000a00fe0000000300000002
000e01080000000300000003005e01160000000300000004000a01740000
0003000000050018017e0000000300000006000e01960000000300000007
00c401a40000000300000008002602680000000300000009008a028e0000
00030000000a04c20318000000030000000b006207da000000030000000c
0066083c000000030000000d06b408a2000000030000000e005c0f560001
000000000000007f0fb20001000000000001000510310001000000000002
000710360001000000000003002f103d00010000000000040005106c0001
000000000005000c107100010000000000060007107d0001000000000007
006210840001000000000008001310e60001000000000009004510f90001
00000000000a0261113e000100000000000b0031139f000100000000000c
003313d0000100000000000d035a1403000100000000000e002e175d0003
000104030002000c178b0003000104050002001017970003000104060002
000c17a70003000104070002001017b30003000104080002001017c30003
00010409000000fe17d30003000104090001000a18d10003000104090002
000e18db0003000104090003005e18e90003000104090004000a19470003
000104090005001819510003000104090006000e19690003000104090007
00c41977000300010409000800261a3b0003000104090009008a1a610003
00010409000a04c21aeb000300010409000b00621fad000300010409000c
0066200f000300010409000d06b42075000300010409000e005c27290003
0001040a0002000c278500030001040b00020010279100030001040c0002
000c27a100030001040e0002000c27ad0003000104100002000e27b90003
000104130002001227c70003000104140002000c27d90003000104150002
001027e50003000104160002000c27f50003000104190002000e28010003
0001041b00020010280f00030001041d0002000c281f00030001041f0002
000c282b0003000104240002000e283700030001042a0002000e28450003
0001042d0002000e285300030001080a0002000c28610003000108160002
000c286d000300010c0a0002000c2879000300010c0c0002000c28850054
0079007000650066006100630065002000a900200054006800650020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00200070006c0063002e002000440061007400610020
00a900200054006800650020004d006f006e006f00740079007000650020
0043006f00720070006f0072006100740069006f006e00200070006c0063
002f005400790070006500200053006f006c007500740069006f006e0073
00200049006e0063002e00200031003900390030002d0031003900390032
002e00200041006c006c0020005200690067006800740073002000520065
0073006500720076006500640041007200690061006c0052006500670075
006c00610072004d006f006e006f0074007900700065003a004100720069
0061006c00200052006500670075006c00610072003a0056006500720073
0069006f006e00200032002e0039003800200028004d006900630072006f
0073006f0066007400290041007200690061006c00560065007200730069
006f006e00200032002e003900380041007200690061006c004d00540041
007200690061006c00ae002000540072006100640065006d00610072006b
0020006f006600200054006800650020004d006f006e006f007400790070
006500200043006f00720070006f0072006100740069006f006e00200070
006c00630020007200650067006900730074006500720065006400200069
006e00200074006800650020005500530020005000610074002000260020
0054004d0020004f00660066002e00200061006e006400200065006c0073
006500770068006500720065002e004d006f006e006f0074007900700065
0020005400790070006f006700720061007000680079004d006f006e006f
007400790070006500200054007900700065002000440072006100770069
006e00670020004f006600660069006300650020002d00200052006f0062
0069006e0020004e006900630068006f006c00610073002c002000500061
0074007200690063006900610020005300610075006e0064006500720073
002000310039003800320043006f006e00740065006d0070006f00720061
00720079002000730061006e007300200073006500720069006600200064
0065007300690067006e002c00200041007200690061006c00200063006f
006e007400610069006e00730020006d006f00720065002000680075006d
0061006e0069007300740020006300680061007200610063007400650072
0069007300740069006300730020007400680061006e0020006d0061006e
00790020006f006600200069007400730020007000720065006400650063
006500730073006f0072007300200061006e006400200061007300200073
0075006300680020006900730020006d006f0072006500200069006e0020
00740075006e00650020007700690074006800200074006800650020006d
006f006f00640020006f006600200074006800650020006c006100730074
002000640065006300610064006500730020006f00660020007400680065
0020007400770065006e00740069006500740068002000630065006e0074
007500720079002e002000200054006800650020006f0076006500720061
006c006c002000740072006500610074006d0065006e00740020006f0066
002000630075007200760065007300200069007300200073006f00660074
0065007200200061006e0064002000660075006c006c0065007200200074
00680061006e00200069006e0020006d006f0073007400200069006e0064
007500730074007200690061006c0020007300740079006c006500200073
0061006e0073002000730065007200690066002000660061006300650073
002e00200020005400650072006d0069006e0061006c0020007300740072
006f006b00650073002000610072006500200063007500740020006f006e
002000740068006500200064006900610067006f006e0061006c00200077
0068006900630068002000680065006c0070007300200074006f00200067
006900760065002000740068006500200066006100630065002000610020
006c0065007300730020006d0065006300680061006e006900630061006c
00200061007000700065006100720061006e00630065002e002000200041
007200690061006c00200069007300200061006e00200065007800740072
0065006d0065006c007900200076006500720073006100740069006c0065
002000660061006d0069006c00790020006f006600200074007900700065
00660061006300650073002000770068006900630068002000630061006e
002000620065002000750073006500640020007700690074006800200065
007100750061006c0020007300750063006300650073007300200066006f
007200200074006500780074002000730065007400740069006e00670020
0069006e0020007200650070006f007200740073002c0020007000720065
00730065006e0074006100740069006f006e0073002c0020006d00610067
0061007a0069006e006500730020006500740063002c00200061006e0064
00200066006f007200200064006900730070006c00610079002000750073
006500200069006e0020006e006500770073007000610070006500720073
002c0020006100640076006500720074006900730069006e006700200061
006e0064002000700072006f006d006f00740069006f006e0073002e0068
007400740070003a002f002f007700770077002e006d006f006e006f0074
007900700065002e0063006f006d002f00680074006d006c002f006d0074
006e0061006d0065002f006d0073005f0061007200690061006c002e0068
0074006d006c0068007400740070003a002f002f007700770077002e006d
006f006e006f0074007900700065002e0063006f006d002f00680074006d
006c002f006d0074006e0061006d0065002f006d0073005f00770065006c
0063006f006d0065002e00680074006d006c004e004f0054004900460049
0043004100540049004f004e0020004f00460020004c004900430045004e
00530045002000410047005200450045004d0045004e0054000d000a000d
000a00540068006900730020007400790070006500660061006300650020
006900730020007400680065002000700072006f00700065007200740079
0020006f00660020004d006f006e006f0074007900700065002000540079
0070006f00670072006100700068007900200061006e0064002000690074
0073002000750073006500200062007900200079006f0075002000690073
00200063006f0076006500720065006400200075006e0064006500720020
0074006800650020007400650072006d00730020006f0066002000610020
006c006900630065006e00730065002000610067007200650065006d0065
006e0074002e00200059006f0075002000680061007600650020006f0062
007400610069006e00650064002000740068006900730020007400790070
0065006600610063006500200073006f0066007400770061007200650020
0065006900740068006500720020006400690072006500630074006c0079
002000660072006f006d0020004d006f006e006f00740079007000650020
006f007200200074006f0067006500740068006500720020007700690074
006800200073006f00660074007700610072006500200064006900730074
00720069006200750074006500640020006200790020006f006e00650020
006f00660020004d006f006e006f0074007900700065002700730020006c
006900630065006e0073006500650073002e000d000a000d000a00540068
0069007300200073006f0066007400770061007200650020006900730020
0061002000760061006c007500610062006c006500200061007300730065
00740020006f00660020004d006f006e006f0074007900700065002e0020
0055006e006c00650073007300200079006f007500200068006100760065
00200065006e0074006500720065006400200069006e0074006f00200061
0020007300700065006300690066006900630020006c006900630065006e
00730065002000610067007200650065006d0065006e0074002000670072
0061006e00740069006e006700200079006f007500200061006400640069
00740069006f006e0061006c0020007200690067006800740073002c0020
0079006f0075007200200075007300650020006f00660020007400680069
007300200073006f0066007400770061007200650020006900730020006c
0069006d006900740065006400200074006f00200079006f007500720020
0077006f0072006b00730074006100740069006f006e00200066006f0072
00200079006f007500720020006f0077006e0020007000750062006c0069
007300680069006e00670020007500730065002e00200059006f00750020
006d006100790020006e006f007400200063006f007000790020006f0072
002000640069007300740072006900620075007400650020007400680069
007300200073006f006600740077006100720065002e000d000a000d000a
0049006600200079006f00750020006800610076006500200061006e0079
0020007100750065007300740069006f006e00200063006f006e00630065
0072006e0069006e006700200079006f0075007200200072006900670068
0074007300200079006f0075002000730068006f0075006c006400200072
0065007600690065007700200074006800650020006c006900630065006e
00730065002000610067007200650065006d0065006e007400200079006f
007500200072006500630065006900760065006400200077006900740068
002000740068006500200073006f0066007400770061007200650020006f
007200200063006f006e00740061006300740020004d006f006e006f0074
00790070006500200066006f00720020006100200063006f007000790020
006f006600200074006800650020006c006900630065006e007300650020
00610067007200650065006d0065006e0074002e000d000a000d000a004d
006f006e006f0074007900700065002000630061006e0020006200650020
0063006f006e007400610063007400650064002000610074003a000d000a
000d000a0055005300410020002d00200028003800340037002900200037
00310038002d0030003400300030000900090055004b0020002d00200030
003100310034003400200030003100370033003700200037003600350039
00350039000d000a0068007400740070003a002f002f007700770077002e
006d006f006e006f0074007900700065002e0063006f006d006800740074
0070003a002f002f007700770077002e006d006f006e006f007400790070
0065002e0063006f006d002f00680074006d006c002f0074007900700065
002f006c006900630065006e00730065002e00680074006d006c54797065
6661636520a920546865204d6f6e6f7479706520436f72706f726174696f
6e20706c632e204461746120a920546865204d6f6e6f7479706520436f72
706f726174696f6e20706c632f5479706520536f6c7574696f6e7320496e
632e20313939302d313939322e20416c6c20526967687473205265736572
766564417269616c526567756c61724d6f6e6f747970653a417269616c20
526567756c61723a56657273696f6e20322e393820284d6963726f736f66
7429417269616c56657273696f6e20322e3938417269616c4d5441726961
6ca82054726164656d61726b206f6620546865204d6f6e6f747970652043
6f72706f726174696f6e20706c63207265676973746572656420696e2074
686520555320506174202620544d204f66662e20616e6420656c73657768
6572652e4d6f6e6f74797065205479706f6772617068794d6f6e6f747970
6520547970652044726177696e67204f6666696365202d20526f62696e20
4e6963686f6c61732c205061747269636961205361756e64657273203139
3832436f6e74656d706f726172792073616e732073657269662064657369
676e2c20417269616c20636f6e7461696e73206d6f72652068756d616e69
737420636861726163746572697374696373207468616e206d616e79206f
6620697473207072656465636573736f727320616e642061732073756368
206973206d6f726520696e2074756e65207769746820746865206d6f6f64
206f6620746865206c6173742064656361646573206f6620746865207477
656e74696574682063656e747572792e2020546865206f766572616c6c20
74726561746d656e74206f662063757276657320697320736f6674657220
616e642066756c6c6572207468616e20696e206d6f737420696e64757374
7269616c207374796c652073616e732073657269662066616365732e2020
5465726d696e616c207374726f6b65732061726520637574206f6e207468
6520646961676f6e616c2077686963682068656c707320746f2067697665
2074686520666163652061206c657373206d656368616e6963616c206170
70656172616e63652e2020417269616c20697320616e2065787472656d65
6c7920766572736174696c652066616d696c79206f662074797065666163
65732077686963682063616e206265207573656420776974682065717561
6c207375636365737320666f7220746578742073657474696e6720696e20
7265706f7274732c2070726573656e746174696f6e732c206d6167617a69
6e6573206574632c20616e6420666f7220646973706c6179207573652069
6e206e6577737061706572732c206164766572746973696e6720616e6420
70726f6d6f74696f6e732e687474703a2f2f7777772e6d6f6e6f74797065
2e636f6d2f68746d6c2f6d746e616d652f6d735f617269616c2e68746d6c
687474703a2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f6d
746e616d652f6d735f77656c636f6d652e68746d6c4e4f54494649434154
494f4e204f46204c4943454e53452041475245454d454e540d0a0d0a5468
6973207479706566616365206973207468652070726f7065727479206f66
204d6f6e6f74797065205479706f67726170687920616e64206974732075
736520627920796f7520697320636f766572656420756e64657220746865
207465726d73206f662061206c6963656e73652061677265656d656e742e
20596f752068617665206f627461696e6564207468697320747970656661
636520736f66747761726520656974686572206469726563746c79206672
6f6d204d6f6e6f74797065206f7220746f67657468657220776974682073
6f667477617265206469737472696275746564206279206f6e65206f6620
4d6f6e6f747970652773206c6963656e736565732e0d0a0d0a5468697320
736f66747761726520697320612076616c7561626c65206173736574206f
66204d6f6e6f747970652e20556e6c65737320796f75206861766520656e
746572656420696e746f2061207370656369666963206c6963656e736520
61677265656d656e74206772616e74696e6720796f75206164646974696f
6e616c207269676874732c20796f757220757365206f6620746869732073
6f667477617265206973206c696d6974656420746f20796f757220776f72
6b73746174696f6e20666f7220796f7572206f776e207075626c69736869
6e67207573652e20596f75206d6179206e6f7420636f7079206f72206469
7374726962757465207468697320736f6674776172652e0d0a0d0a496620
796f75206861766520616e79207175657374696f6e20636f6e6365726e69
6e6720796f75722072696768747320796f752073686f756c642072657669
657720746865206c6963656e73652061677265656d656e7420796f752072
6563656976656420776974682074686520736f667477617265206f722063
6f6e74616374204d6f6e6f7479706520666f72206120636f7079206f6620
746865206c6963656e73652061677265656d656e742e0d0a0d0a4d6f6e6f
747970652063616e20626520636f6e7461637465642061743a0d0a0d0a55
5341202d202838343729203731382d303430300909554b202d2030313134
34203031373337203736353935390d0a687474703a2f2f7777772e6d6f6e
6f747970652e636f6d687474703a2f2f7777772e6d6f6e6f747970652e63
6f6d2f68746d6c2f747970652f6c6963656e73652e68746d6c004e006f00
72006d0061006c006f00620079010d0065006a006e00e9006e006f007200
6d0061006c005300740061006e0064006100720064039a03b103bd03bf03
bd03b903ba03ac00540079007000650066006100630065002000a9002000
54006800650020004d006f006e006f007400790070006500200043006f00
720070006f0072006100740069006f006e00200070006c0063002e002000
44006100740061002000a900200054006800650020004d006f006e006f00
7400790070006500200043006f00720070006f0072006100740069006f00
6e00200070006c0063002f005400790070006500200053006f006c007500
740069006f006e007300200049006e0063002e0020003100390039003000
2d0031003900390032002e00200041006c006c0020005200690067006800
740073002000520065007300650072007600650064004100720069006100
6c0052006500670075006c00610072004d006f006e006f00740079007000
65003a0041007200690061006c00200052006500670075006c0061007200
3a00560065007200730069006f006e00200032002e003900380020002800
4d006900630072006f0073006f0066007400290041007200690061006c00
560065007200730069006f006e00200032002e0039003800410072006900
61006c004d00540041007200690061006c00ae0020005400720061006400
65006d00610072006b0020006f006600200054006800650020004d006f00
6e006f007400790070006500200043006f00720070006f00720061007400
69006f006e00200070006c00630020007200650067006900730074006500
720065006400200069006e00200074006800650020005500530020005000
6100740020002600200054004d0020004f00660066002e00200061006e00
6400200065006c0073006500770068006500720065002e004d006f006e00
6f00740079007000650020005400790070006f0067007200610070006800
79004d006f006e006f007400790070006500200054007900700065002000
440072006100770069006e00670020004f00660066006900630065002000
2d00200052006f00620069006e0020004e006900630068006f006c006100
73002c002000500061007400720069006300690061002000530061007500
6e0064006500720073002000310039003800320043006f006e0074006500
6d0070006f0072006100720079002000730061006e007300200073006500
7200690066002000640065007300690067006e002c002000410072006900
61006c00200063006f006e007400610069006e00730020006d006f007200
65002000680075006d0061006e0069007300740020006300680061007200
610063007400650072006900730074006900630073002000740068006100
6e0020006d0061006e00790020006f006600200069007400730020007000
720065006400650063006500730073006f0072007300200061006e006400
2000610073002000730075006300680020006900730020006d006f007200
6500200069006e002000740075006e006500200077006900740068002000
74006800650020006d006f006f00640020006f0066002000740068006500
20006c006100730074002000640065006300610064006500730020006f00
6600200074006800650020007400770065006e0074006900650074006800
2000630065006e0074007500720079002e00200020005400680065002000
6f0076006500720061006c006c002000740072006500610074006d006500
6e00740020006f0066002000630075007200760065007300200069007300
200073006f006600740065007200200061006e0064002000660075006c00
6c006500720020007400680061006e00200069006e0020006d006f007300
7400200069006e0064007500730074007200690061006c00200073007400
79006c0065002000730061006e0073002000730065007200690066002000
660061006300650073002e00200020005400650072006d0069006e006100
6c0020007300740072006f006b0065007300200061007200650020006300
7500740020006f006e002000740068006500200064006900610067006f00
6e0061006c002000770068006900630068002000680065006c0070007300
200074006f00200067006900760065002000740068006500200066006100
630065002000610020006c0065007300730020006d006500630068006100
6e006900630061006c00200061007000700065006100720061006e006300
65002e002000200041007200690061006c00200069007300200061006e00
2000650078007400720065006d0065006c00790020007600650072007300
6100740069006c0065002000660061006d0069006c00790020006f006600
200074007900700065006600610063006500730020007700680069006300
68002000630061006e002000620065002000750073006500640020007700
690074006800200065007100750061006c00200073007500630063006500
73007300200066006f007200200074006500780074002000730065007400
740069006e006700200069006e0020007200650070006f00720074007300
2c002000700072006500730065006e0074006100740069006f006e007300
2c0020006d006100670061007a0069006e00650073002000650074006300
2c00200061006e006400200066006f007200200064006900730070006c00
610079002000750073006500200069006e0020006e006500770073007000
610070006500720073002c00200061006400760065007200740069007300
69006e006700200061006e0064002000700072006f006d006f0074006900
6f006e0073002e0068007400740070003a002f002f007700770077002e00
6d006f006e006f0074007900700065002e0063006f006d002f0068007400
6d006c002f006d0074006e0061006d0065002f006d0073005f0061007200
690061006c002e00680074006d006c0068007400740070003a002f002f00
7700770077002e006d006f006e006f0074007900700065002e0063006f00
6d002f00680074006d006c002f006d0074006e0061006d0065002f006d00
73005f00770065006c0063006f006d0065002e00680074006d006c004e00
4f00540049004600490043004100540049004f004e0020004f0046002000
4c004900430045004e00530045002000410047005200450045004d004500
4e0054000d000a000d000a00540068006900730020007400790070006500
660061006300650020006900730020007400680065002000700072006f00
7000650072007400790020006f00660020004d006f006e006f0074007900
7000650020005400790070006f0067007200610070006800790020006100
6e0064002000690074007300200075007300650020006200790020007900
6f007500200069007300200063006f007600650072006500640020007500
6e00640065007200200074006800650020007400650072006d0073002000
6f0066002000610020006c006900630065006e0073006500200061006700
7200650065006d0065006e0074002e00200059006f007500200068006100
7600650020006f0062007400610069006e00650064002000740068006900
7300200074007900700065006600610063006500200073006f0066007400
770061007200650020006500690074006800650072002000640069007200
6500630074006c0079002000660072006f006d0020004d006f006e006f00
740079007000650020006f007200200074006f0067006500740068006500
720020007700690074006800200073006f00660074007700610072006500
200064006900730074007200690062007500740065006400200062007900
20006f006e00650020006f00660020004d006f006e006f00740079007000
65002700730020006c006900630065006e0073006500650073002e000d00
0a000d000a005400680069007300200073006f0066007400770061007200
6500200069007300200061002000760061006c007500610062006c006500
20006100730073006500740020006f00660020004d006f006e006f007400
7900700065002e00200055006e006c00650073007300200079006f007500
20006800610076006500200065006e007400650072006500640020006900
6e0074006f00200061002000730070006500630069006600690063002000
6c006900630065006e00730065002000610067007200650065006d006500
6e00740020006700720061006e00740069006e006700200079006f007500
20006100640064006900740069006f006e0061006c002000720069006700
6800740073002c00200079006f0075007200200075007300650020006f00
660020007400680069007300200073006f00660074007700610072006500
20006900730020006c0069006d006900740065006400200074006f002000
79006f0075007200200077006f0072006b00730074006100740069006f00
6e00200066006f007200200079006f007500720020006f0077006e002000
7000750062006c0069007300680069006e00670020007500730065002e00
200059006f00750020006d006100790020006e006f007400200063006f00
7000790020006f0072002000640069007300740072006900620075007400
650020007400680069007300200073006f00660074007700610072006500
2e000d000a000d000a0049006600200079006f0075002000680061007600
6500200061006e00790020007100750065007300740069006f006e002000
63006f006e006300650072006e0069006e006700200079006f0075007200
2000720069006700680074007300200079006f0075002000730068006f00
75006c006400200072006500760069006500770020007400680065002000
6c006900630065006e00730065002000610067007200650065006d006500
6e007400200079006f007500200072006500630065006900760065006400
200077006900740068002000740068006500200073006f00660074007700
61007200650020006f007200200063006f006e0074006100630074002000
4d006f006e006f007400790070006500200066006f007200200061002000
63006f007000790020006f006600200074006800650020006c0069006300
65006e00730065002000610067007200650065006d0065006e0074002e00
0d000a000d000a004d006f006e006f007400790070006500200063006100
6e00200062006500200063006f006e007400610063007400650064002000
610074003a000d000a000d000a0055005300410020002d00200028003800
34003700290020003700310038002d003000340030003000090009005500
4b0020002d00200030003100310034003400200030003100370033003700
20003700360035003900350039000d000a0068007400740070003a002f00
2f007700770077002e006d006f006e006f0074007900700065002e006300
6f006d0068007400740070003a002f002f007700770077002e006d006f00
6e006f0074007900700065002e0063006f006d002f00680074006d006c00
2f0074007900700065002f006c006900630065006e00730065002e006800
74006d006c004e006f0072006d0061006c004e006f0072006d0061006100
6c0069004e006f0072006d0061006c004e006f0072006d00e1006c004e00
6f0072006d0061006c0065005300740061006e0064006100610072006400
4e006f0072006d0061006c004e006f0072006d0061006c006e0079004e00
6f0072006d0061006c041e0431044b0447043d044b0439004e006f007200
6d00e1006c006e0065004e006f0072006d0061006c004e006f0072006d00
61006c004e0061007600610064006e006f0074006801b001a10300006e00
670041007200720075006e00740061004e006f0072006d0061006c004e00
6f0072006d0061006c004e006f0072006d0061006c004e006f0072006d00
61006c00b1540f4122031700ef031700ff03170003001f0317002f031700
4f0317005f0317008f0317009f03170006000f0317005f0317006f031700
7f031700bf031700f00317000600400317b2923340b80317b28b3340b803
17b36a6c3240b80317b2613340b80317b35c5d3240b80317b357593240b8
0317b34d513240b80317b344493240b80317b23a3340b80317b331343240
b80317b32e423240b80317b3272c3240b80317b312253280b80317b30a0d
32c04116031600d00316000200700316000102c4000f0101001f00a00315
00b0031500020306000f0101001f00400312b32426329fbf030400010302
03010064001fffc00301b20d1132410a02ff02ef0012001f02ee02ed0064
001fffc002edb30e11329f414a02e200af02e200bf02e2000302e202e202
e102e1007f02e00001001002e0003f02e0009f02e000bf02e000cf02e000
ef02e0000602e002e002df02df02de02de000f02dd002f02dd003f02dd00
5f02dd009f02dd00bf02dd00ef02dd000702dd02dd001002dc0001000002
dc0001001002dc003f02dc000202dc02dc001002db000102db02db000f02
da000102da02daffc002d3b2373932b9ffc002d3b22b2f32b9ffc002d3b2
1f2532b9ffc002d3b2171b32b9ffc002d3b2121632b802d2b2f9291fb802
e3b3202b1fa0413002d400b002d40002000002d4001002d4002002d40050
02d4006002d4007002d40006006002d6007002d6008002d6009002d600a0
02d600b002d60006000002d6001002d6002002ca002002cc002002d60030
02d6004002d6005002d6000802d0b2202b1fb802cfb226421f411602ce02
c70017001f02cd02c80017001f02cc02c60017001f02cb02c50017001f02
c902c5001e001f02ca02c6b21e1f00410b02c6000002c7001002c6001002
c7002f02c5000502c1b324121fff411102bf0001001f02bf002f02bf003f
02bf004f02bf005f02bf008f02bf000602bf0222b2641f12410b02bb00ca
0800001f02b200e90800001f02a600a20800406a1f402643493240204349
3240263a3d3240203a3d329f209f26024026969932402096993240268e92
3240208e92324026848c324020848c3240267a813240207a813240266c76
3240206c76324026646a324020646a3240265a5f3240205a5f3240264f54
3240204f5432b8029eb724271f374f6b0120410f02770030027700400277
00500277000402770277027700f90400001f029bb22a2a1fb8029a402b29
2a1f80ba0180bc0180520180a201806501807e01808101803c01805e0180
2b01801c01801e0180400180bb0138000100800140b40180400180bb0138
00010080013940180180ca0180ad01807301802601802501802401802001
3740b80221b2493340b80221b2453340b80221b341423240b80221b33d3e
320f410f0221003f0221007f0221000300bf022100cf022100ff02210003
00400221b320223240b80221b3191e3240b80222b32a3f3240b80221b32e
3a326f414802c3007f02c3008f02c300df02c30004002f02c3006002c300
cf02c30003000f02c3003f02c3005f02c300c002c300ef02c300ff02c300
0600df02220001008f02220001000f0222002f0222003f0222005f022200
7f022200ef0222000600bf022100ef02210002006f0221007f022100af02
210003002f0221003f0221004f0221000302c302c3022202220221022140
1d101c102b1048038f1c010f1e014f1eff1e023700161600000012110811
b8010db6f70df8f70d00094109028e028f001d001f0290028f001d001f02
8fb2f91d1fb80198b226bb1f41150197001e0401001f013900260125001f
013800730401001f0135001c0801001f0134001c02ab001f0132b21c561f
b8010fb2262c1fba010e001e0401b61ff91ce41fe91cb80201b61fe81cbb
1fd720b80401b21fd51cb802abb61fd41c891fc92fb80801b21fbc26b801
01b21fba20b80201b61fb91c381fadcab80401b21f8126b8019ab21f7e26
b8019ab61f7d1c471f6b1cb80401b21f6526b8019ab21f5e73b80401400f
1f52265a1f481c891f441c621f4073b80801b61f3f1c5e1f3c26b8019ab2
1f351cb80401b61f301cbb1f2b1cb80401b61f2a1c561f291cb80101b21f
231eb80401b21f5537b80168402c07960758074f07360732072c0721071f
071d071b071408120810080e080c080a080808060804080208000814b8ff
e0402b000001001406100000010006040000010004100000010010020000
01000200000001000002010802004a00b013034b024b5342014bb0c06300
4b6220b0f65323b8010a515ab005234201b0124b004b5442b0382b4bb807
ff52b0372b4bb007505b58b101018e59b0382bb00288b801005458b801ff
b101018e851bb0124358b900010111858d1bb900010128858d5959001816
763f183f123e113946443e113946443e113946443e113946443e11394660
443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b2b2b2b2b2b2b2b2b2b
182b1db0964b5358b0aa1d59b0324b5358b0ff1d594bb09353205c58b901
f201f04544b901f101f045445958b9033e01f2455258b901f2033e445959
4bb8015653205c58b9002001f14544b9002601f145445958b9081e002045
5258b90020081e4459594bb8019a53205c58b9002501f24544b9002401f2
45445958b909090025455258b9002509094459594bb8040153205c58b173
244544b1242445445958b917200073455258b9007317204459594bb80401
53205c58b1ca254544b1252545445958b9168000ca455258b900ca168044
59594bb03e53205c58b11c1c4544b11e1c45445958b9011a001c455258b9
001c011a4459594bb05653205c58b11c1c4544b12f1c45445958b9018900
1c455258b9001c01894459594bb8030153205c58b11c1c4544b11c1c4544
5958b90de0001c455258b9001c0de04459592b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b65
422b2b01b33b59635c456523456023456560234560b08b766818b0806220
20b163594565234520b003266062636820b003266165b059236544b06323
4420b13b5c4565234520b003266062636820b003266165b05c236544b03b
2344b1005c455458b15c406544b23b403b4523614459b347503437456523
456023456560234560b089766818b080622020b134504565234520b00326
6062636820b003266165b050236544b034234420b147374565234520b003
266062636820b003266165b037236544b0472344b10037455458b1374065
44b24740474523614459004b5342014b5058b108004259435c58b1080042
59b3020b0a124358601b2159421610703eb0124358b93b21187e1bba0400
01a8000b2b59b00c2342b00d2342b0124358b92d412d411bba0400040000
0b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b59
b0102342b0112342002b7475737500184569444569444569447373737374
757374752b2b2b2b74752b2b2b2b2b737373737373737373737373737373
737373737373737373732b2b2b45b0406144737400004bb02a534bb03f51
5a58b1070745b040604459004bb03a534bb03f515a58b10b0b45b8ffc060
4459004bb02e534bb03a515a58b1030345b040604459004bb02e534bb03c
515a58b1090945b8ffc06044592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b752b2b2b2b2b2b2b435c58b9008002bbb301401e017400735903b01e4b
5402b0124b545ab012435c5a58ba009f02220001007359002b7473012b01
732b2b2b2b2b2b2b2b737373732b002b2b2b2b2b2b004569447345694473
456944737475456944734569444569444569447374456944456944732b2b
2b2b2b732b002b732b74752b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b00
00>
[14469 15605 16381 15777 16209 16317 16197 16109 16365 15813 15229 16221 16333
7811 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
end
%ADOEndSubsetFont
[/N11/ArialMT 1 TZ
141.600006 688.799988 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
2 2064 55 <00010030000004ba05ba00070089400d05021e04030200080706050409b8
0273b320040104b80101b7062001022f030103b80101b5010120000100b8
ffe8400b1010025500080f0f025500b8fff2b40c0c025500b8ffe2b40d0d
025500b8fffcb40c0c065500b8fffeb40d0d065500b80273b308b699182b
10f62b2b2b2b2b2b5d3c10f45d3c10fde45de6103c103c003f3f3cfd3c31
3021112135211521110213fe1d048afe1b050dadadfaf300>ArialMT AddT42Char 
2 7694 72 <0002004bffe8041e043e0015001d015340171f001c150255035d055d0955
0b65036b056f09650b0815b8ffe4b40d0d065511b8ffe440520d0d06551d
1c0d0d06552712d905fa14f61a0431123a19311c41124d1a411c51125c19
521c61126d1a611c78067815f602f618100016010f0d1717501660167016
03161c0f9010a010021010041b1c0a0700ba02aa0001ffc0b41010025501
b8ffc04010101006551001010195131c040b17400db8ffdcb40d0d02550d
b8ffeeb40d0d06550db8ffeab40c0c06550db8ffc04009272a34b00d010d
1a1fb8ffc0b32526341fb8ffc040411e2334301f011f163310240740242a
341f073f074f070307200b0b025507180c0c0255071c0d0d0255070e0b0b
0655071c0c0c065507160d0d065507191e3437182b4e10f42b2b2b2b2b2b
5d2b4dfde44e10712b2bf6712b2b2b2b4ded003fedfd5d2b2be43fed1239
2f5d3cfd713c011112393912393130015d005d2b2b2b0171720117060623
22001110003332001114072116163332360121262726232206035eba2cee
b9e9feef0114dcd5010e01fce80ab285638cfdda02510c3856897ca90156
17a3b4011f0103010c0128fedefef91020afba680195864368a6>ArialMT AddT42Char 
2 13420 86 <0001003fffe803b1043e00300317407b042214223a094a09442456226522
7c098e098424a613ab2cc2030d09171a1817304b2cd617051b0255020210
32010a185c085c095c0a5c0b5c0c5c0d6a086a096a0a6a0b6a0c6a0db426
b4270f27262427242936245a0a590b64266428742374248024930a9c0c92
28972c9530a40aa90ca327a428b326c5261628b8fff4b40d0d065522b8ff
f4b40d0d065523b8fff4b40d0d065524b8fff4b40d0d065528b8fff4b40c
0c065522b8fff4b40c0c065523b8fff4b40c0c065524b8fff4b40c0c0655
1db8ffde40121e395a0827250c0a041a202615040b2e1d1ab802aa402219
2c0b0b02551f193f194f195f19af19cf19060f191f196f19df19041f198f
190219bd02550015000002aa0001ffc040140b0b025510014001021001d0
0102000110010201b8ffc0b314163401b8ffc040100e113401012e5c1d6c
1d021d1c150704b8fff4b40b0b025504b8ffe6b41010065504b8ffe64013
0f0f0655041c2e0b1f1a011a24194013183432b8ffc0402f0f0f02551918
0f0f025519180d0d025519160c0c025519201010065519200f0f06551910
0c0c065519160d0d065519b8025bb207242ab8ffc0b51c39d02a012ab8ff
e6b40c0c02552ab8ffe8b40f0f02552ab8ffe8b40c0c06552ab8ffeab60d
0d06552a1a32b8ffc04021272a346032c032023f32803202321001010124
00180d0d025500100d0d06550020b8fff4b40d0d025520b8fff4b4101006
5520b8fff440190f0f065520240f100b0b02550f160c0c02550f200d0d02
550fb8fffa40200f0f02550f0e0c0c06550f0c0d0d06550f22df00013f00
4f00020019313437182b4e10f45d714df42b2b2b2b2b2bed2b2b2b102b2b
ed724e105d712bf62b2b2b2b712b4dedf42b2b2b2b2b2b2b2b2bed72003f
ed2b2b2b3fed7112392f2b2b5d71722be410fd5d71722be4111239111239
0111121739313043794040272d1e2305142c261110121013100306220d20
1b000928071b01052d071b011e14201b00210e231b0022230d0c08290a1b
012827090a062b041b001f101d1b01002b2b103c103c2b103c103c2b012b
2b2b2b2a2b818181002b2b2b2b2b2b2b2b2b5d71015d72715d1337161633
323635342726272e02353436373636333216161707262623220615141716
1716171e02151406062322263fb20f897b7c78352593c6994f41382a9153
7dbd5a11b00c73697c6a16162f1b84bf975669c67dcfd9013d1c6b726544
3d2318253249814e4779281f2b487b6718525c5237231c1d130a2433417c
5c5a9f57ac00>ArialMT AddT42Char 
2 14356 87 <00010024fff2022a0599001700d8b9000affc0b323263409b8ffc0404123
263480190100010c0d0a0103001610092b0f0a06161c030b0f1022002201
0d12250c01ff070845094560077007800790070400072007a007b007c007
d0070607b8ffeeb41010025507b8fff4b40f0f025507b8fff2b40e0e0255
07b8fff8b40d0d025507b8fff8b40c0c025507b8fffab41010065507b8ff
f0400b0f0f065507060c0c065507b8ffe8b40d0d065507ba026a00180136
b166182b10f62b2b2b2b2b2b2b2b2b5d71f4e410ed3cfd3c10e4f43c003f
ed3f3cfd3c1139123911333310c93130015d2b2b25170623222626351123
353311371133152311141616333202101a4c3c626c2c8484b3b5b5132b28
1ea19f103e65a202638c01076cfe8d8cfd934d2c1a00>ArialMT AddT42Char 

1 0 3 <> ArialMT AddT42Char 
1 10078 38 <00010066ffe7057605d3001d00d3b563026a1d0201b8ffe8b40b0b065500
b8ffe8405f0b0b06552000320d63007000741d8000841d90009a05ab03a5
0db903b40dc70dd000e41df31d110e121d111d1d032a0628112a1c201f47
0d56145715561968056b1d7b128b129a03990e9a1ca801a402a811d50e13
0014001a1014101a0402b8ffdeb2283901b8ffc0402d2839100f0001041b
131e0c031b1e040910260f4a0026200101011a1f1726200801080c0b0b06
5508191e635c182b4e10f42b5d4ded4e10f65d4dedf4ed003fed3fed1117
393130012b2b5d5d71005d2b2b0172011706042322240235341224333204
17072626232206021514121633323604b4c23dfec3e5edfed79baf0143c2
dc012c3bbf33c293a9e35c6de686a3e2020231effbc1016ed2e50155b1e0
cb2da092a2feef91bbfee98abc00>ArialMT AddT42Char 
2 13158 85 <00010085000002c6043e001100c9403b2f13011004012304340443045304
66047404060911080908090d1311090d000308010b1c06070106000a0928
900801082220130113022211250100b8ffc04010333634f0000100002000
d000e0000400b8fff8b41010025500b8fff840110e0e025500040c0c0255
00060b0b025500b8fffcb41010065500b8fff440160f0f065500060c0c06
5500080d0d0655004e1247c4182b10f62b2b2b2b2b2b2b2b5d712b3cfde4
105df472e4003f3f3fed11393911393901111239390010c9870e7dc43130
005d72015d33113315363633321707262322060706151185a23e693f5b5e
3e42423b5e141e0426a171483aa727473f6072fdd400>ArialMT AddT42Char 
2 5622 68 <0002004affe8041c043e00280037022d402c090d092a190d1a2a290d2a2a
390d3615371b3a2a492a5d0d5d2a6a0d692a60308a0d86299a169b1aa90d
1528b8ffe8b40b0b065527b8ffe840190b0b0655a619aa28b619bb28c419
cf28d215dd28084416011eb8fff440110c0c065512120c0c0655050c0c0c
065535b8ffe040550c0c06551f171f182b2c2a343904392c4904482c5608
592b6608692b760c870cc90cf90df92b1137340e0104102f243417322114
185f296f2902291c2f0e3f0e8f0e9f0eff0e059f0eaf0eef0e030e0c0f0f
02550eb8ffeab4101002550eb8fff44015101006550e0c0d0d06550e060f
0f06550e0e1c0317b802aab61895141c1c0700b8fff4401a0c0c06550045
270a321c030b2961106100060d0d025500252124b8ffecb41010025524b8
ffec400b0d0d025524040c0c025524b8ffe4b40b0b025524b8fff4b40b0b
065524b8ffdc400b1010065524060f0f065524b8fffcb40c0c065524b802
5b400e27400026102620263026af260539b8ffc0b40e0e025526b8ffd6b6
0e0e0255263139b8ffc0400d1e23343039c03902a039013917b8fff44041
10100655172518222f24bf06cf06021f063f0602060e0f0f0255060c0d0d
025506180c0c0255060c0b0b0255060c0b0b0655060e0d0d065506100c0c
065506313810f62b2b2b2b2b2b2b5d71edf4ed2b105d712bf62b2b5dedf4
2b2b2b2b2b2b2b2b3cfd2be5e5003fed3fe42b3fedfde41112392f2b2b2b
2b2b5d71ed711112391112393901111217393130005d2b2b2b2b01715d2b
2b0071250606232226353436363736373637363534272623220607273e02
333216161716151514161723260306070e02151416333236373635033c64
b96aafbc477348356bda67013345887f791db0186ed08988aa5010091722
bc1c1762c46f5c326d6968a2261d835546ab854e814e140e0d1a24250a6e
2d3d597118718b4b40614a2e78f0fb853d3801dd281c10284d2f48605b4f
3d77>ArialMT AddT42Char 
2 9396 76 <000200880000013c05ba0003000700cd405e09360b0b02554f099009a009
b009c009df09f0090700091f09700980099f09b009c009df09e009ff090a
1f09010001070402030906037e0100060506040a0607250500049f04a004
b004c004e00406c004f0040200042004d004e0040404b8fff8b410100255
04b8fffa40170e0e025504040c0c0255040a0b0b025504140b0b065504b8
ffeab41010065504b8fffeb40d0d065504b8fffc400a0c0c0655044e0847
50182b10f62b2b2b2b2b2b2b2b5d71723cfd3c003f3f3c3fed0111123939
111239393130015d72712b133533150311331188b4b4b404ebcfcffb1504
26fbda00>ArialMT AddT42Char 
2 11850 82 <00020044ffe80427043e000d0019016bb615180d0d065513b8ffe8b40d0d
06550fb8ffe840730d0d065519180d0d065512070a190c47064808560659
08670669080834103a123a16351845104b124b1645185c055c0952105d12
5d1652186d056d0964106d126d1664187701150906050d5b035405540a5b
0c6c036505650a6c0c0a171c0407111c0b0b14241b400d0d02551b400b0b
025507b8ffea40110f0f025507180d0d025507100b0b025507b8fff0b40b
0b065507b8fff0b40d0d065507b8fff0b40f0f065507b8fff0b40c0c0655
07b8ffc04013242534300701000710072007030731df1b011bb8ffc04049
1e2334301b011b0e24000c0e0f025500120d0d0255000c0c0c0255001c0b
0b0255000e0b0b0655000e0d0d0655000c1010065500160c0c0655004024
25341f003f000200311a3437182b10f65d2b2b2b2b2b2b2b2b2bed10712b
5df65d5d2b2b2b2b2b2b2b2b2b2bed003fed3fed313001715d0071435c58
4009530553096205620904015d59002b2b2b2b1310373633320015140606
23220013141633323635342623220644a489c5db01167beb8bdffeedb9b2
8786b2b38587b2021301278e76fee1fdcdeb82011e010dcccbccd1c5cbca
>ArialMT AddT42Char 
2 11396 81 <00010087000003e6043e0016017d40130503061302a810b810e303e713f0
03f6130604b8fff0403c0b0d347910019810d018e018ff18042008140e14
16121c05070106160d0a0d0e0c0e2418401010025518400b0b02550b2810
1002550b140e0e02550bb8ffec40110d0d02550b040c0c02550b220b0b02
550bb8fff4400b0b0b06550b14101006550bb8fff9400b0d0d06550b0a0f
0f06550bb8fff640120c0c06550b40333634ff0b01ff0b010b4e18b8ffc0
401a343634b018f018027018a018b018c01804180302331516250100b8ff
f6b41111025500b8fffab41010025500b8fffa40170e0e025500040c0c02
55000a0b0b025500040b0b065500b8fffa40110f0f065500020c0c065500
040d0d065500b8ffc04012333634f0000100002000d000e00004004e1710
f65d712b2b2b2b2b2b2b2b2b2b3cfd3cf43c105d712bf65d712b2b2b2b2b
2b2b2b2b2b2b2b2bed3c103c003f3c3f3fed113901123931304379401606
11090a080a070a0306102611060e1b010f0a121b01002b012b2b2a81015d
71002b5d71331133153633321616171615112311342626232206151187a2
75dd60a150100ab42a6b4873a7042697af45704d327dfd7302866e6d4192
ccfdbc00>ArialMT AddT42Char 
1 0 0 <00020100000005000500000300070042b40201e40607b802994013000504
e403000a0704e4010019080605e40203bc023100090199012e00182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/T 55 def
/e 72 def
/s 86 def
/t 87 def
/space 3 def
/C 38 def
/r 85 def
/a 68 def
/i 76 def
/o 82 def
/n 81 def
end
ArialMT /Encoding get
dup 84 /T put
dup 101 /e put
dup 115 /s put
dup 116 /t put
dup 32 /space put
dup 67 /C put
dup 114 /r put
dup 97 /a put
dup 105 /i put
dup 111 /o put
dup 110 /n put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/N11 7.979996 Tf
(Test Creation)
[4.880505 4.441664 3.994786 2.223226 2.22163 5.766346 2.699573 4.441664 4.441664 2.223226 1.776348 
4.441664 4.441664 ] pdfxs
n
136.800003 633.600037 m
194.400009 633.600037 l
198.419998 633.600037 201.600006 636.779968 201.600006 640.799988 c
201.600006 644.76001 198.419998 648.0 194.400009 648.0 c
136.800003 648.0 l
132.839996 648.0 129.600006 644.76001 129.600006 640.799988 c
129.600006 636.779968 132.839996 633.600037 136.800003 633.600037 c
1.0 1.0 0.6 sc
eofill
n
136.800003 633.600037 m
194.400009 633.600037 l
198.419998 633.600037 201.600006 636.779968 201.600006 640.799988 c
201.600006 644.76001 198.419998 648.0 194.400009 648.0 c
136.800003 648.0 l
132.839996 648.0 129.600006 644.76001 129.600006 640.799988 c
129.600006 636.779968 132.839996 633.600037 136.800003 633.600037 c
h
0.0 0.0 0.0 sc
S
134.459991 638.400024 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(C)
[5.819014 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(o) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
2 10836 80 <0001008700000626043e002301c7b9000dfff4b40d0d065508b8fff4b40d
0d065509b8ffd8404d0b0d342504e404e409e117e52005d505f620021708
202309181b20090303231e1c06151c0b0b06070106231a19100ad0250190
25a025022517171a0e2590110111041010025511180f0f025511b8ffec40
0b0e0e025511140c0c025511b8ffe840170b0b025511020b0b0655110c10
10065511060f0f065511b8fffab40c0c065511b8fff8b40d0d065511b801
5d400c1825901b011b180f0f02551bb8ffec400b0e0e02551b140c0c0255
1bb8ffee40110b0b02551b040b0b06551b0a101006551bb8fffe400b0d0d
06551b0c0f0f06551bb8fffcb40c0c06551bb8015d4016000233232501d0
00019000a000021f003f004f000300b8fffe401d0e0e025500100d0d0255
00100c0c0255000c0b0b025500160b0b065500b8fffcb41010065500b8ff
f440140f0f0655000a0c0c0655000e0d0d065500192425b80178b3214750
182b2b4ef42b2b2b2b2b2b2b2b2b5d71723c4dfde410f42b2b2b2b2b2b2b
2b2b5dedf42b2b2b2b2b2b2b2b2b2b5dfd4e456544e67172003f3c3c3c3f
3f3c4d10ed10ed11173901111239123931304379400e0c141326140c111b
01120d151b01002b012b2b81015d005d2b2b2b3311331536363332161736
3332161511231134262623220615112311342623220606151187a132a66a
76971f7eca9eaab3235c3e7094b458644c813a0426954e5f6258baafb6fd
27029d6c5f3a95a4fd9702b27878509a91fdd900>ArialMT AddT42Char 
2 12300 83 <00020087fe690421043e0012001e0162408e0c102d103d104b10043f20b0
20021f20290c231d3215321d421d70209020083a173a1b4a174a1b59085b
0c5c175c1b6a086b0c69106d176b1bc020d314dd18dd1ad31ee414e41ee0
20ff201623042b102b1535043a1046044a105a10e50beb1dfe100b110e03
161c1c06070106161c0e0b000e1924d00a01100a400a600a800a0420400b
0b025520400d0d02550ab8ffe6400b0f0f02550a180d0d02550ab8fffab4
0c0c02550ab8ffeeb40b0b06550ab8fff4b40f0f06550ab8ffe840230c0c
06550a74011333023312250000c001019001a001b001f001041f013f014f
010301b8fffc401d0e0e025501100d0d025501100c0c025501100b0b0255
010c0b0b065501b8fff6b41010065501b8fffc40160f0f0655010c0c0c06
5501120d0d065501191f473718012b4e10f42b2b2b2b2b2b2b2b2b5d7172
3c4d10fdf4e410fd2b2b2b2b2b2b2b2b5d71ed003f3fed3f3fed11391239
3130005d015d717200711311331536363332161615140206232226271103
141633323635342623220687a43a926888d06a75df7b5a8f2e11a67678ab
a77473b1fe6905bd8a51518cff98a3fefb8b4c3afdfb03a4cdc4cbd5cbca
d700>ArialMT AddT42Char 
2 10584 79 <000100830000013705ba000300e3b605360b0b025505b8ffc0b337383405
b8ffc0b334353405b8ffc0b330313405b8ffc0b322253405b8ffc0402515
17340f051f059f05df05044f05df05f005031f0570058005ff0504010000
0a0203250100b8ffc0b337383400b8ffc040153335349f0001c000f00002
00002000d000e0000400b8fff8b41010025500b8fffa401d0e0e02550004
0c0c0255000a0b0b025500140b0b065500081010065500b8fffeb40d0d06
5500b8ffffb40c0c065500b8fffc400a0c0c0655004e044750182b10f62b
2b2b2b2b2b2b2b2b5d71722b2b3cfd3c003f3f3130015d71722b2b2b2b2b
2b3311331183b405bafa4600>ArialMT AddT42Char 
1 10720 40 <000100a2000004e805ba000b0095401506051e080807070003041e020102
0a091e0b000807b8ffc0401d1012340754034a200a200d020a1a0d040920
0120000100201010025500b8fff6b40f0f025500b8fff6b40d0d025500b8
fffab40c0c025500b8fffab40c0c065500b8fff0400a0d0d0655005d0c3b
5b182b4e10f42b2b2b2b2b2b5d3c4dfd3c4e10f65d4df4e42b003f3cfd3c
3f3cfd3c12392f3c10fd3c3130331121152111211521112115a20424fc9e
032bfcd5038405baadfe3facfe0dad00>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/m 80 def
/p 83 def
/l 79 def
/E 40 def
end
ArialMT /Encoding get
dup 109 /m put
dup 112 /p put
dup 108 /l put
dup 69 /E put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(mpilation Error)
[6.652065 4.441664 1.776348 1.776348 4.441664 2.223226 1.776348 4.441664 4.441664 2.22163 5.327505 
2.699573 2.662067 4.441664 2.662067 ] pdfxs
n
136.800003 583.200012 m
194.400009 583.200012 l
198.419998 583.200012 201.600006 586.380005 201.600006 590.400024 c
201.600006 594.359985 198.419998 597.600037 194.400009 597.600037 c
136.800003 597.600037 l
132.839996 597.600037 129.600006 594.359985 129.600006 590.400024 c
129.600006 586.380005 132.839996 583.200012 136.800003 583.200012 c
1.0 0.2 0.0 sc
eofill
n
136.800003 583.200012 m
194.400009 583.200012 l
198.419998 583.200012 201.600006 586.380005 201.600006 590.400024 c
201.600006 594.359985 198.419998 597.600037 194.400009 597.600037 c
136.800003 597.600037 l
132.839996 597.600037 129.600006 594.359985 129.600006 590.400024 c
129.600006 586.380005 132.839996 583.200012 136.800003 583.200012 c
h
0.0 0.0 0.0 sc
S
148.259995 588.0 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(T)
[4.914819 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 10916 41 <000100a80000048505ba0009008d402b06051e08088f070107070003041e
0201020008079c2002200b02021a0b0409200120000100201010025500b8
fff6b40f0f025500b8fff6b40d0d025500b8fffa400b0c0c0255000c0b0b
065500b8fffeb40c0c065500b8fff0400a0d0d0655005d0a3b5c182b4e10
f42b2b2b2b2b2b2b5d3c4dfd3c4e10f65d4de4003f3f3cfd3c12392f5d3c
10fd3c313033112115211121152111a803ddfce502b0fd5005baadfe3aad
fd66>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/F 41 def
end
ArialMT /Encoding get
dup 70 /F put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st F)
[3.959674 2.22163 2.22163 4.914819 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(a) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(ils)
[1.810662 1.738842 4.029099 ] pdfxs
n
165.600006 633.600037 m
165.600006 605.820007 l
S
n
168.600006 606.600037 m
165.600006 597.600037 l
162.600006 606.600037 l
168.600006 606.600037 l
eofill
n
135.539993 610.799988 59.580002 9.599976 re
1.0 1.0 1.0 sc
f
0.0 0.0 0.0 sc
135.779999 613.200012 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
2 7258 71 <00020046ffe803df05ba0011001d015540a40a02040d250d340d440d0535
14351c5702540a5214531c6702640565096314601cc01fd405d513dd19e5
13e514ef17eb19e51de01fff1f161f1f2b1a3c163c1a4b1a701f901f072e
02240d2e163a02350d4b02450d4614491c570a560d670de506e716fa01f4
0e100115030e0b100f001b1c0b0711000a151c030b1833010025110f2510
10d011011011401160118011041f400b0b02551f400d0d02551112101002
5511b8fff440110f0f025511060e0e025511180d0d025511b8fff2400b0b
0b0655110e1010065511b8ffeeb40c0c065511b8fff840420d0d06551174
1224bf07cf07df07ff07041f073f074f0703071e0b0b025507180c0c0255
071e0d0d0255070c0b0b0655070c0d0d0655071a0c0c065507191e345018
2b4e10f42b2b2b2b2b2b5d714dedfd2b2b2b2b2b2b2b2b2b2b5d713c10ed
10fd3ce4003fed3f3c3fed3f3c11391112393130005d01715d0071213506
232226263534123633321617113311011416333236353426232206033865
c47fd5756ad48360962fb3fd20ac7576a5a87b78a1869e8cfba39f01038a
5141020efa460212cccac1c6daccc400>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/d 71 def
end
ArialMT /Encoding get
dup 100 /d put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Code )
[5.819014 4.43528 4.43528 4.43528 2.22163 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
2 0 51 <0002009e000004fd05ba000d001800b2402c65116b14024b104b145b105b
14040b0c1e0f0e0e0017181e02010200081226080a0d0d025508100b0b06
5508b8fff4401b0c0c0655081a201a01201a011a180d2001200001002010
10025500b8fff6b40f0f025500b8fff6b40d0d025500b8fffa400b0c0c02
55000c0b0b065500b8fffab40c0c065500b8fff0400a0d0d0655005d193b
5c182b10f62b2b2b2b2b2b2b5d3cfd3c4e10715df62b2b2b4ded003f3f3c
fd3c12392f3cfd3c3130015d005d33112132171e02151402212111112132
36353426272623219e0229924d6c9259eefec9fe88017bbc9e5d4c3184fe
8905ba0e1265b66dbbfefdfdac03018c7f5c83150d00>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/P 51 def
end
ArialMT /Encoding get
dup 80 /P put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(P) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
2 14648 88 <00010083ffe803e004260018014fb9001affc0400915173402201316340f
b8fff040331214342b1301240813160c0113160b06000a111c030b003316
251817403336341a401010025517281010025517120e0e025517b8ffec40
0b0d0d025517040c0c025517b8fff4400b0b0b065517141010065517b8ff
f8400b0d0d0655170c0f0f065517b8fff6400d0c0c0655ff1701c0170117
4e1ab8ffc04015343634b01af01a02701aa01ab01aff1a041a0c2509b8ff
c04010333634f0090100092009d009e0090409b8fff8b41010025509b8ff
f840110e0e025509040c0c0255090a0b0b065509b8fff640160f0f065509
020c0c065509020d0d0655094e194750182b10f62b2b2b2b2b2b2b5d712b
ed105d712bf65d712b2b2b2b2b2b2b2b2b2b2b3cfde4003fed3f3f3c3939
0111123931304379401a04100e0d0f0d0206070806080508030610040c1b
000d08111b00002b012b2a2a81005d012b2b2b2135062322262627263511
3311141716163332363635113311033f7cd55ea34f100bb40b116e51518e
3bb49cb4486d4f35730292fdb38d314751538f880239fbda>ArialMT AddT42Char 
2 6822 70 <00010050ffe803ed043e001a015ab1020243545840340e7f0f010f0b0140
0050007000030004121c0b07181c040b010e1507080e0e0255070c0d0d02
55070c0c0c025507100b0b0255072f2b2b2b2bcdd4c6003fed3fed10c45d
3210c45d3231301b4047090c011f1c4313431753135317601360179b029b
039a0da410a41a0c080d190a6a0269036a05750c700d800da60cb509b60a
b50c0c160c860ce302030e225f0f6f0f7f0f030f01b802aa407930004000
5000600070009000a000e000f00009000f0f0b000004121c0b07181c040b
1c0f010f240e080d0d06550e221b000100240b2b1f010100010101400b0b
065501401010065501480c0c0655011a0d0d065501491c1524cf07011f07
3f0702070e0b0b0655070a1010065507120c0c065507311b34c4182b10f6
2b2b2b5d71ed10f62b2b2b2b5d724b53234b515a58b90001ffc03859ed72
f42bed72003fed3fed12392f11392f105de4105de43130005d71015d7159
011706062322001134123633321617072626232206151416333236033cb1
1defaedafef772e989addc1faf197f5a88aaa4846a8e018517b7cf011d01
0aac010281afa11b6b6cc3d3d6c28200>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/u 88 def
/c 70 def
end
ArialMT /Encoding get
dup 117 /u put
dup 99 /c put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(roduction)
[2.655683 4.49912 4.43528 4.43528 3.988402 2.28148 1.738842 4.43528 4.43528 ] pdfxs
n
165.600006 684.0 m
165.600006 654.419983 l
S
n
168.600006 655.200012 m
165.600006 646.200012 l
162.600006 655.200012 l
168.600006 655.200012 l
eofill
n
136.440002 660.299988 57.779999 9.599976 re
1.0 1.0 1.0 sc
f
0.0 0.0 0.0 sc
136.679993 662.700073 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Code T)
[5.819014 4.446452 4.446452 4.446452 2.22163 4.921203 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st Case)
[3.999574 2.228014 2.22163 5.771134 4.446452 3.999574 4.446452 ] pdfxs
n
165.600006 583.200012 m
165.600006 555.419983 l
S
n
168.600006 556.200012 m
165.600006 547.200012 l
162.600006 556.200012 l
168.600006 556.200012 l
eofill
n
135.539993 560.400024 59.580002 9.599976 re
1.0 1.0 1.0 sc
f
0.0 0.0 0.0 sc
135.779999 562.799988 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Code )
[5.819014 4.43528 4.43528 4.43528 2.22163 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(P) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(roduction)
[2.655683 4.49912 4.43528 4.43528 3.988402 2.28148 1.738842 4.43528 4.43528 ] pdfxs
n
136.800003 532.799988 m
194.400009 532.799988 l
198.419998 532.799988 201.600006 535.97998 201.600006 540.0 c
201.600006 543.959961 198.419998 547.200012 194.400009 547.200012 c
136.800003 547.200012 l
132.839996 547.200012 129.600006 543.959961 129.600006 540.0 c
129.600006 535.97998 132.839996 532.799988 136.800003 532.799988 c
0.0 1.0 0.0 sc
eofill
n
136.800003 532.799988 m
194.400009 532.799988 l
198.419998 532.799988 201.600006 535.97998 201.600006 540.0 c
201.600006 543.959961 198.419998 547.200012 194.400009 547.200012 c
136.800003 547.200012 l
132.839996 547.200012 129.600006 543.959961 129.600006 540.0 c
129.600006 535.97998 132.839996 532.799988 136.800003 532.799988 c
h
0.0 0.0 0.0 sc
S
143.580002 537.600037 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(T)
[4.921203 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st Passes)
[3.967654 2.28148 2.22163 5.300373 4.499119 3.967654 4.020322 4.414532 3.967654 ] pdfxs
153.360291 518.400146 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
3 1678 92 <00010021fe5103ee0426001a01f7b10202435458401d0a140f030b031c19
0f12060b061340120f200b400c200f180f0f02550f192f2b1add1a18cd1a
1910dd1a18cd003f3f3fed12173931301bb30f1c010fb8ffde406d1c3928
14560faf0a03400d400f020f202830341020283034070c0912160d181227
0b270c270d360c360d350e99110b28122813481659125913591569126913
69157906760d79117a147a15850d8a118c128c138914980aa80bbc10bb11
ba14ea0ae714f50dfd10f914ff1c1e12b106024354584016130b1c1b040f
440f840f030f190b031c190f12060b06003f3f3fed1112395d0111123939
1b40370f0f0c101112120a00031914131325120a1412120a0f0c0f110c25
0b0a140b0b0a1312120c0c0b06031c190f001c101c022f1cbf1c021cb802
3fb50f1340124014b80254400b3f124012025f12bf120212b80142b60f01
2200451b0ab8025440120f200b4040200c300c4f0c03500cff0c020cb801
42b32f0f010fb8023fb41b207c66182b1a1910fd71f45d711a18ed1a1910
ed1810f4e41910e45d71ed1a1810ed1910e45d7100183fed3f3c103c103c
87052e2b087d10c487052e182b0e7d10c400111239870e103c3c08c44bb0
0e534bb018515a58bb000cffe8000bffe80138385959313001435c58b900
14ffdeb637390a2237390eb8ffe8b51539112215392b2b2b2b595d712b2b
00715d2b015d591327163332363736373637013313161736371333010607
060623227f143b2c3c48171126050bfe6dc2dd2b221f2be3b4fe6c412430
7c5634fe67a91028241b6b0f1d0428fd9975817c76026bfbc8af42595300
>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/y 92 def
end
ArialMT /Encoding get
dup 121 /y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Ty)
[4.921203 3.959674 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(p) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 3924 20 <000100df000002fb05c0000a00af402003400d11346b047f028f02990804
ac04010900060502030905010c0201ca0a00b8ffc0400a21233430000120
000100b8ffe0b41010025500b8ffea40110f0f0255001c0c0c0255000e0d
0d025500b8fff040190f0f065500100c0c065500100d0d0655001a0c0540
0d0f3405b8ffc0400e212334300501200540050205190bba013c01850018
2b4e10e45d712b2b10f62b2b2b2b2b2b2b5d712b3c4dfd3c003f3f173901
11393130015d005d2b212311060607353636373302fbb441d35497e22f74
047b3e7c1fae47ca5f00>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/one 20 def
end
ArialMT /Encoding get
dup 49 /one put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e 1)
[4.499119 2.22163 4.482362 ] pdfxs
126.720657 508.800201 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Complete T)
[5.767144 4.442461 6.652863 4.442461 1.777146 4.442461 2.224024 4.442461 2.22163 4.921203 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 3238 16 <0001004101b8026a026d0003002c401970027003024d014d020201230002
1a05700001001904708d182b4e10e45d10e6002f4ded31300071015d1335
211541022901b8b5b500>ArialMT AddT42Char 
1 10392 39 <0002009e0000055a05ba000f001d00e5402f201f0143081c1d1e02010211
101e0f000817262009011f400d0d0255092010100255090a0f0f02550918
0d0d025509b8fff440150c0c0655091a1f1d102001200001002010100255
00b8fff6b40f0f025500b8fff6b40d0d025500b8fffab40c0c025500b8ff
f7b40c0c065500b8fff8400a0d0d0655005d1e3b5c182b10f62b2b2b2b2b
2b5d3cfd3c10f62b2b2b2b2b5ded003f3cfd3c3f3cfd3c31304379403603
1b0708060805080408040619181a1802060b0a0c0a0d0a03061516141613
1603061b03172101120e17210118081c2101160a1121002b2b012b2b2a2a
2a2a81015d3311213217161716121514020e022325213236373636353426
272623219e01f9ab5a7e5974734e7a91cd85feb1013991a531454d976c4e
adfecc05ba151d4c62fecfc4a7fefea96132ad363145e9a6e6f72a1e>ArialMT AddT42Char 
2 15062 89 <0001001a000003e80426000a01eab1020243545840170508000a08060106
0a0005090805010205240f0f0255052f2bddcd10ddcd113333003f3f3f12
3931301bb7350501002211390ab8ffde400d11390916121c340816121c34
02b8ffeab3121c3401b8ffeab3121c340ab8ffd840091e213400281e2134
0ab8ffe8400922253400162225340ab8ffda407e282e340020282e340f0c
29002809260a3900350a4800470a56015602590858096601660269086909
78007701770279087809770a870187028603890788088a099d009809910a
ac00a20abd00b707b10ac900c50ada00d50aec00e30afb00f40a2c0a0005
0a1800160a2800260a370a4f00400a09054012163405400b0d34b1060243
5458400905010008060106000ab8fff4400f0d0d06550a000c0d0d065500
050908b8fff440120d0d0655080501020c0d0d06550205050c0b1112392f
dd2bcd10dd2bcd10cd2bcd2b002f3f3f11123931301b40370a0708082509
0a1409090a0003020225010014010100050a0a000a09080802020106070a
09030001052f0c010c22084040400980090209b8011bb5400580050205b8
011b400920024001220bead2182b10f6ed1a19fd5dfd5d1a18ede45d1112
3939123939003f3c103c103c3f3c113987052e2b877dc4872e182b877dc4
593130002b2b01715d2b2b2b2b2b2b2b2b2b2b2b2b005d59210133131617
363713330101aefe6cbee4251f182becb9fe6e0426fd84676f54760288fb
da00>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/hyphen 16 def
/D 39 def
/v 89 def
end
ArialMT /Encoding get
dup 45 /hyphen put
dup 68 /D put
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st-Driven )
[3.995584 2.224024 2.662865 5.767144 2.662865 1.777146 3.995584 4.442461 4.442461 2.22163 ] pdfxs
151.141052 499.200256 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 11760 44 <000100bf0000018105ba000300ccb5010200080205b8ffc0b3383d3405b8
ffc0b333343405b8ffc0b32d303405b8ffc0b328293405b8ffc0b3232534
05b8ffc0b31d1e3405b8ffc0b3181a3405b8ffc0402a0d103420059005af
050303200100008f00a000b000042f0040005000df00f000051220008f00
90000305b8ffc0400b0d0d025500181010025500b8ffecb40f0f025500b8
ffeeb40d0d025500b8fff640100c0c025500200b0b065500a204d659182b
10f62b2b2b2b2b2b5d435c58b2800001015d5971723cfd5d2b2b2b2b2b2b
2b2b3c003f3f313033113311bfc205bafa46>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/I 44 def
end
ArialMT /Encoding get
dup 73 /I put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Iteration)
[2.228014 2.228014 4.446452 2.666855 4.446452 2.228014 1.781136 4.446452 4.446452 ] pdfxs
n
223.199997 684.0 m
280.800018 684.0 l
284.820007 684.0 288.0 687.179993 288.0 691.200012 c
288.0 695.159973 284.820007 698.400024 280.800018 698.400024 c
223.199997 698.400024 l
219.23999 698.400024 216.0 695.159973 216.0 691.200012 c
216.0 687.179993 219.23999 684.0 223.199997 684.0 c
1.0 1.0 1.0 sc
eofill
n
223.199997 684.0 m
280.800018 684.0 l
284.820007 684.0 288.0 687.179993 288.0 691.200012 c
288.0 695.159973 284.820007 698.400024 280.800018 698.400024 c
223.199997 698.400024 l
219.23999 698.400024 216.0 695.159973 216.0 691.200012 c
216.0 687.179993 219.23999 684.0 223.199997 684.0 c
h
0.0 0.0 0.0 sc
S
228.0 688.799988 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Test Creation)
[4.880505 4.441664 3.994786 2.223226 2.22163 5.766346 2.699573 4.441664 4.441664 2.223226 1.776348 
4.441664 4.441664 ] pdfxs
n
223.199997 633.600037 m
280.800018 633.600037 l
284.820007 633.600037 288.0 636.779968 288.0 640.799988 c
288.0 644.76001 284.820007 648.0 280.800018 648.0 c
223.199997 648.0 l
219.23999 648.0 216.0 644.76001 216.0 640.799988 c
216.0 636.779968 219.23999 633.600037 223.199997 633.600037 c
1.0 1.0 0.6 sc
eofill
n
223.199997 633.600037 m
280.800018 633.600037 l
284.820007 633.600037 288.0 636.779968 288.0 640.799988 c
288.0 644.76001 284.820007 648.0 280.800018 648.0 c
223.199997 648.0 l
219.23999 648.0 216.0 644.76001 216.0 640.799988 c
216.0 636.779968 219.23999 633.600037 223.199997 633.600037 c
h
0.0 0.0 0.0 sc
S
220.860001 638.400024 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(C)
[5.819014 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(o) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(mpilation Error)
[6.652065 4.441664 1.776348 1.776348 4.441664 2.223226 1.776348 4.441664 4.441664 2.22163 5.327505 
2.699573 2.662067 4.441664 2.662067 ] pdfxs
n
252.0 633.600037 m
252.0 555.419983 l
S
n
255.0 556.200012 m
252.0 547.200012 l
249.0 556.200012 l
255.0 556.200012 l
eofill
n
221.940002 585.600037 59.579987 9.599976 re
1.0 1.0 1.0 sc
f
0.0 0.0 0.0 sc
222.179993 588.0 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Code )
[5.819014 4.43528 4.43528 4.43528 2.22163 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(P) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(roduction)
[2.655683 4.49912 4.43528 4.43528 3.988402 2.28148 1.738842 4.43528 4.43528 ] pdfxs
n
252.0 684.0 m
252.0 656.219971 l
S
n
255.0 657.0 m
252.0 648.0 l
249.0 657.0 l
255.0 657.0 l
eofill
n
222.839996 661.200012 57.779999 9.599976 re
1.0 1.0 1.0 sc
f
0.0 0.0 0.0 sc
223.080002 663.600037 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Code T)
[5.819014 4.446452 4.446452 4.446452 2.22163 4.921203 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st Case)
[3.999574 2.228014 2.22163 5.771134 4.446452 3.999574 4.446452 ] pdfxs
n
223.199997 532.799988 m
280.800018 532.799988 l
284.820007 532.799988 288.0 535.97998 288.0 540.0 c
288.0 543.959961 284.820007 547.200012 280.800018 547.200012 c
223.199997 547.200012 l
219.23999 547.200012 216.0 543.959961 216.0 540.0 c
216.0 535.97998 219.23999 532.799988 223.199997 532.799988 c
0.0 1.0 0.0 sc
eofill
n
223.199997 532.799988 m
280.800018 532.799988 l
284.820007 532.799988 288.0 535.97998 288.0 540.0 c
288.0 543.959961 284.820007 547.200012 280.800018 547.200012 c
223.199997 547.200012 l
219.23999 547.200012 216.0 543.959961 216.0 540.0 c
216.0 535.97998 219.23999 532.799988 223.199997 532.799988 c
h
0.0 0.0 0.0 sc
S
229.979996 537.600037 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(T)
[4.921203 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st Passes)
[3.967654 2.28148 2.22163 5.300373 4.499119 3.967654 4.020322 4.414532 3.967654 ] pdfxs
239.760284 518.400146 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Ty)
[4.921203 3.959674 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(p) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 4144 21 <0001003c0000040705c0001e01c7b10602435458400911100d1813130655
0db8fff4b4111106550db8ffee4009101006550d1e14051eb8ffe8401713
1306551e1e111106551e1c0e1006551e0c0d0d06551eb802bb400c020a17
17201f10110202201f1112392fd4cd1112392fcd002fed2b2b2b2b3fed2b
2b2bc43231301bb10202435458400911100d0c121202550db8fff440090f
1102550d1e14051eb8ffe0400b121302551e140f1102551eb802bbb2020a
17b8ffe8b40b0b025517b8ffec400e0d0d02551717201f10110202201f11
12392fd4cd1112392f2b2bcd002fed2b2b3fed2b2bc43231301b40363b05
3b06bb05bf06bb07c708c91c07490c590c540e6b0c640e7a127a138912bc
12e51ae51bf01a0cbf0bb713021b101c101d101e1006befff00007ffe000
08fff00009fff0401a1e0a10080606ca1c1a141c1c1a081c1a030102081a
1c030d1e10b802a4b34f110111b80118b50d1e1405001eb802bb400f0102
0c0a7317d30000014021233401bb0281002000100138400c11b53f025f02
6f027f020402ba0224001f018fb18b182b10f65df4ed10f62b3c10f4ed00
3f3cfd3c3fedfd5de4111217390111121739870e2e2b0e7d10c401111239
313000383838380138383838005d015d7259592515212637363637363635
34262322060727363633321615140606070606070407fc37021725a39aef
a8997b829c01b913f8d1d3f648a7c2a25c1eadad413c63c07ec4e5666b93
9c8a13cfd9eaad58aabca4886131>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/two 21 def
end
ArialMT /Encoding get
dup 50 /two put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e 2)
[4.499119 2.22163 4.482362 ] pdfxs
215.760437 508.800201 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(T)
[4.905243 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st-Driv)
[3.959674 2.22163 2.686805 5.758366 2.686805 1.738842 4.019524 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(en) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
( It)
[2.22163 2.247964 2.247964 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(r)
[2.686805 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(a) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(ti)
[2.247964 1.801086 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(on) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
( ) show
217.080322 499.200256 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
3 0 90 <00010006000005b704260012041db10202435458b90012fff440110d0d02
5507060d0d025500060d0d02550ab8ffd4b40c0d025504b8ffe8400b0c0d
025511200c0d02550ab8ffc0b40e10025504b8ffc0402f0e10025511400e
100255040a110301000c06070601060f0a000a0d0c060c0c02550c110102
040a04110a0c0c025511b8fff8b40d0d0255112f2b2bcdcd10d6cd10d42b
cd003f3f3f3f3f111217393130002b2b2b2b2b2b012b2b2b1b40160f1401
2a04290a024a115b118e110311200d0d06550ab8ffe0b40d0d065504b8ff
e0b40d0d065511b8fff040091f2134101c1d273409b8fff040b71f243404
060c0913061b09191205040004060b090b0e08121000130314071c081b0b
1d0e240025072a082b0e340035073a083b0e4403470640074d084b0b430f
47114a125b0f52126b076408671279067a077408b906ba0fb612f506fb09
280b112800280d270e280f27122f1438003712770886089803970ca701a8
02a80ba60cb500b606ba0ec804d606d909e804e80fe712f406fa091c0b06
0d0d06550c060d0d065510060d0d06550e060d0d06550f060d0d065512b1
0602435458401b0a0e0f0412001108070825070f250e122500000e07030d
010c250db8ffd640370b0b06550d0225012a0b0b0655010d011413060a0b
11260a2b115404520a5c116c117c118a110a110a040300010f0a000a0c06
07060106003f3f3f3f3f111217395d01111239392f2bf42f2bf411121739
10e410e410e41112391112391112391b40140305050206070705090a0a08
0b0c0c0a1011110fb8ff4bb305001220b8ff4940660a0f0e20c311070820
071112122b0507140505070e0a0c0c250d0e140d0d0e08110f0f2b0a0814
0a0a080005020225010014010100000201071204080f110c0e0d0a110a04
03120d0c0c0808070702020106120f0f0e0e000a14f6100d01600d700d80
0d030db801a7400a204f0a016f0a7f0a020ab8025540094f11016f117f11
0211b80255400b1005016005700580050305b801a7b501f613f666182b4e
10f4194df45d5d18fd5d71fd5d711a19fd5d5d18e6003f3c103c103c3f3c
103c103c103c103c1217390111123939123939113939123939874d2e2b87
7dc4872e182b877dc4872e182b877dc4872e182b877dc42b2b2b870e10c4
070e103c070e103c870e10c4870e10c44bb01f5358b40d200c2002bcffe0
0001ffe0000effd0b400300f2012b8ffe0013838383838383838594bb034
5358b90008ffd0b10730013838594bb021534bb033515a58b90008ffe0b1
0720013838594bb012534bb01e515a58b9000effd0b60f200d200c2008b8
ffd0b2073012b8ffe0b2003802baffe00001ffe001383838383838383838
38594bb012534bb017515a58b90011ffe0b30a2004200038383859593130
01435c58b9000effd4b61239002c123900b8ffd4b113392b2b2b592b2b2b
2b2b5d71722b2b2b002b2b2b715d015d5921013313173637133313173713
330123032703014bfebbbaa93f0433a9b99f353db6affeb4bba929d70426
fd9be411ca026efd98cbcd0266fbda027cb5fccf>ArialMT AddT42Char 
2 8976 75 <00010087000003e805ba00140161b90016ffc0b315173403b8ffe0400e0d
0d0655250435034503ba0d0403b8ffe0403a1719341708110c1114030501
000f1c0507140b0a0c250940333634ff0901c0090116400b0b0255164010
10025509281010025509140e0e025509b8ffec40110d0d025509040c0c02
55091a0b0b025509b8fff6400b0b0b065509141010065509b8fff8400b0d
0d0655090a0f0f065509b8fff6b60c0c0655094e16b8ffc04017343634b0
16f016027016a016b016ff1604160214250100b8ffc04010333634f00001
00002000d000e0000400b8fffab41010025500b8fffa40170e0e02550004
0c0c025500080b0b025500040b0b065500b8fffa40160f0f065500020c0c
065500020d0d0655004e154750182b10f62b2b2b2b2b2b2b2b5d712b3cfd
3c105d712bf42b2b2b2b2b2b2b2b2b2b2b2b5d712bed003f3c3fed3f1139
113901123931304379400e060e07250e060c1b010d080f1b01002b012b2b
81002b5d2b012b33113311363332161615112311342623220606151187b4
7ec076ae4bb4756b508d3c05bafdf2925da49cfd5f02a1877b538e7dfdbb
>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/w 90 def
/h 75 def
end
ArialMT /Encoding get
dup 119 /w put
dup 104 /h put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(witho)
[5.819014 1.738842 2.224024 4.442461 4.499119 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(u) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(t Test F)
[2.224024 2.22163 4.881303 4.442461 3.995584 2.224024 2.22163 4.921203 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(a) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(ilure)
[1.777146 1.777146 4.442461 2.662865 4.442461 ] pdfxs
n
309.179993 684.0 m
367.679993 684.0 l
371.399994 684.0 374.399994 687.0 374.399994 690.719971 c
374.399994 694.440002 371.399994 697.5 367.679993 697.5 c
309.179993 697.5 l
305.459991 697.5 302.399994 694.440002 302.399994 690.719971 c
302.399994 687.0 305.459991 684.0 309.179993 684.0 c
1.0 1.0 1.0 sc
eofill
n
309.179993 684.0 m
367.679993 684.0 l
371.399994 684.0 374.399994 687.0 374.399994 690.719971 c
374.399994 694.440002 371.399994 697.5 367.679993 697.5 c
309.179993 697.5 l
305.459991 697.5 302.399994 694.440002 302.399994 690.719971 c
302.399994 687.0 305.459991 684.0 309.179993 684.0 c
h
0.0 0.0 0.0 sc
S
314.399994 688.380005 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Test Creation)
[4.881303 4.442461 3.995584 2.224024 2.222428 5.767144 2.700371 4.442461 4.442461 2.224024 1.777146 
4.442461 4.442461 ] pdfxs
n
309.600006 583.200012 m
367.200012 583.200012 l
371.220001 583.200012 374.399994 586.380005 374.399994 590.400024 c
374.399994 594.359985 371.220001 597.600037 367.200012 597.600037 c
309.600006 597.600037 l
305.639984 597.600037 302.399994 594.359985 302.399994 590.400024 c
302.399994 586.380005 305.639984 583.200012 309.600006 583.200012 c
1.0 0.2 0.0 sc
eofill
n
309.600006 583.200012 m
367.200012 583.200012 l
371.220001 583.200012 374.399994 586.380005 374.399994 590.400024 c
374.399994 594.359985 371.220001 597.600037 367.200012 597.600037 c
309.600006 597.600037 l
305.639984 597.600037 302.399994 594.359985 302.399994 590.400024 c
302.399994 586.380005 305.639984 583.200012 309.600006 583.200012 c
h
0.0 0.0 0.0 sc
S
321.059998 588.0 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(T)
[4.914819 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st F)
[3.959674 2.22163 2.22163 4.914819 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(a) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(ils)
[1.810662 1.738842 4.029099 ] pdfxs
n
337.200012 648.0 m
337.200012 605.820007 l
S
n
340.200012 606.600037 m
337.200012 597.600037 l
334.200012 606.600037 l
340.200012 606.600037 l
eofill
n
307.139984 618.0 59.579987 9.599976 re
1.0 1.0 1.0 sc
f
0.0 0.0 0.0 sc
307.380005 620.400024 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Code )
[5.819014 4.43528 4.43528 4.43528 2.22163 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(P) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(roduction)
[2.655683 4.49912 4.43528 4.43528 3.988402 2.28148 1.738842 4.43528 4.43528 ] pdfxs
n
336.899994 683.880005 m
337.380005 656.159973 l
S
n
340.380005 656.940002 m
337.5 647.880005 l
334.380005 656.820007 l
340.380005 656.940002 l
eofill
n
308.039978 661.079956 57.779999 9.599976 re
1.0 1.0 1.0 sc
f
0.0 0.0 0.0 sc
308.279999 663.539978 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Code T)
[5.819014 4.446452 4.446452 4.446452 2.22163 4.921203 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st Case)
[3.999574 2.228014 2.22163 5.771134 4.446452 3.999574 4.446452 ] pdfxs
n
336.600006 583.200012 m
336.600006 555.419983 l
S
n
339.600006 556.200012 m
336.600006 547.200012 l
333.600006 556.200012 l
339.600006 556.200012 l
eofill
n
306.539978 560.400024 59.579987 9.599976 re
1.0 1.0 1.0 sc
f
0.0 0.0 0.0 sc
306.779999 562.799988 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Code )
[5.819014 4.43528 4.43528 4.43528 2.22163 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(P) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(roduction)
[2.655683 4.49912 4.43528 4.43528 3.988402 2.28148 1.738842 4.43528 4.43528 ] pdfxs
n
309.600006 532.799988 m
367.200012 532.799988 l
371.220001 532.799988 374.399994 535.97998 374.399994 540.0 c
374.399994 543.959961 371.220001 547.200012 367.200012 547.200012 c
309.600006 547.200012 l
305.639984 547.200012 302.399994 543.959961 302.399994 540.0 c
302.399994 535.97998 305.639984 532.799988 309.600006 532.799988 c
0.0 1.0 0.0 sc
eofill
n
309.600006 532.799988 m
367.200012 532.799988 l
371.220001 532.799988 374.399994 535.97998 374.399994 540.0 c
374.399994 543.959961 371.220001 547.200012 367.200012 547.200012 c
309.600006 547.200012 l
305.639984 547.200012 302.399994 543.959961 302.399994 540.0 c
302.399994 535.97998 305.639984 532.799988 309.600006 532.799988 c
h
0.0 0.0 0.0 sc
S
316.380005 537.600037 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(T)
[4.921203 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st Passes)
[3.967654 2.28148 2.22163 5.300373 4.499119 3.967654 4.020322 4.414532 3.967654 ] pdfxs
326.160278 519.600342 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Ty)
[4.921203 3.959674 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(p) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 4698 22 <00010056ffe6041605c0002b0159b10202435458400b1918400d0d025518
1c0001b8ffc0402b0c0d02550129230a0d0f0c0f1e0a0a29151e1c041e29
1c05290d230d0c181901001220100c0c0255200726b8ffe8b40c0d025526
2f2bcd2f2bcd2fcd2fcd2f0012393f3f10ed10ed12392fedc610c6123910
c42b3210c42b3231301b4028050d160d450d860d0445115711761b035216
6c106a146416750d7914860d8a14891ba50d0a052003b8ffe0400b0b0c0d
0e040701230d0c01b802a4b340000100bb01180029000d0135b40c0c1504
18ba02a4001902684027151e1c05041e290d12735f206f200220180d0d06
55208007732640212334302601002610260226b8fff4b70d0d065526902d
18b80138b219d301ba01380000ffc0400b212334200040000200902cb801
92b18b182b10f65d2bedf4ed10f62b5d712bedf42b5ded003fed3fedfde4
1112392fed10fd5de411123901111217393130013838015d005d01715913
371616333236353426232207371633323635342623220607273636333216
1615140607161615140023222656b41f956b7fafa27d334c14120b73b886
6a698c14b421eaae78ca6b66648290fee8d6c1ff0183189987b0827ca114
9e02787d6382848420b5c767b2645f9c2e1ebd8ec0fef5e6>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/three 22 def
end
ArialMT /Encoding get
dup 51 /three put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e 3)
[4.499119 2.22163 4.482362 ] pdfxs
302.160431 510.000397 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(T)
[4.905243 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st-Driv)
[3.959674 2.22163 2.686805 5.758366 2.686805 1.738842 4.019524 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(en) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
( It)
[2.22163 2.247964 2.247964 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(r)
[2.686805 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(a) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(ti)
[2.247964 1.801086 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(on) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
( ) show
303.480316 500.400452 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(without Compilatio)
[5.819014 1.738842 2.22163 4.440068 4.440068 4.499119 2.22163 2.22163 5.76475 4.440068 6.650469 
4.440068 1.774752 1.774752 4.440068 2.22163 1.774752 4.499119 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(n) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
( ) show
329.52066 490.800507 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Error)
[5.333889 2.668451 2.668451 4.448048 2.668451 ] pdfxs
n
395.100006 684.900024 m
454.5 684.900024 l
457.97998 684.900024 460.800018 687.719971 460.800018 691.200012 c
460.800018 694.679993 457.97998 697.5 454.5 697.5 c
395.100006 697.5 l
391.619995 697.5 388.800018 694.679993 388.800018 691.200012 c
388.800018 687.719971 391.619995 684.900024 395.100006 684.900024 c
1.0 1.0 1.0 sc
eofill
n
395.100006 684.900024 m
454.5 684.900024 l
457.97998 684.900024 460.800018 687.719971 460.800018 691.200012 c
460.800018 694.679993 457.97998 697.5 454.5 697.5 c
395.100006 697.5 l
391.619995 697.5 388.800018 694.679993 388.800018 691.200012 c
388.800018 687.719971 391.619995 684.900024 395.100006 684.900024 c
h
0.0 0.0 0.0 sc
S
400.800018 688.799988 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Test Creation)
[4.880505 4.441664 3.994786 2.223226 2.22163 5.766346 2.699573 4.441664 4.441664 2.223226 1.776348 
4.441664 4.441664 ] pdfxs
n
424.800018 626.400024 m
424.800018 555.419983 l
S
n
427.800018 556.200012 m
424.800018 547.200012 l
421.800018 556.200012 l
427.800018 556.200012 l
eofill
n
394.73999 582.0 59.579987 9.599976 re
1.0 1.0 1.0 sc
f
0.0 0.0 0.0 sc
394.97998 584.400024 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Code )
[5.819014 4.43528 4.43528 4.43528 2.22163 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(P) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(roduction)
[2.655683 4.49912 4.43528 4.43528 3.988402 2.28148 1.738842 4.43528 4.43528 ] pdfxs
n
424.800018 684.900024 m
424.800018 634.619995 l
S
n
427.800018 635.400024 m
424.800018 626.400024 l
421.800018 635.400024 l
427.800018 635.400024 l
eofill
n
395.639984 650.820007 57.779999 9.599976 re
1.0 1.0 1.0 sc
f
0.0 0.0 0.0 sc
395.880005 653.219971 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Code T)
[5.819014 4.446452 4.446452 4.446452 2.22163 4.921203 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st Case)
[3.999574 2.228014 2.22163 5.771134 4.446452 3.999574 4.446452 ] pdfxs
n
396.0 532.799988 m
453.600006 532.799988 l
457.619995 532.799988 460.800018 535.97998 460.800018 540.0 c
460.800018 543.959961 457.619995 547.200012 453.600006 547.200012 c
396.0 547.200012 l
392.039978 547.200012 388.800018 543.959961 388.800018 540.0 c
388.800018 535.97998 392.039978 532.799988 396.0 532.799988 c
0.0 1.0 0.0 sc
eofill
n
396.0 532.799988 m
453.600006 532.799988 l
457.619995 532.799988 460.800018 535.97998 460.800018 540.0 c
460.800018 543.959961 457.619995 547.200012 453.600006 547.200012 c
396.0 547.200012 l
392.039978 547.200012 388.800018 543.959961 388.800018 540.0 c
388.800018 535.97998 392.039978 532.799988 396.0 532.799988 c
h
0.0 0.0 0.0 sc
S
402.779999 537.600037 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(T)
[4.921203 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(st Passes)
[3.967654 2.28148 2.22163 5.300373 4.499119 3.967654 4.020322 4.414532 3.967654 ] pdfxs
148.020096 453.18042 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(Charact)
[5.758366 4.433683 4.433683 2.699573 4.433683 3.986806 2.28148 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(e) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
2 8140 73 <000100130000028005d30017010d401e1409010f192f193019401970199b
0c9c0da90d081a0d280db019c0190419b8ffc040281a1f341d080d030c0f
1c0a0115022b1413040306000a9f140114ff134004172504000302920101
00b8ffc0b331383400b8ffc0402b1c1f3490000119400f0f025519400d0e
025500141010025500280f0f025500220e0e0255002c0d0d025500b8fff2
400b0c0c025500140b0b065500b8ffeab41010065500b8ffe6b40f0f0655
00b8fffab70c0c065500a31819bc01ba002100f6010a00182b2bf62b2b2b
2b2b2b2b2b2b2b2b5d2b2b3c10f43c103ced10eded5d003f3f3c3c3cfd3c
3fed391139313043794014101106090706080602061009121b0011060f1b
012b012b2a8181012b715d00723311233533353437363633321707262322
06151533152311b29f9f131a83764c5c1b38325244cfcf039a8c716b3446
57129d0a4660628cfc66>ArialMT AddT42Char 
1 7832 29 <000200b9000001860426000300070038402004050006070902063c04033c
0106040a023c2f003f000220000100a108a198182b10f45d71ed003f3fed
10ed011112393912393931301335331503353315b9cdcdcd0359cdcdfca7
cdcd>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/f 73 def
/colon 29 def
end
ArialMT /Encoding get
dup 102 /f put
dup 58 /colon put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(ristics of Test-Driven Iteration :)
[2.654087 1.768368 3.986806 2.215246 1.768368 3.986806 3.986806 2.22163 4.499119 2.22163 2.22163 
4.872525 4.433683 3.986806 2.215246 2.654087 5.819014 2.654087 1.768368 3.986806 4.499119 4.433683 
2.22163 2.215246 2.215246 4.433683 2.654087 4.433683 2.28148 1.738842 4.433683 4.433683 2.28148 
2.215246 ] pdfxs
148.020096 443.580475 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 3308 17 <000100ba0000018700cd000300254018023c000a023c5f006f007f00af00
04a0000100a004a198182b10f65d5ded003fed313033353315bacdcdcd00
>ArialMT AddT42Char 
2 1382 54 <0001005cffe704eb05d30030021540276303630473037404042527350339
1c430349074c1d451f44244627530359075c1d572889130e23b8fff2b410
10025524b8fff2b41010025525b8fff2b41010025526b8fff2b410100255
27b8fff2b41010025523b8fff6b40d10025524b8fff6b40d10025525b8ff
f6b40d10025526b8fff6b40d10025527b8fff640460d100255280d262402
24032725360f34234425452f5a20562355256c0b6a0d6b0e66146518790b
7a0d7a0f7d107524732586038a0b890d8a0f8d1085248325920d960f9615
1eb10602435458402d2126121b261a09262901260000291a120432312600
650002000d2d791b891b021b25160d2d1e27250125051605b8fff4400c0c
0c0655051e2d091e1e1603003fed3fed2b1112395d1112391112395d1112
395d01111217392fed2fed2fed2fed1b402d25240e0d0b05211c1d1e1b08
070604030206012524220e0d0b06051e1b2d1a400c0c02558f1a011aed16
002d01b8ffc040120c0c02551001200150016001700190010601b801b040
132d1e1e1603051e2d091b261a4a092600290129b8ffeab40e0e025529b8
fff4400d0c0c0255291a32212612012612b8ffecb40e0e025512b8fff6b4
0d0d025512b8fff8400f0c0c02551254200001001931635b182b4e10f45d
4de42b2b2bed10ed4e10f62b2b5d4dedf4ed003fed3fed10fd5d2be410fd
5d2bf4111217391117391112393901121739593130005d712b2b2b2b2b2b
2b2b2b2b015d7113371e0233323636353426272624272626353436363332
161617072626232206151417160417161615140606232224265cb70d5fc8
7d6faa53505c3bfe6c5169677ef294a3f98605ba0fada9b0a1393801d958
807a86fb9dc7fef39901d7106e8d5742734445672317612b37a3656fc164
69cc810e8b8e815b4f33336b283bb57675cf7374e900>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/period 17 def
/S 54 def
end
ArialMT /Encoding get
dup 46 /period put
dup 83 /S put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(  1. Starts with test case creation)
[2.22163 2.22163 4.441664 2.223226 2.22163 5.327505 2.223226 4.441664 2.662067 2.223226 3.994786 
2.22163 5.819014 1.738842 2.223226 4.441664 2.22163 2.223226 4.499119 3.994786 2.223226 2.22163 
3.994786 4.441664 3.994786 4.441664 2.22163 3.994786 2.662067 4.441664 4.441664 2.223226 1.776348 
4.441664 4.441664 ] pdfxs
148.020096 433.98053 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(  2. Ends with test pass)
[2.22163 2.22163 4.444856 2.226418 2.22163 5.330697 4.444856 4.444856 3.997978 2.22163 5.769538 
1.77954 2.226418 4.444856 2.22163 2.226418 4.444856 3.997978 2.226418 2.22163 4.444856 4.444856 
3.997978 3.997978 ] pdfxs
148.020096 424.380585 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(  3. Com)
[2.22163 2.22163 4.440866 2.222428 2.22163 5.765548 4.440866 6.719895 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(p) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(ilation error and test fails are optional.)
[1.77555 1.77555 4.440866 2.222428 1.77555 4.440866 4.440866 2.22163 4.440866 2.699573 2.661269 
4.440866 2.699573 2.22163 4.440866 4.440866 4.440866 2.22163 2.222428 4.440866 3.993988 2.222428 
2.22163 2.222428 4.440866 1.77555 1.77555 3.993988 2.22163 4.440866 2.699573 4.440866 2.22163 
4.440866 4.440866 2.222428 1.77555 4.440866 4.440866 4.440866 1.77555 2.222428 ] pdfxs
148.020096 414.78064 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 5172 23 <0002001a0000041005ba000a000d0126403612580c680c9a0ca90cc90c05
4c034c0d94040312010208000c060307050a0b0307000c0c0d0dca030414
030304030d00020c0d040703bb02bb0008000201a0400a000404000c0c00
ca0a04b80266b705050a401d1f340ab8ffe0b4101002550ab8ffe6b40d0d
02550ab8ffeeb40d0d06550ab80137400d07402223340780213507900f02
b8ffc0400b0d14340002100220020302b8ffe0b40d0d025502b8ffe4b60d
0d065502b50eb8018cb18b182b10ec2b2b5d2b10f62b2bf42b2b2b2b3c10
e610fd3c003f3f10f43cf63c1139390111123939872e2b047d10c40f0f0f
313001435c58b9000dffdeb212390db8ffd4400b333903222d3903041d1d
3c2b2b2b2b595d005d435c5840140c400b390c8050390c4026390c221c39
0c402d392b2b2b2b2b5921112135013311331523110311010296fd84029d
93c6c6b4fe35015fa503b6fc4aa5fea102040295fd6b>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/four 23 def
end
ArialMT /Encoding get
dup 52 /four put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(  4. Com)
[2.22163 2.22163 4.440068 2.22163 2.22163 5.76475 4.440068 6.719895 ] pdfxs
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(p) show
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
2 9920 78 <00010088000003f805ba000b0261401b060c0d0d0655070656065a09030f
0df305f60603090c1010025506b8fff4b40c0c02550ab8fff4b40c0c0255
09b8fff4b40c0c025503b8ffe840100d0d06555503770a02120620132134
08b8fff0b312273409b8fff0b41227341205b8fff0b312213409b8fff040
84122734060404050406370947040525062d0a580a7703750ada03e30607
a60601230626072508390638093f0d4f0d59045906580759097d04790599
09c606d204d606e406e907f706f90815120a0a0503030402060607090908
0a0a050908082507061407070603040425050a1405050a0a090603040801
02000405060708080b0b000a04b8010f400905040c0c0655052208b8010f
402120073f070207100c0c0655071a900d010d0b2500022501019000013f
004f000200b8fffe40310e0e025500100d0d025500100c0c0255000a0b0b
025500120b0b065500120c0c065500080d0d065500190c0de1214766182b
2b4ef42b2b2b2b2b2b2b5d713c4d10ed10ed4e1071f62b5d4dedf42bed00
3f3c103c103c3f3c3f3c11173987052e2b047d10c487052e182b0e7d10c4
0710083c083c0310083c083cb10602435458400d4b09011f098403020918
0d1134002b5d7159313001435c58400a092c1d3909081d1d3c06b8ffdeb2
1d3906b8ffd4b2203906b8ffd4b121392b2b2b2b2b595d00715d0171002b
2b435c58b90006ffc0b2213903b8ffc0b2163903b8ffdeb2103906b8ffde
b2103903b8ffdeb20c3903b8ffdeb10b392b2b2b2b2b2b59012b2b2b435c
584012dd040108141639090814143c090814143c06b8fff6b2183906b8ff
ecb11b392b2b2b2b2b015d59005d2b2b2b2b2b015d712b33113311013301
012301071188b401aae9fe6a01bfdefea17f05bafcbc01b0fe76fd64021f
7afe5b00>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/k 78 def
end
ArialMT /Encoding get
dup 107 /k put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(ilation error and test fails can confirm TDD iteration likelihood)
[1.774752 1.774752 4.440068 2.22163 1.774752 4.440068 4.440068 2.22163 4.440068 2.699573 2.660471 
4.440068 2.699573 2.22163 4.440068 4.440068 4.440068 2.22163 2.22163 4.440068 3.99319 2.22163 
2.22163 2.22163 4.440068 1.774752 1.774752 3.99319 2.22163 3.99319 4.440068 4.440068 2.22163 
3.99319 4.440068 4.440068 2.22163 1.774752 2.660471 6.650469 2.22163 4.921203 5.76475 5.76475 
2.22163 1.774752 2.22163 4.440068 2.699573 4.440068 2.22163 1.774752 4.499119 4.440068 2.22163 
1.774752 1.774752 3.99319 4.440068 1.774752 1.774752 4.440068 4.440068 4.499119 4.440068 ] pdfxs
148.020096 405.180695 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
1 5524 24 <00010055ffe7042105a6001e0156b10202435458b90001ffc0400d0d0d02
55011c0e0a1e15151c12b802bb400b0f04041e1c0d0e01000718b8ffeab4
0f0f025518b8ffeab40d0d0255182f2b2bcd2fcd2f003fed3fed12392ffd
c410c42b31301b4029120c0d0d06550f0c0d0d06554b1a791d8a1d9613a7
13c30cd60cdb1b080913180e2a1a03093005300bbaffe00003ffe0401013
0a15121313ca0e0f140e13140e0f0db802a440130e0a1e15400ea00e020e
0e0f40150115151c12b802bbb70f0401d340000100b801184020041e1c0d
115f106f107f108f1004108007731840212334301801001810180218b8ff
f4b70d0d065518902012bc0135000f0195000d0138b20eb501ba01380000
ffc0400b212334200040000200901fb80192b18b182b10f65d2bedf4edf4
ed10f62b5d712bedf45d3c003fedfd5de43fed12392f5d11392f5d10ed10
e487082e2b057d10c4001112393130013838383801715d2b2b5913371616
33323635342623220607271321152103363332001514070623222655bd15
996c82b4ad8c578c28a98e02d9fdb74f8491c00108748df4c8fd0180108a
8bc4a29ab24f3f1602f1acfe765cfef6d1c791b2e000>ArialMT AddT42Char 
2 6344 69 <00020086ffe8041f05ba0010001d0180409b01050c0f240535054505053f
1fb01f021f1f221c331c421c701f901f063a133c163c1a4c164c1a5d085d
0d580f5d165e1a6a086c0d680f6e166e1ac01fd90cda17da19e213ec17ec
19e31de01fff1f1920052f0f2f1430053f0f40054c0f50056605da1df504
fa100c10150e040602001b1c0607010a151c0e0b1824d00b01100b400b60
0b800b041f400d0d02550b0c0f0f02550b180d0d02550bb8fff6b40c0c02
550bb8fff0b40b0b06550bb8fff4b40f0f06550bb8ffe0b40c0c06550bb8
fff4402f0d0d06550b7401113300040c0c025500040d0d06550033032502
02c001019001a001b001f001041f013f014f010301b8fffeb41010025501
b8fffc401d0e0e0255010c0d0d025501100c0c025501120b0b0255010c0b
0b065501b8fff8b41010065501b8fffc40160f0f065501180c0c06550114
0d0d065501191e4737182b4e10f42b2b2b2b2b2b2b2b2b2b5d71723c4d10
fdf42b2be410fd2b2b2b2b2b2b2b2b5d71ed003fed3f3fed3f1139111239
3130005d015d7172007121231133113633321e0215100023222703141716
333236353426232206012da7b472b162af7140fef2bdbc6b0234559176ac
a57576ac05bafdf58f4f8fca73feeffed69d0196bf558bcdcbd0c6cd>ArialMT AddT42Char 
ArialMT /CharStrings get begin
/five 24 def
/b 69 def
end
ArialMT /Encoding get
dup 53 /five put
dup 98 /b put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(  5. There are substantial work )
[2.22163 2.22163 4.441664 2.223226 2.22163 4.880505 4.499119 4.441664 2.662067 4.441664 2.22163 
4.441664 2.699573 4.441664 2.22163 3.994786 4.441664 4.441664 3.994786 2.223226 4.441664 4.441664 
2.223226 1.776348 4.441664 1.776348 2.22163 5.766346 4.441664 2.662067 3.994786 2.22163 ] pdfxs
257.820099 405.180695 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal ArialMT gcheck setglobal} if
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
(on production code to make test pass)
[4.441664 4.441664 2.22163 4.499119 2.639723 4.441664 4.441664 4.441664 3.994786 2.223226 1.776348 
4.441664 4.441664 2.22163 3.994786 4.441664 4.441664 4.441664 2.22163 2.223226 4.499119 2.22163 
6.652065 4.441664 3.994786 4.499119 2.22163 2.223226 4.441664 3.994786 2.223226 2.22163 4.441664 
4.441664 3.994786 3.994786 ] pdfxs
/ArialMT /Font _pdfUndefineResource
/N11 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentSuppliedResources:
%%+ font ArialMT
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%EOF
