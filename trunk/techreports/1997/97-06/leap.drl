From adisney@ilhawaii.net Thu Sep 11 23:49:17 1997
X-VM-Message-Order:
	(1 2 3 4 5)
X-VM-Summary-Format: "%n %*%a %-17.17F %-3.3m %2d %4l/%-5c %I\"%s\"\n"
X-VM-Labels: nil
X-VM-VHeader: ("Resent-" "From:" "Sender:" "To:" "Apparently-To:" "Cc:" "Subject:" "Date:") nil
X-VM-Bookmark: 3
X-VM-v5-Data: ([nil nil nil nil t nil nil nil nil]
	["23589" "Thu" "11" "September" "1997" "23:49:28" "-1000" "Anne Disney" "adisney@ilhawaii.net" "<199709120950.XAA06382@lehua.ilhawaii.net>" "618" "week's work" "^From:" nil nil "9" "1997091209:49:28" "week's work" (number " " mark "  R Anne Disney       Sep 11  618/23589 " thread-indent "\"week's work\"\n") nil nil]
	nil)
Return-Path: <adisney@ilhawaii.net>
Received: from lehua.ilhawaii.net by celine.ics.Hawaii.Edu (SMI-8.6/SMI-SVR4)
	id XAA10353; Thu, 11 Sep 1997 23:49:16 -1000
Received: from annedisn (pm3-9.ilhawaii.net [206.127.242.148]) by lehua.ilhawaii.net (8.8.5/8.6.5) with ESMTP id XAA06382 for <johnson@uhics.ics.hawaii.edu>; Thu, 11 Sep 1997 23:50:49 -1000 (HST)
Message-Id: <199709120950.XAA06382@lehua.ilhawaii.net>
Reply-To: <adisney@ilhawaii.net>
X-MSMail-Priority: Normal
X-Priority: 3
X-Mailer: Microsoft Internet Mail 4.70.1161
MIME-Version: 1.0
Content-Type: multipart/mixed; boundary="----=_NextPart_000_01BCBF0D.57B9B680"
Content-Transfer-Encoding: 7bit
Content-Length: 23588
From: "Anne Disney" <adisney@ilhawaii.net>
To: "Philip Johnson" <johnson@ics.Hawaii.Edu>
Subject: week's work
Date: Thu, 11 Sep 1997 23:49:28 -1000

This is a multi-part message in MIME format.

------=_NextPart_000_01BCBF0D.57B9B680
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: 7bit

Hi Philip,

Hope you had a good week.  From all the e-mails it looks as though you've
been busy, anyway!

Attached is a revised outline for you to look at.  If it's not too much
trouble, could you please produce a .ps file from it and send it back to me
as an attachment?  Sometimes it's easier to work from hardcopy than the
screen (for no known reason).

Here's what I think I need to do next:
1. Go through defects already gathered and double-check severity
classifications.
2. Copy database with defective student data and try to correct.
3. If this works compare the final project with student vs. corrected data,
and write it
up in form that you can easily read.
4. Make some changes to the outline attached based on a conversation with
you
(I want to keep working on it continually at this stage so that I keep
thinking about
it continually)
5. Find another thesis produced by a CSDL member to get a sense of what the
finished product should look like.
6. Whatever you say!

What I'd like to accomplish from this list during next week:
1. Finish this
2. Start - finish project 1 at least, and develop the list of rules for
correcting non-recoverable raw data errors.
3. Not yet
4. I'll wait to see what you say
5. Look on the CSDL page on the we
6. ?

I'll be home tomorrow if you want to call.

Have a good weekend!

Anne
------=_NextPart_000_01BCBF0D.57B9B680
Content-Type: application/octet-stream; name="Pro.tex"
Content-Transfer-Encoding: quoted-printable
Content-Description: Pro.tex (TEX File)
Content-Disposition: attachment; filename="Pro.tex"



\begin{document}

\title{Investigating Data Quality in the Personal Software Process}
\author{Anne Disney\\
Collaborative Software Development Laboratory,\\
Department of Information and Computer Sciences\\
2565 The Mall\\
University of Hawaii, Manoa\\
Honolulu, Hawaii   96822\\
{\tt anne@uhics.ics.hawaii.edu}}
\maketitle

\setlength{\parindent}{0em}
\setlength{\parskip}{1ex}

\tableofcontents
\chapter{Introduction}
\section{What is PSP?}

The personal software process (PSP) of Watts Humphrey is=20
a method that enables individual software engineers to=20
collect data on how they develop a software project,=20
analyze this data, and use the results over multiple projects
to improve productivity, quality, and planning.

\section{Why do people want to use it?}

Humphrey and others provide data from the use of PSP in a=20
classroom setting that shows positive trends in various measures=20
of the software process, including defect density, yield
(percentage of defects actually removed), and time estimation.
We replicated these general results in clasroom use of PSP at the
University of Hawaii.

\section{What did a closer look at this data show?}

However, our experience teaching and using PSP uncovered an
important issue:  data quality.  In PSP, engineers must record=20
a great deal of data about the time they spend in each phase=20
of development and the numbers and types of defects they uncover=20
for a single project.  The engineer then analyzes the raw data in
a sophisticated, multi-step process.  Finally, the engineer also=20
performs analyses over all the project data.  Although tools such
as spreadsheets automate some of the analysis, the engineer must
manually collect, analyze, and interpret much of the data.  Our
initial experiences teaching PSP led us to believe that the PSP
method can suffer from a variety of data quality problems, including=20
missing raw data, incorrectly recorded raw data, incorrectly performed
analyses, and erroneous analyses.

\chapter{Other related work}

Most processes for producing high-quality software are designed to be =
used by groups of
software developers or even organizations.  Examples are=20

* CMM - get information from The Capability Maturity Model, Carnegie =
Mellon University, SEI

  - basic idea

  - how is high quality software produced?

* FTR  - source?

  - basic idea

  - how is high quality software produced?

* Others?


Watts Humphrey's Personal Software Process, however, focuses on the =
software development
process for an individual software engineer.

* main ideas described in introduction.  Restate?

* The main focus of the PSP is the individual programmer.  However, it =
can be used as=20
Engineeringa tool in group development as well.  (9th conf on Software =
Engineering Education, p119 (125)

* Like other software processes, PSP requires significant investment of =
time and effort by the
  software engineer.  However, it directly benefits the person who makes =
the effort with=20
  information about their own process and products. (9th conf on =
Software  Education,  =20
  p 52)

\chapter{Case Study}
\section{Description}

To investigate the issue of data quality in PSP, we taught a modified
version of the PSP curriculum in Fall, 1996.  Ten students participated
in this course, each of whom completed nine projects.
[do we need to say more about the students, such as level of education,
background, etc?] [do we need to say more about what kinds of projects
were done?  If so, should this info really go under PSP curriculum=20
modifications?]

\section{What is the standard PSP curriculum?}
\section{How did the class differ from standard PSP curriculum?}

Curriculum modifications included supplemental lecture material on
areas of the PSP subject to data quality problems, distribution of=20
spreadsheets to automate various analyses, and integrated technical
reviews and checklists focusing in part on data quality improvement.
Then, following the conclusion of the course, we designed and
implemented a database system to store all of the PSP data from this
course and to subject it to further data quality analysis. [should this
be developed into a separate section such as "How did we evaluate the
Student's PSP data?"?]

\chapter{Results}
=20
The results of this postmortem analysis are dramatic.  Despite the=20
special care taken during the course to achieve high data quality,
we uncovered approximately 1500 data errors in the class project data.

\section{How did we count defects?}

When an incorrect value was found, a defect was recorded for the field,
but from that point on, the incorrect data value was considered to be=20
correct.  For example, consider this sample time recording log: \\ \\

\begin{center}
\begin{tabular}{|l|l|l|r|l|l|}\hline
\multicolumn{6}{|c|}{\bf Time Recording Log}\\ \hline
Date & Start & Stop & Minutes & Phase & Comment \\ \hline\hline
12/01/97 & 10:40 & 11:20 & 30 & plan       & total minutes should be 40 =
\\ \hline
12/01/97 & 11:20 & 11:30 & 10 & design     & \\ \hline
12/01/97 & 12:30 & 12:50 & 20 & code       & \\ \hline
12/01/97 & 12:50 & 12:55 &  5 & compile    & \\ \hline
12/02/97 & 09:00 & 09:15 & 15 & test       & \\ \hline
12/02/97 & 09:15 & 09:25 & 10 & postmortem & \\ \hline=20
\end{tabular}
\end{center}

Since the user incorrectly subtracted {\it stop time} from {\it start =
time}
when calculating the number of minutes spent in planning, a defect
is recorded for the {\it minutes} field.  But when looking at {\it total =
actual
minutes} on the Project Plan Summary form, 90 is considered to be the
correct value, even though the time spent in planning was
actually 40 minutes, making the true value of {\it total actual minutes}
100 minutes.

\section{What did we find?}

\subsection{Defect Types}
I divided defects into eight types:\newline

{\bf Blank Field:}=20
Used when a data field that should contain a value, such as {\it start =
time},
was left blank.  This does not apply to fields where a value is=20
optional, such as comment fields.

{\bf Calculation Done Incorrectly:}
Applies to data fields whose value is derived using any
sort of calculation from addition to linear regression.  If the =
calculation
was not done correctly, a defect was counted.  This does not apply to
values that are incorrect because other fields used in the calculation
contain bad numbers.

{\bf Entry Error:}
Used when the student clearly did not understand the=20
purpose of a field or used an incorrect method in selecting data.  For
example, filling in the {\it defect fixed} field in the Defect Recording
Log with a phase name, or having the defect to-date values in the=20
Project Plan Summary originate from a different project than the LOC
to-date values.

{\bf Fields for a More Advanced Process Filled In:}
Included because on the first project, one student filled in values for =
the
{\it Defects Injected, Plan} and {\it Defects Removed, Plan} fields even
though there was no entry area provided for them on the form and
they are not part of the PSP0 Project Plan Summary.=20

{\bf Impossible Values:} Used when two values are mutually exclusive.  =
For
example: overlapping time log entries, defect fix times for a phase =
adding
up to more time than the time log entries for the phase, or phases =
occurring
in the Defect Recording Log in a different order than those in the Time
Recording Log.=20

{\bf Process Sequence not Followed:} Used when the Time Recording Log =
showed a student
moving back and forth between phases instead of sequentially moving =
through
the phases appropriate for the process.

{\bf Transfer of Data Between Projects Incorrect:}
Used for incorrect values in fields that involve data from a prior
project.  Typically these fields are ``to-date'' fields that involve =
adding a
to-date value from a prior project with a similar value in the current =
project.
Unfortunately, it is often impossible to determine in these cases if the
error arose from bringing forward a bad number, incorrectly adding two =
good
numbers, or bringing forward the correct number and correctly adding it
to the wrong number from the current form.  However, in two important
areas, time and size estimation, the forms were modified so that =
students
were required to fill in the prior values to be used in the estimation
calculations. In these cases it was obvious when incorrect values=20
originated in the transfer.

{\bf Transfer of Data Within Project Incorrect:}
This is the same as the previous defect type, except that it refers to =
values
being transferred from one form to another within the current project.  =
For
example, filling in 172 for {\it Estimated New and Changed LOC} on the =
Size
Estimating Template, but using 190 for {\it Total New and Changed, Plan} =
on
the Project Plan Summary.\\ \\

\begin{tabular}{|l|r|}\hline
\multicolumn{2}{|c|}{\bf Defects by Type}\\ \hline
Description & \# \\ \hline\hline
Calculation done incorrectly                 & 699 \\ \hline
Blank field                                  & 262 \\ \hline
Transfer of data between projects incorrect  & 175 \\ \hline
Entry error                                  & 146 \\ \hline
Transfer of data within project incorrect    & 100 \\ \hline
Impossible values                            &  88 \\ \hline
Process sequence not followed                &  16 \\ \hline
Fields for a more advanced process filled in &   2 \\ \hline

\end{tabular}


\subsection{Defect Severity Levels}
I divided defects into five severity levels:\newline

{\bf Defect has no impact on PSP data:} This includes errors such as
missing header data, incorrect dates in the time recording log, and =
filling
in fields for a more advanced process.

{\bf Results in a single bad value, single form:} Used if a significant
field which affects no other fields, such as {\it LOC/Hour, actual},
is blank or incorrect.=20

{\bf Results in multiple bad values, single form:} Used when an =
incorrect
or blank value is used in the calculation of values for one or more =
other=20
fields on the same form, but when none of these other values are used =
beyond
the current form.  For example, in PSP1 on the Size Estimating Template,
incorrectly calculating a regression parameter.  This results in a bad
prediction range and prediction intervals, but these values are not used
anywhere else in the process.

{\bf Results in multiple bad values, multiple forms, single project:} =
Used
when an incorrect or blank value is used to determine the values=20
for one or more other fields on one or more different forms in the same
project, but when none of these other values are used beyond the current
project.  For example, in PSP1, on the Size Estimating Template, an=20
incorrect value for {\it Estimated Total New Reused (T)}.  This results =
in an
incorrect value for {\it Total New Reused, Plan} on the Project Plan =
Summary
form, but this value is not referenced by future projects.

{\bf Results in multiple bad values, multiple forms, multiple projects:} =
Used
if an incorrect or blank value affects future projects.  For example, =
when
{\it Defects Injected, Planning, Actual} on the Project Plan Summary =
does
not match the number of defects entered for the planning phase in the
Defect Recording Log.\\ \\

\begin{tabular}{|l|r|}\hline
\multicolumn{2}{|c|}{\bf Defects by Severity}\\ \hline
Description & \# \\ \hline\hline
Results in a single bad value, single form   & 650 \\ \hline
Results in multiple bad values, multiple forms, multiple projects  & 512 =
\\ \hline
Results in multiple bad values, single form  & 184 \\ \hline
Defect has no impact on PSP data             & 102 \\ \hline
Results in multiple bad values, multiple forms, single project  & 40 \\ =
\hline

\end{tabular}

\subsection{A Closer Look at the Most Severe Defects}
34 percent of defects found were of the most serious type - persistent
errors.  These are the defects resulting in multiple bad values,
multiple forms, multiple projects.  A defect of this type not only =
causes=20
incorrect values in the current project, but is still causing flawed =
results
ten projects later, even if all subsequent calculations are done =
correctly.

Here are the four most common defects of this type:\\ \\
\begin{tabular}{|l|r|}\hline
\multicolumn{2}{|c|}{\bf Most Common Persistent Defects}\\ \hline
Description & \# \\ \hline\hline
Time Estimation: historical data not transferred correctly     & 59 \\ =
\hline
Size Estimation: historical data not transferred correctly     & 56 \\ =
\hline
Time Log: delta time incorrect                                 & 47 \\ =
\hline
Project Plan Summary: Total LOC, actual, not equal to B-D+A+R  & 44 \\ =
\hline

\end{tabular}

There are two main ways that the error in transferring time estimation =
data
seems to occur: an error in transferring the value from
correct field, or accidentally transferring the correct value from
an incorrect field.  Specifically, many times instead of transferring=20
{\it Total New and Changed (N)} (Plan or Actual), students transferred
{\it Total LOC (T)}.  This is easy to do
because the Project Plan Summary form has over 90 fields even
at the Level of PSP1, and on the form the two values are vertically
adjacent. It is particularly easy to make this mistake with the Actual
values because the fields are separated by one column from the labels.=20
Additionally, it appears that students made spreadsheets or =
"cheatsheets"
of these fields to avoid thumbing through the entire stack of completed
projects every time a time or size estimation was needed for a new
project.  This is inferred because the same value for the same project
would be incorrectly transferred for every project following it.\\

These transfer errors are not insignificant.  Over the 59 occurrences,
the errors add up to 7,294 LOC (lines of code), meaning that the average =
error
was 123.63 LOC.  The total LOC as they should have
been transferred adds up 17,234, which means an average of 292.10
LOC per field.  Thus, the average incorrect value varies about 42 =
percent from=20
the value which should have been transferred.=20
[check this to be sure that time errors are not mixed up with size =
errors
 in data]
[be sure to check this later to be sure my math/inferences will hold =
up]\\

So, values involved in calculating some of the fields most important to
the PSP are severely corrupted by errors that do not even involve a
calculation [does this type of conclusion belong here?  How should it
be worded?]. \\

The error in transferring Size Estimation data is very similar.
Over 56 occurrences, the errors add up to 7,753 LOC, meaning that the
average error was 138.45 LOC. The total LOC as they should have been=20
transferred adds up to 10,255, which means an average of 183.13 LOC
per field.  Thus, the average incorrect value varies about 76 percent =
from=20
the value which should have been transferred. \\

The error in calculating {\it Delta Time} in the Time Recording Log is
notable in several respects.  First, the errors are not insignificant.
The average mistake was 38.43 minutes, which was an average of 41 =
percent of
the correct value. [Should I use means here also?  What is the standard =
way
for wording all this?] Secondly, of 47 occurrences, 16 were in error by
one hour and 4 were in error by two hours, indicating very small errors
in simple arithmetic [should a conclusion be drawn here?  If not, =
where?]. =20
Thirdly, the distribution of this error across projects is as follows: =
\\ \\

\begin{tabular}{|l|r|}\hline
\multicolumn{2}{|c|}{\bf Delta Time Errors by Project}\\ \hline
Description & \# \\ \hline\hline
Project 1  & 7 \\ \hline
Project 2  & 2 \\ \hline
Project 3  & 8 \\ \hline
Project 4  & 8 \\ \hline
Project 5  & 3 \\ \hline
Project 6  & 9 \\ \hline
Project 7  & 2 \\ \hline
Project 8  & 5 \\ \hline
Project 9  & 3 \\ \hline

\end{tabular}

Despite nine projects worth of experience, this error never "goes away".
However it does seem to occur less frequently after Project 6, =
especially
in proportion to the number of time log entries required.  =
Interestingly,
the assignment for Project 6 was a Time Recording Log applet, which at =
least
some students appear to have used for subsequent projects.

\section{How important were these errors?}

These results clearly demonstrate that data error is a significant
concern in the PSP method.  However, it could be the case that=20
although users of PSP make many errors, these errors are only "noise"
and do not make a significant impact upon the trends and conclusions
reached from the method.  We attempted to look into this more closely
by computing the measures of yield, defect density, and so forth for
individual data and the aggregate results twice:  once using the=20
original data supplied by the students, and once using correct
versions of the data produced by our postmortem analysis.

\subsection{Types of errors uncovered}

When attempting to correct the students' data, it soon became clear that
the errors fall into two classes.  Some errors are correctable, such as =
a=20
mismatch between the number of defects entered in the Defect Recording =
Log=20
and the total calculated for the Project Plan Summary.  But in other =
cases,
such as a blank {\it Phase Injected} for a defect, it is impossible to
determine a correct value.

\subsection{Rules used in fixing raw data}

We decided to try to correct all the errors in the raw data, using this
set of rules: [add later]

\subsection{What did we find?}

[results of this analysis]

\chapter{Discussion}
\section{Can all defects be found?}

Two kinds of data values: raw/calculated.  Errors in calculation can be=20
fixed given correct raw data. =20

Two kinds of errors in raw data: detectable/non-detectable
[word this to lead smoothly into discussion of measurement dysfunction]

Two classes of detectable/raw-data errors:  recoverable/non-recoverable

\section{So what is it about PSP that produces all these errors?}
\subsection{Many forms}
\subsection{Multiple processes, so as user learns PSP, familiar forms =
change}
\subsection{Complicated computations with higher PSP levels}
\subsection{Instructions in textbook not always clear}
\subsection{Data interdependencies between forms complicated in higher =
PSP levels}
\subsection{Many forms with many fields to fill out by hand, at the same =
time as coding}
\subsection{Tedious computations at the end of even minor projects}
\subsection{When computations rely on historical data, finding the data =
takes time}

\section{What are the implications?}

The results presented above show that the PSP method can lead to low =
data
quality, and that this low data quality can lead to incorrect =
conclusions
about individual and group performance.  However, these results do not =
imply=20
that the PSP method is wholly unuseful.  On the contrary, student =
evaluation
of the PSP method was uniformly positive, and even if certain numerical=20
values are incorrect, the process still provides students with profound =
new
insight into the software development process.  Instead, we believe =
these
results are most useful in motivating two kinds of improvements to the =
PSP=20
process.

\subsection{Automated tool support}

First this study shows that spreadsheets are insufficient as a data =
quality
assurance mechanism.  Instead, PSP needs more sophisticated tool support =
to
overcome the kinds of data quality problems observed in this research.
Such tools should satisfy the following requirements:

1. Automate as much of the collection of raw data as possible.

2. Do all calculations using the raw data.

3. Provide guidance to the user in choosing the correct form/fields
   to work with, based on the current position in the process script.

4. Only give the user forms/fields appropriate for the current
   process/phase.

5. Allow the user to see results of data analysis in many formats and
   allow the user access to raw data for further study.

[Add others]


\subsection{Measurement dysfunction}

Second, the PSP method must address the issue of measurement
dysfunction. Measurement dysfunction in software development
is a situation in which organizational forces lead to the
conscious or unconscious skewing of data to support the
trends desired by management, even when the true trend is
opposite that portrayed by the data.  As a simple example,
application of PSP should lead to lower defect density over
time.  Such an effect can be easily achieved by a student:
simply record less defects on the PSP defect data sheet in
later projects.  Given that defect data collection is quite
time consuming, and given that students are under
significant time pressures later in the semester, it is
possible that observed downward trends in PSP defect data
could be due more to increasing demands upon student time
than to improvements in their development skill.  Other
potential sources of measurement dysfunction in PSP include
[insert summary here].


\chapter{Conclusions/Future Directions}
In conclusion, this thesis describes a case study of PSP
to assess data quality issues. Through this case study,=20
we discovered that PSP users can make significant numbers
of errors, and that these errors can make=20
a significant impact upon measures of quality and
productivity.  Analysis of these errors leads to a
set of requirements for automated PSP support tools that
should alleviate many of these problems.  The errors also
lead to an analysis of PSP data from the standpoint of=20
measurement dysfunction, and the problems this issue=20
raises for data quality.  We propose future research
devoted to the empirical evaluation of these proposals
to determine whether they do lead to improvement of=20
data quality in the personal software process.




\end{document}










=1A
------=_NextPart_000_01BCBF0D.57B9B680--


From danu@alohanet.com Tue Sep 23 06:42:43 1997
X-VM-v5-Data: ([nil nil nil nil nil nil nil nil nil]
	["2887" "Tue" "23" "September" "1997" "06:41:56" "-1000" "Danu Tjahjono" "danu@alohanet.com" "<1.5.4.32.19970923164156.008f8e4c@SanFrancisco01.POP.internex.net>" "66" "Hi " "^From:" nil nil "9" "1997092316:41:56" "Hi" (number " " mark "     Danu Tjahjono     Sep 23   66/2887 " thread-indent "\"Hi\"\n") nil nil]
	nil)
Return-Path: <danu@alohanet.com>
Received: from relay1.Hawaii.Edu by celine.ics.Hawaii.Edu (SMI-8.6/SMI-SVR4)
	id GAA08114; Tue, 23 Sep 1997 06:42:42 -1000
Received: from nfs4.its.hawaii.edu ([128.171.201.64]) by relay1.Hawaii.Edu with SMTP id <587418(2)>; Tue, 23 Sep 1997 06:45:33 -1000
Received: from relay2.Hawaii.Edu ([128.171.3.56]) by nfs4.its.Hawaii.Edu with SMTP id <536181(9)>; Tue, 23 Sep 1997 06:45:25 -1000
Received: from SanFrancisco01.POP.InterNex.Net ([205.158.3.50]) by relay2.Hawaii.Edu with SMTP id <370677(8)>; Tue, 23 Sep 1997 06:45:12 -1000
Received: from danu ([205.158.233.42]) by SanFrancisco01.POP.InterNex.Net
          (post.office MTA v1.9.3 ID# 0-11028) with SMTP id AAA29197
          for <johnson@hawaii.edu>; Tue, 23 Sep 1997 09:41:37 -0700
Message-Id: <1.5.4.32.19970923164156.008f8e4c@SanFrancisco01.POP.internex.net>
X-Sender: INX-11152e@SanFrancisco01.POP.internex.net
X-Mailer: Windows Eudora Light Version 1.5.4 (32)
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Length: 2886
Status: RO
From: danu@alohanet.com (Danu Tjahjono)
To: johnson@hawaii.edu
Subject: Hi 
Date: 	Tue, 23 Sep 1997 06:41:56 -1000

Hi Philip,

I'm doing fine here. Still catching up a lot of things.
I did read your email on ICS machine, but I had
problems replying, the connection suddenly hangup.

Did you have a chance to visit Bali while you were in Australia ?

What's new in software review ? Did you have a chance to present
the paper where I'm the co-author?
How is the Java-based review system coming along? 
No Microsoft products in the horizon?
I'm now a convert to Microsoft  (unfortunately). Working with 
Windows95 and NT, from device driver to Visual C++ application 
development.

I noticed Cam has finished his PhD project ?? (truly amazing). 
When he is done, he should be looking jobs at the west cost.
I think the economy is booming here. Our company has been looking
for two new positions for two months with no avail (one for hardware
engineer, another one for software engineer to help me).


My title is Software Engineer/Network Architect, and the job
description looks something like this:

Responsible for the development of software components of a 
state-of-the-art wireless communications network.
Specific responsibilities include designing and implementing
bits demodulation system on TI C4x DSP chip, designing and
implementing data link and network protocols, and a router to 
communicate with the internet. 
Work primarily with Windows NT/95 platform using Microsoft 
Visual C/C++, from device driver to application development.

We may soon get graduate students from Berkeley to work on
protocol converter. Most likely they will work with me.
The project that i'm currently working on is still in the early phase.
Our first prototype (version 0.5) doesn't talk to the internet,
simply to demonstrate the proof of concept of a new multiple
access scheme called SAMA (Spread Aloha Multiple Access).
My role is working on the bit demodulation (bit synthesis) process
on a single chip DSP (Digital Signal Processing). After the bits
get synthesized, the packets are reconstructed and passed to the host
applications on Windows NT. The applications are written using Visual
C++ (Microsoft Foundation Class/ just like Java).

This version is almost done. I'm now doing a final review and trying
to overcome my temptation of doing early testing. I did collect
some PSP data in my early program (a very self-contained C program
for DSP chip), but it was very inaccurate. 
The programs on the NT have changed so much that I've troubled collecting
statistics.

When is your PSP's system released? Or is it released already?
Please keep in touch. Thanks.

--Danu
*********************************************************
Danu Tjahjono, Software Engineer  danu@alohanet.com
Aloha Networks, Inc.              Ph: 415-750-3406
5718 Geary Blvd.                  Fax:415-750-3411
San Francisco,  CA 94121          http://www.alohanet.com
*********************************************************


From itoga@hawaii.edu Sat Sep 27 10:08:03 1997
X-VM-v5-Data: ([nil nil nil nil nil nil nil nil nil]
	["524" "Sat" "27" "September" "1997" "10:10:49" "-1000" "Stephen Y. Itoga" "itoga@hawaii.edu" "<1.5.4.32.19970927101330.014fa784@uhunix.uhcc.hawaii.edu>" "18" "switching to uhunix emailer" "^From:" nil nil "9" "1997092720:10:49" "switching to uhunix emailer" (number " " mark "     Stephen Y. Itoga  Sep 27   18/524   " thread-indent "\"switching to uhunix emailer\"\n") nil nil]
	nil)
Return-Path: <itoga@hawaii.edu>
Received: from relay1.Hawaii.Edu by celine.ics.Hawaii.Edu (SMI-8.6/SMI-SVR4)
	id KAA17253; Sat, 27 Sep 1997 10:08:02 -1000
Received: from shibui ([128.171.10.4]) by relay1.Hawaii.Edu with SMTP id <587030(1)>; Sat, 27 Sep 1997 10:10:54 -1000
Message-Id: <1.5.4.32.19970927101330.014fa784@uhunix.uhcc.hawaii.edu>
X-Sender: itoga@uhunix.uhcc.hawaii.edu
X-Mailer: Windows Eudora Light Version 1.5.4 (32)
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Length: 523
From: "Stephen Y. Itoga" <itoga@hawaii.edu>
To: ics-faculty@ics.Hawaii.Edu
Subject: switching to uhunix emailer
Date: 	Sat, 27 Sep 1997 10:10:49 -1000

Russ helped me go through the thought process to get off uhics. If it's of
interest to you, here's some pointers for eudora users:

old setup:
.forward on uhunix sending email to uhics
popserver set to uhics

transition:
1. delete .forward on uhunix
2. put .forward on uhics directed toward uhunix 
        (important that 1. was done first to avoid ping pong)
3. read all pending messages on uhics
4. set popserver to uhunix

all accounts remain the same (e.g. itoga@hawaii.edu) except Todd Maeshiro is
toddm@hawaii.edu.


From itoga@hawaii.edu Tue Sep 30 18:25:56 1997
X-VM-v5-Data: ([nil nil nil nil nil nil t nil nil]
	["552" "Tue" "30" "September" "1997" "18:28:47" "-1000" "Stephen Y. Itoga" "itoga@hawaii.edu" "<1.5.4.32.19970930183106.00928930@uhunix.uhcc.hawaii.edu>" "14" "TGIF on OCT 10" "^From:" nil nil "9" "1997100104:28:47" "TGIF on OCT 10" (number " " mark "  Z Stephen Y. Itoga Sep 30   14/552   " thread-indent "\"TGIF on OCT 10\"\n") nil nil]
	nil)
Return-Path: <itoga@hawaii.edu>
Received: from relay1.Hawaii.Edu by celine.ics.Hawaii.Edu (SMI-8.6/SMI-SVR4)
	id SAA22384; Tue, 30 Sep 1997 18:25:54 -1000
Received: from shibui ([128.171.10.4]) by relay1.Hawaii.Edu with SMTP id <586838(9)>; Tue, 30 Sep 1997 18:28:50 -1000
Message-Id: <1.5.4.32.19970930183106.00928930@uhunix.uhcc.hawaii.edu>
X-Sender: itoga@uhunix.uhcc.hawaii.edu
X-Mailer: Windows Eudora Light Version 1.5.4 (32)
Mime-Version: 1.0
Content-Type: text/plain; charset="us-ascii"
Content-Length: 551
From: "Stephen Y. Itoga" <itoga@hawaii.edu>
To: ics-admin@ics.Hawaii.Edu, lis-admin@hawaii.edu
Cc: kim@hawaii.edu, chee@hawaii.edu
Subject: TGIF on OCT 10
Date: 	Tue, 30 Sep 1997 18:28:47 -1000

Everyone's invited to my house a week from this Friday (Oct 10, starting at
4pm). Food and (cheap) drinks will be provided. Please let me know if you
think you might possibly make it. 

Directions(sorry no URL):  (I'm just a little over a mile from campus) Take
University Ave. up to East Manoa Rd., then get over to Woodlawn Drive. Go
past Longs Drugs till you get to the stop sign. Turn right on Kahaloa Dr.
It's the 2nd driveway on your right. You should park on Kahaloa or Woodlawn
if you don't want to get blocked in.

3015 Kahaloa Dr.
988-6414


From rbrewer@lava.net Wed Oct  1 18:16:04 1997
X-VM-v5-Data: ([nil nil nil nil nil nil nil nil nil]
	["175" "Wed" "1" "October" "1997" "18:14:50" "-1000" "Robert S Brewer" "rbrewer@lava.net" "<m0xGcf4-0010xKC@malasada.lava.net>" "5" "Lunch?" "^From:" nil nil "10" "1997100204:14:50" "Lunch?" (number " " mark "     Robert S Brewer   Oct  1    5/175   " thread-indent "\"Lunch?\"\n") nil nil]
	nil)
Return-Path: <rbrewer@lava.net>
Received: from relay1.Hawaii.Edu by celine.ics.Hawaii.Edu (SMI-8.6/SMI-SVR4)
	id SAA24767; Wed, 1 Oct 1997 18:16:03 -1000
Received: from nfs4.its.hawaii.edu ([128.171.201.64]) by relay1.Hawaii.Edu with SMTP id <587425(7)>; Wed, 1 Oct 1997 18:16:17 -1000
Received: from relay2.Hawaii.Edu ([128.171.3.56]) by nfs4.its.Hawaii.Edu with SMTP id <536287(7)>; Wed, 1 Oct 1997 18:16:08 -1000
Received: from malasada.lava.net ([199.222.42.2]) by relay2.Hawaii.Edu with SMTP id <370758(2)>; Wed, 1 Oct 1997 18:16:01 -1000
Received: from lava.net(src addr [199.222.42.2]) (499 bytes) by malasada.lava.net
	via sendmail with P\:esmtp/R:inet_hosts/T:smtp
	(sender: <rbrewer@lava.net>) (ident <rbrewer> using rfc1413)
	id <m0xGcf4-0010xKC@malasada.lava.net>
	for <johnson@hawaii.edu>; Wed, 1 Oct 1997 18:14:50 -1000 (HST)
	(Smail-3.2.0.96 1997-Jun-2 #3 built 1997-Aug-20)
Message-Id: <m0xGcf4-0010xKC@malasada.lava.net>
Content-Length: 174
From: Robert S Brewer <rbrewer@lava.net>
To: johnson@hawaii.edu
cc: sushi@lava.net
Subject: Lunch?
Date: 	Wed, 1 Oct 1997 18:14:50 -1000

Well, this is the week. Are you still free this week?

I am pretty sure I will be attending UH next year, so I need to start running
around campus collecting forms and such.

