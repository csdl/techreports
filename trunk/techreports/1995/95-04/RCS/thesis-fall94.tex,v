head	1.1;
access;
symbols;
locks; strict;
comment	@% @;


1.1
date	95.05.20.19.40.25;	author cmoore;	state Exp;
branches;
next	;


desc
@@


1.1
log
@initial turnin
@
text
@%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% -*- Mode: Latex -*- %%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% thesis-fall94.tex -- 
%% Author          : Carleton Moore
%% Created On      : Sat Mar  4 11:55:30 1995
%% Last Modified By: Carleton Moore
%% Last Modified On: Mon Mar 13 14:10:13 1995
%% Status          : Unknown
%% RCS: $Id$
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%   Copyright (C) 1995 University of Hawaii
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 


\newpage

\chapter{AEN: Inital Experiences}
\label{sec:fall94}


AEN was used during the Fall semester of 1994 in a graduate seminar on
collaborative systems in the Department of Information and Computer
Sciences at the University of Hawaii.  AEN was used both as an example of a
collaborative system for the class, as well as the principle mechanism for
instruction and interaction among class participants.  Nine students
enrolled in this seminar, and two other colleagues participated in the
seminar from geographically dispersed locations (the Big Island of Hawaii
and Berkeley, CA.).  Egret's architecture supports client connections from
any Internet location supporting socket-based connections.

An initial design goal of AEN was to support virtually all lecture material
and participant interactions for the seminar.  Participant interaction
would consist of reading and reacting to material posted by students and
the instructor.  Based upon the reactions, the material would either be
revised and improved, or new material would be added. On-line quizzes, as
well as semester projects, would assess the learning process. A small
number of face-to-face classroom meetings would provide supplementary
forums to discuss things learned or questioned through on-line activities.
Through AEN, groups of students were expected to learn how to develop
software in Emacs Lisp, use Egret to implement a collaborative system,
design and present a project proposal for a collaborative system, and
create a well-structured report on the results of their effort.

The next section discusses our experiences during the Fall semester.

\section{Overview of Fall, 1994}

The initial requirements document for AEN \cite{csdl-94-06} was developed
in June, 1994, and an alpha Version 1.0 was released for classroom use in
September, 1994.  By mid-October, we finished a substantial redesign of AEN
and released Version 2.2.0.  As of December, 1994, the current version of
AEN is 2.2.18, representing the result of many bug fix and minor
enhancement releases, but no major new redesigns. Version 2.2.18 contains
approximately 12 KLOC in Emacs Lisp.

The most significant research problem we encountered was entwining the
actual design and implementation of AEN with its experimental use. While
this was very effective in rapidly evolving the design toward a highly
usable state and in discovering and adding many helpful features, it also
led to significant volatility, coarse measurements of usage, several
disastrous system crashes, and lack of user confidence in the system.  By
the end of the semester, the class viewed AEN as both powerful and
dangerous: while it provided far superior facilities for collaboration, it
was also far more likely to lose their work.  

Precise and accurate metrics data for only a small portion of the Fall
semester was collected by AEN, due to volatility in both AEN and the metrics
system.  However, the collected data does provide some insights into the
use of AEN.  First, approximately 285 hours of active use of AEN were
logged during the second half of the Fall semester by ten participants, for
an average of 28 hours per person.  Approximately 800 nodes and 800 links
were created during the semester by the class.  As a class project, one
group designed an interface to the WWW from AEN, and a snapshot of the AEN
database as it existed in December, 1994, is available for perusal from
the AEN Home Page \cite{csdl-www-aen}.

A predominant use of AEN was in the creation of mid-semester project
proposals and final reports, in which the class split up into small groups
of two to four participants each.  For class projects, students created: a
shared emacs editor; a regular expression search facility for AEN; an AEN
to WWW converter; a design for MUD facility using Egret; and a
help/tutorial facility for AEN.  Details on these projects are accessable
from the AEN Home Page.  In general, students found that AEN and Egret
provided an excellent foundation for the implementation of collaboration
mechanisms. For example, the shared emacs authors noted the following:
``The Shemacs code is a mere 1267 lines long!  One would expect a program
of this nature to take 50,000 lines or so.''

Perhaps the most fundamental benefit that accrued from the use of AEN was
the increased access by participants to the intermediate work products of
others.  During the mid-semester and final project preparation, students
frequently provided annotation access to the entire class of their
hypertext documents as they prepared them.  This did, of course, provide
students with commentary from others, but much more importantly, it
provided students with examples of how other students were approaching
their projects, and the chance to compare notes while time remained to act
upon the insights gained.  We believe that such access was AEN's strongest
support for strong collaboration.

In general, our experience with using AEN as the principal instructional
format for a class on collaborative systems was extremely successful.
Students acquired a ``visceral'' sense for the strengths and weaknesses of
collaborative systems, and their end-of-semester papers, in which they
answered such questions as ``what is a collaborative system'' showed
substantial sophistication.  For example, by the end of the semester, no
one in the seminar viewed the World Wide Web as a ``real'' collaborative
system.


\section{Student evaluations of AEN}

\begin{quote}
Benefits: 

   I found AEN to be very easy to learn and use.  It has definitely matured
   as we were using it, and as of the current release, I found it to be
   very usefull.  There were a lot of usefull tools in it for easy
   navigation and to keep track of what's going on in the database.

   As far as collaboration on AEN, I can't really say that I have tried to
   use AEN to collaborate on any task, but it seems like a reasonable
   central place to do that kind of thing on.

Drawbacks: 

   This kind of thing is really expected for system in development, but
   there were a lot of bugs in the initial releases that caused it to not
   be totally trusted.  There were also a bunch of catastrophic faliures
   that really added to it.

   I can't really say much else that I did not like about AEN.  It seemed
   to be fine other than that.  I could be a little more critical if I
   actually tried to use it to collaborate.
\end{quote}

\begin{quote}
Good:

We used AEN until implementation of the project started.  AEN was good for the
preliminary discussions.

After coming back to AEN to write the final paper, I noticed an increase in speed (but
of course, I am running it on a SPARCstation 10 now) and that made it a lot more
pleasant to use and made me more willing to go online.

AEN is being shaped and redefined by users with real collaboration needs.  It's an
experimental environment that allows us to explore the issues of collaboration on a real
system.

The concept of comment nodes and links work very well for discussions.  When this sort
of activity is done over e-mail, users tend to say "let's get offline and meet to talk
about this"

Bad:

The beginner Emacs user would find the editing features very cumbersome and impeding.
Now that I've discovered the vi emulation mode, and the editor is not getting in my way,
I'm beginning to like living in AEN a lot more.

I cannot trust to do work that will be graded on AEN because I could lose it.  Now that
I've found a way to completely backup my nodes (unrender the buffer and then save the
buffer to a file), I am more willing to work "live" on AEN.

AEN is neat but frustrating to use at times, not because it's buggy, but because
sometimes I just need to do speed-reading on some of the information and it is not easy
to do that sometimes.

The TOC is great, but node navigation could be faster (use one keystroke instead of
control-c and another key) for often used commands.  I like emacs' Info's navigational
feel.

During my initial AEN ventures, I felt (and still do, although to a lesser degree) that
an interactive tutorial (e.g. Control Data PLATO lessons, courseware,etc.)  would be an
invaluable tool that the AEN reader can use to digest information.  Hypertext is nice,
but taking it a step further to include interactive tutorial is probably the best
incentive you can give to a user to switch from whatever they are currently using to
AEN.

MUD would be a nice enhancement, especially for collaborative purposes.

Formatting via codes before and after the target text is kind of cumbersome.  It would
be nice to highlight the text and just press one key to make it italicized or
underlined.
\end{quote}

\begin{quote}
     AEN was a good vehicle for collaborative learning.  The interface was easy to learn
and provided many useful features for collaborative work.  I especially liked the Emacs
LISP tutorial, Authoring and Annotating, and the user awareness and communication
facilities.

     The hypertext Emacs LISP manual was very helpful in learning Emacs LISP quickly.  I
have not had much previous experience with LISP before this class and was a little
apprehensive when I signed up.  After completing most of the online Emacs LISP manual, I
had acquired a general working knowledge of LISP programming.  The ability to evaluate
the examples was a vast improvement over reading a text based manual and provided a
deeper understanding in less time.  During the course of the class, I often refered to
the online manual.  It would have been nice if some of the more advanced features of
Emacs LISP were included in the manual such as structures, extents and menus.

     The ability to author and annotate nodes was the strongest point of AEN.  AEN was
not just a hypertext navigator like Mosaic but a system which allowed active
participation by all members of the class.  The annotating aspects of AEN were
especially useful when we were designing our projects.  Placing all of the groups'
design documents on AEN allowed everyone to make constructive comments at anytime of the
day.  Each individual could read the different designs and make comments at his own
convenince.  Our design was greatly improved by the comments made by the other members
of the class.

     Snoopy and Partyline were also very useful parts of AEN.  Snoopy added a sense of
user awareness which a bulletin board or document reader does not have.  I would often
check to see if my partner was currently in AEN and what he was working on.  Partyline
provided an excellent way of communicating with other users, especially if they were not
in the same room.

     While AEN is an excellent system, there are two issues which limit its
effectiveness as a collaborative environment.  The first of these issues pertains to the
group process and not with the implementation of AEN itself.  AEN was very useful in the
design phase of the Shemacs project.  Comments made by group members and other members
of the class helped refine our design.  After the design was completed, however, AEN was
no longer used as a method of group collaboration or communication.  The turn around
time for a response to a comment was too long.  After making a comment, I would have to
wait for my partner to respond to it and then he would have to wait for my response.
Email and face-to-face meetings provided a faster more effective method of
communication.

     The second issue which limits AEN's effectiveness is its reliability.  I have lost
many hours of work from the numerous times AEN has crashed.  It is hard to encourage
group collaboration when the system is down and work is continually lost.  In the end, I
would do all my work outside of AEN and upload it when it was ready. 
\end{quote}

\begin{quote}
We used AEN mostly for posting work to the public and not so much as a collaborative
mechanism. The reason for this was that it is a lot easier to send email to a partner to
arrange a meeting or send some design info than to post information. Sending email
eliminates a lot of overhead with loading the system and such. Also, not all users
regularly made use of AEN. AEN was successful, however, in that different groups were
able to judge their progress by examining other groups' work.
\end{quote}

\begin{quote}
AEN has good facilities for communication and information sharing.  Especially the idea
of hypertext navigation on AEN is suitable for virtual class room setting.
 I think if AEN has a facility for description and control of learning process control,
it will be more powerful.
\end{quote}






@
