%!PS-Adobe-3.0

%%Creator: Windows PSCRIPT

%%Title: Microsoft Word - COVERPG2.DOC

%%BoundingBox: 18 23 577 819

%%DocumentNeededResources: (atend)

%%DocumentSuppliedResources: (atend)

%%Pages: (atend)

%%BeginResource: procset Win35Dict 3 1

/Win35Dict 290 dict def Win35Dict begin/bd{bind def}bind def/in{72

mul}bd/ed{exch def}bd/ld{load def}bd/tr/translate ld/gs/gsave ld/gr

/grestore ld/M/moveto ld/L/lineto ld/rmt/rmoveto ld/rlt/rlineto ld

/rct/rcurveto ld/st/stroke ld/n/newpath ld/sm/setmatrix ld/cm/currentmatrix

ld/cp/closepath ld/ARC/arcn ld/TR{65536 div}bd/lj/setlinejoin ld/lc

/setlinecap ld/ml/setmiterlimit ld/sl/setlinewidth ld/scignore false

def/sc{scignore{pop pop pop}{0 index 2 index eq 2 index 4 index eq

and{pop pop 255 div setgray}{3{255 div 3 1 roll}repeat setrgbcolor}ifelse}ifelse}bd

/FC{bR bG bB sc}bd/fC{/bB ed/bG ed/bR ed}bd/HC{hR hG hB sc}bd/hC{

/hB ed/hG ed/hR ed}bd/PC{pR pG pB sc}bd/pC{/pB ed/pG ed/pR ed}bd/sM

matrix def/PenW 1 def/iPen 5 def/mxF matrix def/mxE matrix def/mxUE

matrix def/mxUF matrix def/fBE false def/iDevRes 72 0 matrix defaultmatrix

dtransform dup mul exch dup mul add sqrt def/fPP false def/SS{fPP{

/SV save def}{gs}ifelse}bd/RS{fPP{SV restore}{gr}ifelse}bd/EJ{gsave

showpage grestore}bd/#C{userdict begin/#copies ed end}bd/FEbuf 2 string

def/FEglyph(G  )def/FE{1 exch{dup 16 FEbuf cvrs FEglyph exch 1 exch

putinterval 1 index exch FEglyph cvn put}for}bd/SM{/iRes ed/cyP ed

/cxPg ed/cyM ed/cxM ed 72 100 div dup scale dup 0 ne{90 eq{cyM exch

0 eq{cxM exch tr -90 rotate -1 1 scale}{cxM cxPg add exch tr +90 rotate}ifelse}{cyP

cyM sub exch 0 ne{cxM exch tr -90 rotate}{cxM cxPg add exch tr -90

rotate 1 -1 scale}ifelse}ifelse}{pop cyP cyM sub exch 0 ne{cxM cxPg

add exch tr 180 rotate}{cxM exch tr 1 -1 scale}ifelse}ifelse 100 iRes

div dup scale 0 0 transform .25 add round .25 sub exch .25 add round

.25 sub exch itransform translate}bd/SJ{1 index 0 eq{pop pop/fBE false

def}{1 index/Break ed div/dxBreak ed/fBE true def}ifelse}bd/ANSIVec[

16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve

16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut

16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave

16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85

/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron

16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93

/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97

/emdash 16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe

16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar 16#A7/section

16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft

16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree

16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5

/mu 16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior

16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf

16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2

/Acircumflex 16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7

/Ccedilla 16#C8/Egrave 16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis

16#CC/Igrave 16#CD/Iacute 16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth

16#D1/Ntilde 16#D2/Ograve 16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde

16#D6/Odieresis 16#D7/multiply 16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute

16#DB/Ucircumflex 16#DC/Udieresis 16#DD/Yacute 16#DE/Thorn 16#DF/germandbls

16#E0/agrave 16#E1/aacute 16#E2/acircumflex 16#E3/atilde 16#E4/adieresis

16#E5/aring 16#E6/ae 16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA

/ecircumflex 16#EB/edieresis 16#EC/igrave 16#ED/iacute 16#EE/icircumflex

16#EF/idieresis 16#F0/eth 16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4

/ocircumflex 16#F5/otilde 16#F6/odieresis 16#F7/divide 16#F8/oslash

16#F9/ugrave 16#FA/uacute 16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute

16#FE/thorn 16#FF/ydieresis ] def/reencdict 12 dict def/IsChar{basefontdict

/CharStrings get exch known}bd/MapCh{dup IsChar not{pop/bullet}if

newfont/Encoding get 3 1 roll put}bd/MapDegree{16#b0/degree IsChar{

/degree}{/ring}ifelse MapCh}bd/MapBB{16#a6/brokenbar IsChar{/brokenbar}{

/bar}ifelse MapCh}bd/ANSIFont{reencdict begin/newfontname ed/basefontname

ed FontDirectory newfontname known not{/basefontdict basefontname findfont

def/newfont basefontdict maxlength dict def basefontdict{exch dup/FID

ne{dup/Encoding eq{exch dup length array copy newfont 3 1 roll put}{exch

newfont 3 1 roll put}ifelse}{pop pop}ifelse}forall newfont/FontName

newfontname put 127 1 159{newfont/Encoding get exch/bullet put}for

ANSIVec aload pop ANSIVec length 2 idiv{MapCh}repeat MapDegree MapBB

newfontname newfont definefont pop}if newfontname end}bd/SB{FC/ULlen

ed/str ed str length fBE not{dup 1 gt{1 sub}if}if/cbStr ed/dxGdi ed

/y0 ed/x0 ed str stringwidth dup 0 ne{/y1 ed/x1 ed y1 y1 mul x1 x1

mul add sqrt dxGdi exch div 1 sub dup x1 mul cbStr div exch y1 mul

cbStr div}{exch abs neg dxGdi add cbStr div exch}ifelse/dyExtra ed

/dxExtra ed x0 y0 M fBE{dxBreak 0 BCh dxExtra dyExtra str awidthshow}{dxExtra

dyExtra str ashow}ifelse fUL{x0 y0 M dxUL dyUL rmt ULlen fBE{Break

add}if 0 mxUE transform gs rlt cyUL sl [] 0 setdash st gr}if fSO{x0

y0 M dxSO dySO rmt ULlen fBE{Break add}if 0 mxUE transform gs rlt cyUL

sl [] 0 setdash st gr}if n/fBE false def}bd/font{/name ed/Ascent ed

0 ne/fT3 ed 0 ne/fSO ed 0 ne/fUL ed/Sy ed/Sx ed 10.0 div/ori ed -10.0

div/esc ed/BCh ed name findfont/xAscent 0 def/yAscent Ascent def/ULesc

esc def ULesc mxUE rotate pop fT3{/esc 0 def xAscent yAscent mxUE transform

/yAscent ed/xAscent ed}if [Sx 0 0 Sy neg xAscent yAscent] esc mxE

rotate mxF concatmatrix makefont setfont [Sx 0 0 Sy neg 0 Ascent] mxUE

mxUF concatmatrix pop fUL{currentfont dup/FontInfo get/UnderlinePosition

known not{pop/Courier findfont}if/FontInfo get/UnderlinePosition get

1000 div 0 exch mxUF transform/dyUL ed/dxUL ed}if fSO{0 .3 mxUF transform

/dySO ed/dxSO ed}if fUL fSO or{currentfont dup/FontInfo get/UnderlineThickness

known not{pop/Courier findfont}if/FontInfo get/UnderlineThickness get

1000 div Sy mul/cyUL ed}if}bd/min{2 copy gt{exch}if pop}bd/max{2 copy

lt{exch}if pop}bd/CP{/ft ed{{ft 0 eq{clip}{eoclip}ifelse}stopped{currentflat

1 add setflat}{exit}ifelse}loop}bd/patfont 10 dict def patfont begin

/FontType 3 def/FontMatrix [1 0 0 -1 0 0] def/FontBBox [0 0 16 16]

def/Encoding StandardEncoding def/BuildChar{pop pop 16 0 0 0 16 16

setcachedevice 16 16 false [1 0 0 1 .25 .25]{pat}imagemask}bd end/p{

/pat 32 string def{}forall 0 1 7{dup 2 mul pat exch 3 index put dup

2 mul 1 add pat exch 3 index put dup 2 mul 16 add pat exch 3 index

put 2 mul 17 add pat exch 2 index put pop}for}bd/pfill{/PatFont patfont

definefont setfont/ch(AAAA)def X0 64 X1{Y1 -16 Y0{1 index exch M ch

show}for pop}for}bd/vert{X0 w X1{dup Y0 M Y1 L st}for}bd/horz{Y0 w

Y1{dup X0 exch M X1 exch L st}for}bd/fdiag{X0 w X1{Y0 M X1 X0 sub dup

rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup rlt st}for}bd/bdiag{X0 w

X1{Y1 M X1 X0 sub dup neg rlt st}for Y0 w Y1{X0 exch M Y1 Y0 sub dup

neg rlt st}for}bd/AU{1 add cvi 15 or}bd/AD{1 sub cvi -16 and}bd/SHR{pathbbox

AU/Y1 ed AU/X1 ed AD/Y0 ed AD/X0 ed}bd/hfill{/w iRes 37.5 div round

def 0.1 sl [] 0 setdash n dup 0 eq{horz}if dup 1 eq{vert}if dup 2 eq{fdiag}if

dup 3 eq{bdiag}if dup 4 eq{horz vert}if 5 eq{fdiag bdiag}if}bd/F{/ft

ed fm 256 and 0 ne{gs FC ft 0 eq{fill}{eofill}ifelse gr}if fm 1536

and 0 ne{SHR gs HC ft CP fm 1024 and 0 ne{/Tmp save def pfill Tmp restore}{fm

15 and hfill}ifelse gr}if}bd/S{PenW sl PC st}bd/m matrix def/GW{iRes

12 div PenW add cvi}bd/DoW{iRes 50 div PenW add cvi}bd/DW{iRes 8 div

PenW add cvi}bd/SP{/PenW ed/iPen ed iPen 0 eq iPen 6 eq or{[] 0 setdash}if

iPen 1 eq{[DW GW] 0 setdash}if iPen 2 eq{[DoW GW] 0 setdash}if iPen

3 eq{[DW GW DoW GW] 0 setdash}if iPen 4 eq{[DW GW DoW GW DoW GW] 0

setdash}if}bd/E{m cm pop tr scale 1 0 moveto 0 0 1 0 360 arc cp m sm}bd

/AG{/sy ed/sx ed sx div 4 1 roll sy div 4 1 roll sx div 4 1 roll sy

div 4 1 roll atan/a2 ed atan/a1 ed sx sy scale a1 a2 ARC}def/A{m cm

pop tr AG m sm}def/P{m cm pop tr 0 0 M AG cp m sm}def/RRect{n 4 copy

M 3 1 roll exch L 4 2 roll L L cp}bd/RRCC{/r ed/y1 ed/x1 ed/y0 ed/x0

ed x0 x1 add 2 div y0 M x1 y0 x1 y1 r arcto 4{pop}repeat x1 y1 x0 y1

r arcto 4{pop}repeat x0 y1 x0 y0 r arcto 4{pop}repeat x0 y0 x1 y0 r

arcto 4{pop}repeat cp}bd/RR{2 copy 0 eq exch 0 eq or{pop pop RRect}{2

copy eq{pop RRCC}{m cm pop/y2 ed/x2 ed/ys y2 x2 div 1 max def/xs x2

y2 div 1 max def/y1 exch ys div def/x1 exch xs div def/y0 exch ys div

def/x0 exch xs div def/r2 x2 y2 min def xs ys scale x0 x1 add 2 div

y0 M x1 y0 x1 y1 r2 arcto 4{pop}repeat x1 y1 x0 y1 r2 arcto 4{pop}repeat

x0 y1 x0 y0 r2 arcto 4{pop}repeat x0 y0 x1 y0 r2 arcto 4{pop}repeat

m sm cp}ifelse}ifelse}bd/PP{{rlt}repeat}bd/OB{gs 0 ne{7 3 roll/y ed

/x ed x y translate ULesc rotate x neg y neg translate x y 7 -3 roll}if

sc B fill gr}bd/B{M/dy ed/dx ed dx 0 rlt 0 dy rlt dx neg 0 rlt cp}bd

/CB{B clip n}bd/ErrHandler{errordict dup maxlength exch length gt

dup{errordict begin}if/errhelpdict 12 dict def errhelpdict begin/stackunderflow(operand stack underflow)def

/undefined(this name is not defined in a dictionary)def/VMerror(you have used up all the printer's memory)def

/typecheck(operator was expecting a different type of operand)def

/ioerror(input/output error occured)def end{end}if errordict begin

/handleerror{$error begin newerror{/newerror false def showpage 72

72 scale/x .25 def/y 9.6 def/Helvetica findfont .2 scalefont setfont

x y moveto(Offending Command = )show/command load{dup type/stringtype

ne{(max err string)cvs}if show}exec/y y .2 sub def x y moveto(Error = )show

errorname{dup type dup( max err string )cvs show( : )show/stringtype

ne{( max err string )cvs}if show}exec errordict begin errhelpdict errorname

known{x 1 add y .2 sub moveto errhelpdict errorname get show}if end

/y y .4 sub def x y moveto(Stack =)show ostack{/y y .2 sub def x 1

add y moveto dup type/stringtype ne{( max err string )cvs}if show}forall

showpage}if end}def end}bd end

%%EndResource

/SVDoc save def

%%EndProlog

%%BeginSetup

Win35Dict begin

ErrHandler

statusdict begin 0 setjobtimeout end

statusdict begin statusdict /jobname (Microsoft Word - COVERPG2.DOC) put end

/oldDictCnt countdictstack def {}stopped 

{ countdictstack oldDictCnt lt { Win35Dict begin } 

{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 

/oldDictCnt countdictstack def {a4

}stopped 

{ countdictstack oldDictCnt lt { Win35Dict begin } 

{1 1 countdictstack oldDictCnt sub {pop end } for } ifelse } if 

[
{mark 1.0 1.0 .98 .9 .82 .68 .56 .48 .28 .1 .06 .0 counttomark dup 3 add -1 roll exch 2 sub mul dup floor cvi dup 3 1 roll sub exch dup  3 add index exch 2 add index dup 4 1 roll sub mul add counttomark 1 add 1 roll  cleartomark } bind

/exec load currenttransfer /exec load] cvx settransfer

/setresolution where { pop 300 300 setresolution } if

%%EndSetup

%%Page: 1 1

%%PageResources: (atend)

SS

0 0 25 31 776 1169 300 SM

32 0 0 67 67 0 0 0 61 /Times-Bold /font29 ANSIFont font

0 0 0 fC

265 207 610 (CHI 96 Cover Page 2) 610 SB

32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font

265 320 276 (Submissions ) 276 SB

32 0 0 33 33 0 0 0 29 /Times-Roman /font32 ANSIFont font

541 337 1391 (of Papers, Panels, Tutorials, Demonstrations, Short Papers, and Interactive Posters must be accompanied by) 1391 SB

265 377 1777 (additional information. If your submission belongs to one of these categories please check the Matching Phrases and the Submission Type) 1777 SB

265 414 86 (below.) 86 SB

32 0 0 42 42 0 0 0 39 /Times-Bold /font29 ANSIFont font

265 488 443 (MATCHING PHRASES) 443 SB

32 0 0 33 33 0 0 0 29 /Times-Roman /font32 ANSIFont font

265 536 991 (For Papers, Demonstrations, Short Papers, Interactive Posters, and Tutorials.) 991 SB

265 647 1775 (The following list contains matching phrases for the papers, demonstrations, shortpapers, and interactive posters that will be used to select) 1775 SB

265 684 1767 (reviewers for your submission.  You are encouraged to check multiple matching phrases. If you do not see phrases that you would like to) 1767 SB

265 721 1786 (describe your submission, please create phrases and add them in for your submission. The phrases are listed in no particular topic order, so) 1786 SB

265 758 1108 (please read through them carefully when searching for descriptors for your own work.) 1108 SB

265 832 136 ([] Agents, ) 136 SB

865 832 274 ([] Analysis methods, ) 274 SB

1465 832 202 ([] Applications,) 202 SB

265 869 207 ([] Auditory I/O,) 207 SB

865 869 139 ([] CSCW, ) 139 SB

1465 869 265 ([] Cognitive models,) 265 SB

265 906 298 ([] Collaborative work, ) 298 SB

865 906 306 ([] Cost/benefit analysis,) 306 SB

1465 906 247 ([] Database access,) 247 SB

265 943 259 ([] Design rationale, ) 259 SB

865 943 282 ([] Design techniques, ) 282 SB

1465 943 281 ([] Development tools,) 281 SB

265 980 247 ([] Dialog analysis, ) 247 SB

865 980 263 ([] Disability access, ) 263 SB

1465 980 382 ([] Documentation or training,) 382 SB

265 1017 366 ([] Educational applications, ) 366 SB

865 1017 271 ([] Empirical studies, ) 271 SB

1465 1017 338 ([] End-user programming,) 338 SB

265 1054 229 ([] Entertainment, ) 229 SB

865 1054 205 ([] Ethnography,) 205 SB

1465 1054 180 ([] Evaluation,) 180 SB

265 1091 240 ([] Expert systems, ) 240 SB

865 1091 256 ([] Formal methods, ) 256 SB

1465 1091 261 ([] Global Interfaces,) 261 SB

265 1128 133 ([] GOMS,) 133 SB

865 1128 234 ([] Graphic design,) 234 SB

1465 1128 22 ([]) 22 SB

1487 1128 175 ( Group work,) 175 SB

265 1165 237 ([] HCI education, ) 237 SB

865 1165 318 ([] HCI in organizations, ) 318 SB

1465 1165 343 ([] HCI professional issues,) 343 SB

265 1202 125 ([] Home, ) 125 SB

865 1202 198 ([] Hypermedia,) 198 SB

1465 1202 286 ([] Individual differenc) 286 SB

1751 1202 34 (es,) 34 SB

265 1239 316 ([] Information retrieval, ) 316 SB

865 1239 162 ([] Input devi) 162 SB

1027 1239 56 (ces, ) 56 SB

1465 1239 278 ([] Intelligent systems,) 278 SB

265 1276 336 ([] Interaction technology, ) 336 SB

865 1276 269 ([] Interaction design,) 269 SB

1465 1276 138 ([] Internet,) 138 SB

265 1313 204 ([] Legal issues, ) 204 SB

865 1313 184 ([] Metaphors, ) 184 SB

1465 1313 131 ([] Mobile ) 131 SB

1596 1313 154 (Computing,) 154 SB

265 1350 198 ([] Multimedia, ) 198 SB

865 1350 416 ([] Networks or communication, ) 416 SB

1465 1350 119 ([] Office,) 119 SB

265 1387 305 ([] Participatory design, ) 305 SB

865 1387 244 ([] Pen-based input,) 244 SB

1165 1387 8 ( ) 8 SB

1465 1387 296 ([] Predictive interface, ) 296 SB

265 1424 406 ([] Programming environments, ) 406 SB

865 1424 198 ([] Prototyping, ) 198 SB

1465 1424 405 ([] Psychology of programming,) 405 SB

265 1461 235 ([] Social impacts, ) 235 SB

865 1461 313 ([] Software engineering,) 313 SB

1315 1461 8 ( ) 8 SB

1465 1461 166 ([] Standards,) 166 SB

265 1498 335 ([] Tactile or gestural I/O, ) 335 SB

865 1498 223 ([] Task analysis, ) 223 SB

1465 1498 306 ([] Technology transfer, ) 306 SB

265 1535 140 ([] Theory, ) 140 SB

865 1535 419 ([] Three dimensional interfaces, ) 419 SB

1465 1535 155 ([] Toolkits, ) 155 SB

265 1572 127 ([] UIMS, ) 127 SB

865 1572 323 ([] Usability engineering, ) 323 SB

1465 1572 249 ([] Usability testing,) 249 SB

265 1609 499 ([] User interface design environments, ) 499 SB

865 1609 206 ([] User models, ) 206 SB

1465 1609 195 ([] User studies,) 195 SB

265 1646 124 ([] Video, ) 124 SB

865 1646 236 ([] Video analysis, ) 236 SB

1465 1646 222 ([] Virtual reality,) 222 SB

265 1683 222 ([] Visual design, ) 222 SB

865 1683 219 ([] Visualization, ) 219 SB

1465 1683 217 ([] Work analysis) 217 SB

265 1794 379 (Additional matching phrases:) 379 SB

715 1794 714 (__________________________________________) 714 SB

265 1868 1207 (_______________________________________________________________________) 1207 SB

32 0 0 50 50 0 0 0 46 /Times-Bold /font29 ANSIFont font

265 1979 542 (TYPE OF SUBMISSION) 542 SB

32 0 0 33 33 0 0 0 29 /Times-Roman /font32 ANSIFont font

265 2036 429 (For Papers, Panels, and Tutorials) 429 SB

265 2110 1687 (Category descriptions of Papers, Panels, and Tutorials distinguish types of  submissions. If your submission belongs to one of these) 1687 SB

265 2147 341 (categories please mark the) 341 SB

606 2147 8 ( ) 8 SB

614 2147 317 (type of your submission.) 317 SB

265 2258 123 (PANELS) 123 SB

565 2258 22 ([]) 22 SB

587 2258 219 (  Analytic Panels) 219 SB

1015 2258 22 ([]) 22 SB

1037 2258 372 (  Common Ground in Action) 372 SB

1465 2258 22 ([]) 22 SB

1487 2258 305 (  Influencing the Future) 305 SB

565 2295 22 ([]) 22 SB

587 2295 276 (  Comparative Panels) 276 SB

1015 2295 22 ([]) 22 SB

1037 2295 197 ( History Panels) 197 SB

265 2332 232 (                             ) 232 SB

265 2406 119 (PAPERS) 119 SB

565 2406 22 ([]) 22 SB

587 2406 16 (  ) 16 SB

603 2406 222 (Empirical Papers) 222 SB

1015 2406 22 ([]) 22 SB

1037 2406 216 (  Systems Papers) 216 SB

1465 2406 22 ([]) 22 SB

1487 2406 283 (  Methodology Papers) 283 SB

565 2443 22 ([]) 22 SB

587 2443 16 (  ) 16 SB

603 2443 398 (Experience Papers                    ) 398 SB

1015 2443 22 ([]) 22 SB

1037 2443 212 (  Theory Papers ) 212 SB

1465 2443 22 ([]) 22 SB

1487 2443 216 (  Opinion Papers) 216 SB

265 2554 183 (TUTORIALS) 183 SB

265 2591 347 (Audience experience level ) 347 SB

715 2591 192 ([] Introductory) 192 SB

1015 2591 193 ([] Intermediate) 193 SB

1315 2591 160 ([] Advanced) 160 SB

265 2628 117 (Duration) 117 SB

715 2628 145 ([] Half-day) 145 SB

1015 2628 140 ([] Full-day) 140 SB

1 #C

statusdict begin /manualfeed false store end

EJ RS

%%PageTrailer

%%PageResources: font Times-Bold

%%+ font Times-Roman

%%Trailer

SVDoc restore

end

%%Pages: 1

% TrueType font name key:

%    MSTT31c1c9 = 294fDTimes New RomanF00000043000002bc0000

%    MSTT31c1eb = 294fDTimes New RomanF00000021000001900000

%    MSTT31c1f8 = 294fDTimes New RomanF00000032000002bc0000

%    MSTT31c205 = 294fDTimes New RomanF0000002a000002bc0000

%%DocumentSuppliedResources: procset Win35Dict 3 1



%%DocumentNeededResources: font Times-Bold

%%+ font Times-Roman



%%EOF


