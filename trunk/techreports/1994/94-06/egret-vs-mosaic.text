The articulation of HTML vs. ETML has begun some intense reflection on
my part about what the "Egret Paradigm" really is.  What is the
fundamental difference, if any, between a system like Egret and a
system like WWW?  The answer is important, because if there really
isn't a paradigm-level difference, then Egret is simply a short-term
implementation hack until Mosaic gets its act together and "replaces"
Egret.

Of course, Egret is a moving target: it began as a design-level
exploration of what would be required to support evolution in the
type-level structure of an collaborative information system.  This
capability remains, although it has not yet been exploited.  (I
believe this is due to either/both of: (a) lack of interface level
support for type evolution, and (b) choice of domains and/or research
questions for which this capability was not important or relevent.)

Egret has since then become most used not as a type-level evolutionary
system, but as infrastructure for the design and implementation of
domain-specific, instrumented collaborative systems.  It is with
respect to this role that I ask the question: what good is Egret?  Why
not simply use Mosaic?  

There are some superficial, potentially short-term reasons why Egret
is preferable to Mosaic.  First, Egret provides true locking, which 
appears essential to collaborative activities in many domains.  
Second, Egret provides both authoring and browsing facilities,
while Mosaic is basically a browser.  Third, Egret is instrumented,
which allows better empirical insight into the process and outcome
of collaboration than is possible with Mosaic.

These superficial reasons (particularly number 3) suffice for us 
to prefer Egret in the short term, but I would lay odds that 
work is actively underway to extend Mosaic with the first two
capabilities, and the third wouldn't be too hard. 

However, I believe there is at least one fundamental difference between
Egret and WWW which cannot be addressed though simple hacks to Mosaic.
For lack of a better term (and I invite suggestions), I view Egret as
an intrinsically "self-aware" collaborative system, while WWW/Mosaic
is an intrinsically "self-unaware" collaborative system.  Mosaic
cannot know even rudimentary things about the current state of 
its hypertext network (such as the WWW equivalent of s*{node}*IDs);
for Egret, this is the most trivial form of state information, and
Egret goes to great lengths to provide efficient means to create
high quality state information at any level of detail and immediacy.

This is a fundamental design trade-off with complementary strengths
and weaknesses: the fact that WWW/Mosaic is self-unaware means that
it can span the globe: it can be the hypertext analogue of an
ecosystem.  On the other hand, its weakness is that without 
self-knowledge, it is limited in the granularity, precision, and
accuracy of its collaboration, focus, and ability to perform 
coordinated action.

The fact that Egret is self-aware means that it cannot span the 
globe: it can never scale in the way that WWW can and does.  Egret
is the hypertext analogue of an individual organism.  Limited in 
scale and presence, its strength is capacity for coordinated, directed
action.  A forest cannot decide to pick up and move to a different
spot when the rains fail to come.  A single animal can easily migrate
hundreds of miles to find a more appropriate environment. 

Comments?










