%!PS-Adobe-3.0 EPSF-3.0
%%Title: (Visio-Heuristic.vsd)
%%Version: 1 5
%%Creator: Adobe Acrobat 6.0
%%CreationDate: 22:09:51 10/29/06
%%For: (hongbing)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%BoundingBox: 72 189 423 441
%%HiResBoundingBox: 72.0 189.0 423.0 441.0
%%Pages: 0
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%EndProlog
%%BeginSetup
%ADOPrintSettings: L2 W0 VM op crd os scsa T h ef bg ucr sf ef r b fa pr seps ttf hb Printer/PostScript Color Management 0
%%BeginResource: procset l2check 6.0 1
%%Copyright: Copyright 1993,2001 Adobe Systems Incorporated. All Rights Reserved.
systemdict /languagelevel known
{ systemdict /languagelevel get 1 eq }
{ true }
ifelse
{
initgraphics /Helvetica findfont 18 scalefont setfont
72 600 moveto (Error: Your printer driver needs to be configured) dup show
72 580 moveto (for printing to a PostScript Language Level 1 printer.) dup show
exch = =
/Helvetica-Bold findfont 16 scalefont setfont
72 520 moveto (Windows and Unix) show
/Times-Roman findfont 16 scalefont setfont
72 500 moveto (Select \252Language Level 1\272 in the PostScript options section) show
72 480 moveto (of the Acrobat print dialog.) show
/Helvetica-Bold findfont 16 scalefont setfont
72 440 moveto (Macintosh) show
/Times-Roman findfont 16 scalefont setfont
72 420 moveto (In the Chooser, select your printer driver.) show
72 400 moveto (Then select your printer and click the Setup button.) show
72 380 moveto (Follow any on-screen dialogs that may appear.) show
showpage
quit
}
if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.18 0
%%Copyright: Copyright 1987-2003 Adobe Systems Incorporated.
%%Version: 1.18 0
systemdict /languagelevel known dup
	{ currentglobal false setglobal }
	{ false }
ifelse
exch
userdict /Adobe_CoolType_Utility 2 copy known
	{ 2 copy get dup maxlength 25 add dict copy }
	{ 25 dict }
ifelse put
Adobe_CoolType_Utility
	begin
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch /eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{ globaldict begin currentglobal true setglobal }
if
	/ct_AddStdCIDMap
		ct_Level2?
			{ {
			((Hex) 57 StartData
			0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
			7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
			d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
			cc36 74f4 1144 b13b 77) 0 () /SubFileDecode filter cvx exec
			} }
			{ {
			<BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
			4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A> eexec
			} }
		ifelse bind def
userdict /cid_extensions known
	 {
	 cid_extensions
	 begin
	 /cid_GetCIDSystemInfo
		 {
		 1 index type /stringtype eq
			 { exch cvn exch }
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				 {
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					 {
					 1 index load
					 3 index get
					 dup null eq
						  { pop pop cid_UpdateDB }
						  {
						  exch
						  1 index /Created get eq
							  { exch pop exch pop }
							  { pop cid_UpdateDB }
						  ifelse
						  }
					 ifelse
					 }
					 { pop cid_UpdateDB }
				 ifelse
				 }
				 { cid_UpdateDB }
			 ifelse
			 end
		 } bind def
	 end
	 }
if
ct_Level2?
	{ end setglobal }
if
	/ct_UseNativeCapability?  systemdict /composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring () def
		/usewidths? true def
		end def
	ct_Level2? { setglobal } { pop } ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict /languagelevel known
				{ pop /CIDFont findresource /GlyphDirectory get }
				{
				1 index /CIDFont findresource /GlyphDirectory
				get dup type /dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			} def
		/+
			{
			systemdict /languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{ 1 dict begin }
			ifelse
			/$ exch def
			systemdict /languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			? { $ begin } if
			} def
		/? { $ type /dicttype eq } def
		/| {
			userdict /Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data /AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					  begin
						AddWidths?
								{
								Adobe_CoolType_Data /CC 3 index put
								? { def } { $ 3 1 roll put } ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont /Widths get exch CC exch put
								}
								{ ? { def } { $ 3 1 roll put } ifelse }
							ifelse
					end
				end
				}
				{ ? { def } { $ 3 1 roll put } ifelse }	ifelse
				}
				{ ? { def } { $ 3 1 roll put } ifelse }
			ifelse
			} def
		/!
			{
			? { end } if
			systemdict /languagelevel known
				{ gvm setglobal }
			if
			end
			} def
		/: { string currentfile exch readstring pop } executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		 /c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		 /c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		 /c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		 /c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		 /c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		 /c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		 /c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		 /c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		 /cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		 /cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		 /cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		 /cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		 /cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx [.001 0 0 .001 0 0] def
		/ct_1000Mtx [1000 0 0 1000 0 0] def
		/ct_raise {exch cvx exch errordict exch get exec stop} bind def
		/ct_reraise
			{ cvx $error /errorname get (Error: ) print dup (						  ) cvs print
					errordict exch get exec stop
			} bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			} bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility /ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{ dup string /dst_string exch def }
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex  get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string  dst_index 2 index putinterval
						length dst_index add /dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string  dst_index 2 index putinterval
						pop dup dst_index add /dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							  { arrayIndex get }
							  {
							  pop
							  exit
							  }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			} bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{ /unknowninstancename /Category resourcestatus }
			stopped
				{ cleartomark setglobal true }
				{ cleartomark currentglobal not exch setglobal }
			ifelse
				{
					{
					mark 3 1 roll /Category findresource
						begin
						ct_Vars /vm currentglobal put
						({ResourceStatus} stopped) 0 () /SubFileDecode filter cvx exec
							{ cleartomark false }
							{ { 3 2 roll pop true } { cleartomark false } ifelse }
						ifelse
						ct_Vars /vm get setglobal
						end
					}
				}
				{ { resourcestatus } }
			ifelse bind def
			/CIDFont /Category ct_resourcestatus
				{ pop pop }
				{
				currentglobal  true setglobal
				/Generic /Category findresource
				dup length dict copy
				dup /InstanceType /dicttype put
				/CIDFont exch /Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit /ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				  /Registry (Adobe) def
				  /Ordering (Identity) def
				  /Supplement 0 def
				end def
				/CMapName /Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000> <FFFF>
				endcodespacerange
				1 begincidrange
				<0000> <FFFF> 0
				endcidrange
				endcmap
				CMapName currentdict /CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont  10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{ pop pop /defineresource /undefined ct_raise }
				ifelse
				} bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{ get 3 1 roll pop pop}
						{ pop pop /findresource /undefinedresource ct_raise }
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{ pop pop /findresource /undefined ct_raise }
				ifelse
				} bind def
			/ct_resourcestatus /resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup (Binary) eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{ cid_BYTE_COUNT () /SubFileDecode filter }
							stopped
								{ pop pop pop }
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup (Hex) eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{ null exch /ASCIIHexDecode filter /readstring }
							stopped
								{ pop exch pop (>) exch /readhexstring }
							if
							}
							{ (>) exch /readhexstring }
						ifelse
						load
						exit
						}
					if
					/StartData /typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch /GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop /readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				} bind def
			/StartData
				{
				mark
					{
					currentdict
					dup /FDArray get 0 get /FontMatrix get
					0 get 0.001 eq
						{
						dup /CDevProc known not
							{
							/CDevProc 1183615869 internaldict /stdCDevProc 2 copy known
								{ get }
								{
								pop pop
								{ pop pop pop pop pop 0 -1000 7 index 2 div 880 }
								}
							ifelse
							def
							}
						if
						}
						{
						 /CDevProc
							 {
							 pop pop pop pop pop
							 0
							 1 cid_temp /cid_CIDFONT get
							 /FDArray get 0 get
							 /FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							 } def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup /cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup /SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup /SubrMapOffset undef
										dup /SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{ pop }
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict /CIDFont defineresource pop
					end end
					}
				stopped
					{ cleartomark /StartData ct_reraise }
				if
				} bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit /ProcSet ct_resourcestatus
				{ true }
				{ /CIDInitC /ProcSet ct_resourcestatus }
			ifelse
				{
				pop pop
				/CIDInit /ProcSet findresource
				ct_UseNativeCapability?
					{ pop null }
					{ /CIDInit ct_CIDInit /ProcSet defineresource pop }
				ifelse
				}
				{ /CIDInit ct_CIDInit /ProcSet defineresource pop null }
			ifelse
			ct_Vars exch /ct_oldCIDInit exch put
			} bind def
		/ct_restoreCIDInit
			{
			ct_Vars /ct_oldCIDInit get dup null ne
				{ /CIDInit exch /ProcSet defineresource pop }
				{ pop }
			ifelse
			} bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility /ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{ pop 0 }
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{ get }
								{ pop pop nullstring }
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{ 0 FDBytes ct_cvnsi }
									{ pop 0 }
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{ /charstring nullstring def exit }
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			} def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			} def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont /Widths get cid
					2 copy known
						{ get exch pop aload pop }
						{ pop pop stringwidth }
					ifelse
					}
					{ stringwidth }
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			} def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{ get }
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup /FontMatrix 2 copy known
						{ get }
						{ pop pop ct_defaultFontMtx }
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont /Widths get def
					/CharStrings 1 dict dup /.notdef
						<d841272cf18f54fc13> dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup /CharStrings get 1 index /Encoding get
			ct_dfCharCode get charstring put
			rootfont /WMode 2 copy known
				{ get }
				{ pop pop 0 }
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ ct_str1 show }
			ifelse
			} def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup /FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ ct_1000Mtx matrix concatmatrix concat }
				{ pop }
			ifelse
			/Private get
			Adobe_CoolType_Utility /ct_Level2? get not
				{
				ct_dfDict /Private
				3 -1 roll
					{ put }
				1183615869 internaldict /superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility /ct_Level2? get
				{ 1 index }
				{ 3 index /Private get mark 6 1 roll }
			ifelse
			dup /RunInt known
				{ /RunInt get }
				{ pop /CCRun }
			ifelse
			get exec
			Adobe_CoolType_Utility /ct_Level2? get not
				{ cleartomark }
			if
			} bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility /ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{ stop }
			if
			end
			end
			end
			end
			} bind def
		/BaseFontNameStr (BF00) def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix  [0.001 0 0 0.001 0 0] def
			/FontBBox  [-250 -250 1250 1250] def
			/Encoding ct_cHexEncoding def
			/BuildChar /ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString /ct_Type3ShowCharString load def
				/ct_dfSetCacheProc /ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup /lenIV 4 put def
				/CharStrings 1 dict dup /.notdef <d841272cf18f54fc13> put def
				/PaintType 0 def
				/ct_ShowCharString /ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{ exit }
				if
				}
			for
			exch pop exch pop
			} bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch /WMode exch def
				exch /FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup /FontMatrix known
				{ dup /FontMatrix get /FontMatrix exch def }
				{ /FontMatrix matrix def }
			ifelse
				/bfCount 1 index /CIDCount get 256 idiv 1 add
					dup 256 gt { pop 256} if def
				/Encoding
					256 array 0 1 bfCount 1 sub { 2 copy dup put pop } for
					bfCount 1 255 { 2 copy bfCount put pop } for
					def
				/FDepVector bfCount dup 256 lt { 1 add } if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont /FontBBox known
						{ CIDFont /FontBBox get /FontBBox exch def }
					if
					CIDFont /CDevProc known
						{ CIDFont /CDevProc get /CDevProc exch def }
					if
					currentdict
					end
				BaseFontNameStr 3 (0) putinterval
				0 1 bfCount dup 256 eq { 1 sub } if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup /CIDFirstByte exch 256 mul def
						FontType 3 eq
							{ /ct_FDDict 2 dict def }
						if
						currentdict
						end
					1 index  16
					BaseFontNameStr  2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{ /Widths 1 index /CIDFont get /GlyphDirectory get length dict def }
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont /Widths get
						begin
						exch /CIDFont get /GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{ exch pop }
			ifelse
			} bind def
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{
				2 index /CMap ct_resourcestatus
					{ pop pop exch pop }
					{
					/CIDInit /ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch /WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry (Adobe) def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-) search
									{
									pop pop
									(-) search
										{
										dup length string copy
										exch pop exch pop
										}
										{ pop (Identity)}
									ifelse
									}
									{ pop  (Identity)  }
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000> <FFFF>
							endcodespacerange
							1 begincidrange
							<0000> <FFFF> 0
							endcidrange
							endcmap
							CMapName currentdict /CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index /CMap ct_resourcestatus
					{ pop pop }
					{
					/CIDInit /ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry (Adobe) def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-) search
							{
							pop pop
							(-) search
								{ dup length string copy exch pop exch pop }
								{ pop (Identity) }
							ifelse
							}
							{ pop (Identity) }
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000> <FFFF>
					endcodespacerange
					1 begincidrange
					<0000> <FFFF> 0
					endcidrange
					endcmap
					CMapName currentdict /CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get /CIDFont findresource
				ct_makeocf
				}
			ifelse
			} bind def
		currentdict readonly pop
		end
	end
%%EndResource
/currentpacking where{pop currentpacking true setpacking}if
%%BeginResource: procset pdfvars 6.0 1
%%Copyright: Copyright 1987-2002 Adobe Systems Incorporated. All Rights Reserved.
%%Title: definition of dictionary of variables used by PDF & PDFText procsets
userdict /PDF 162 dict put
userdict /PDFVars 89 dict dup begin put
/docSetupDone false def
/InitAll 0 def
/TermAll 0 def
/DocInitAll 0 def
/DocTermAll 0 def
/_pdfEncodings 2 array def
/_pdf_str1 1 string def
/_pdf_i 0 def
/_pdf_na 0 def
/_pdf_showproc 0 def
/_italMtx [1 0 .212557 1 0 0] def
/_italMtx_WMode1 [1 -.212557 0 1 0 0] def
/_italMtxType0 [1 0 .1062785 1 0 0] def
/_italMtx_WMode1Type0 [1 -.1062785 0 1 0 0] def
/_basefont 0 def
/_basefonto 0 def
/_pdf_oldCIDInit null def
/_pdf_FontDirectory 30 dict def
/_categories 10 dict def
/_sa? true def
/_ColorSep5044? false def
/nulldict 0 dict def
/_processColors 0 def
/overprintstack null def
/_defaulttransfer currenttransfer def
/_defaultflatness currentflat def
/_defaulthalftone null def
/_defaultcolortransfer null def
/_defaultblackgeneration null def
/_defaultundercolorremoval null def
/_defaultcolortransfer null def
PDF begin
[/c/cs/cm/d/d0/f/h/i/j/J/l/m/M/n/q/Q/re/ri/S/sc/sh/Tf/w/W
/applyInterpFunc/applystitchFunc/domainClip/encodeInput
/initgs/int/limit/rangeClip
/defineRes/undefineRes/findRes/setSA/pl
/? /! /| /: /+ /GetGlyphDirectory
/pdf_flushFilters /pdf_readstring /pdf_dictOp /pdf_image /pdf_maskedImage
/pdf_shfill /pdf_sethalftone
] {null def} bind forall
end
end
%%EndResource
PDFVars begin PDF begin
%%BeginResource: procset pdfutil 6.0 1
%%Copyright: Copyright 1993-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Basic utilities used by other PDF procsets
/bd {bind def} bind def
/ld {load def} bd
/bld {
dup length dict begin
{ null def } forall
bind
end
def
} bd
/dd { PDFVars 3 1 roll put } bd
/xdd { exch dd } bd
/Level2?
systemdict /languagelevel known
{ systemdict /languagelevel get 2 ge } { false } ifelse
def
/Level1? Level2? not def
/Level3?
systemdict /languagelevel known
{systemdict /languagelevel get 3 eq } { false } ifelse
def
/getifknown {
2 copy known { get true } { pop pop false } ifelse
} bd
/here {
currentdict exch getifknown
} bd
/isdefined? { where { pop true } { false } ifelse } bd
%%EndResource
%%BeginResource: procset pdf 6.0 1
%%Copyright: Copyright 1998-2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: General operators for PDF, common to all Language Levels.
/cm { matrix astore concat } bd
/d /setdash ld
/f /fill ld
/h /closepath ld
/i {dup 0 eq {pop _defaultflatness} if setflat} bd
/j /setlinejoin ld
/J /setlinecap ld
/M /setmiterlimit ld
/n /newpath ld
/S /stroke ld
/w /setlinewidth ld
/W /clip ld
/sg /setgray ld
/initgs {
0 setgray
[] 0 d
0 j
0 J
10 M
1 w
false setSA
/_defaulttransfer load settransfer
0 i
/RelativeColorimetric ri
newpath
} bd
/int {
dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul
exch pop add exch pop
} bd
/limit {
dup 2 index le { exch } if pop
dup 2 index ge { exch } if pop
} bd
/domainClip {
Domain aload pop 3 2 roll
limit
} [/Domain] bld
/applyInterpFunc {
0 1 DimOut 1 sub
{
dup C0 exch get exch
dup C1 exch get exch
3 1 roll
1 index sub
3 index
N exp mul add
exch
currentdict /Range_lo known
{
dup Range_lo exch get exch
Range_hi exch get
3 2 roll limit
}
{
pop
}
ifelse
exch
} for
pop
} [/DimOut /C0 /C1 /N /Range_lo /Range_hi] bld
/encodeInput {
NumParts 1 sub
0 1 2 index
{
dup Bounds exch get
2 index gt
{ exit }
{ dup
3 index eq
{ exit }
{ pop } ifelse
} ifelse
} for
3 2 roll pop
dup Bounds exch get exch
dup 1 add Bounds exch get exch
2 mul
dup Encode exch get exch
1 add Encode exch get
int
} [/NumParts /Bounds /Encode] bld
/rangeClip {
exch dup Range_lo exch get
exch Range_hi exch get
3 2 roll
limit
} [/Range_lo /Range_hi] bld
/applyStitchFunc {
Functions exch get exec
currentdict /Range_lo known {
0 1 DimOut 1 sub {
DimOut 1 add -1 roll
rangeClip
} for
} if
} [/Functions /Range_lo /DimOut] bld
/pdf_flushfilters
{
aload length
{ dup status
1 index currentfile ne and
{ dup flushfile closefile }
{ pop }
ifelse
} repeat
} bd
/pdf_readstring
{
1 index dup length 1 sub get
exch readstring pop
exch pdf_flushfilters
} bind def
/pdf_dictOp
{
3 2 roll
10 dict copy
begin
_Filters dup length 1 sub get def
currentdict exch exec
_Filters pdf_flushfilters
end
} [/_Filters] bld
/pdf_image {{image} /DataSource pdf_dictOp} bd
/pdf_imagemask {{imagemask} /DataSource pdf_dictOp} bd
/pdf_shfill {{sh} /DataSource pdf_dictOp} bd
/pdf_sethalftone {{sethalftone} /Thresholds pdf_dictOp} bd
/pdf_maskedImage
{
10 dict copy begin
/miDict currentdict def
/DataDict DataDict 10 dict copy def
DataDict begin
/DataSource
_Filters dup length 1 sub get
def
miDict image
_Filters pdf_flushfilters
end
end
} [/miDict /DataDict /_Filters] bld
/RadialShade {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/r2 exch def
/c2y exch def
/c2x exch def
/r1 exch def
/c1y exch def
/c1x exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
c1x c2x eq
{
c1y c2y lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope c2y c1y sub c2x c1x sub div def
/theta slope 1 atan def
c2x c1x lt c2y c1y ge and { /theta theta 180 sub def} if
c2x c1x lt c2y c1y lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
c1x c1y translate
theta rotate
-90 rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
/max { 2 copy gt { pop } {exch pop} ifelse } bind def
/min { 2 copy lt { pop } {exch pop} ifelse } bind def
rampdict begin
40 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
c1x c1y translate
theta rotate
-90 rotate
/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
/c1y 0 def
/c1x 0 def
/c2x 0 def
ext0 {
0 getrampcolor
c2y r2 add r1 sub 0.0001 lt
{
c1x c1y r1 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2y r1 add r2 le
{
c1x c1y r1 0 360 arc
fill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r1 neg def
/p1y c1y def
/p2x r1 def
/p2y c1y def
p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y p1x SS1 div neg def
/SS2 90 theta sub dup sin exch cos div def
/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y p2x SS2 div neg def
r1 r2 gt
{
/L1maxX p1x yMin p1y sub SS1 div add def
/L2maxX p2x yMin p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
c1x c2x sub dup mul
c1y c2y sub dup mul
add 0.5 exp
0 dtransform
dup mul exch dup mul add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
/hires exch def
hires mul
/numpix exch def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
/xInc c2x c1x sub numsteps div def
/yInc c2y c1y sub numsteps div def
/rInc r2 r1 sub numsteps div def
/cx c1x def
/cy c1y def
/radius r1 def
newpath
xInc 0 eq yInc 0 eq rInc 0 eq and and
{
0 getrampcolor
cx cy radius 0 360 arc
stroke
NumSamples 1 sub getrampcolor
cx cy radius 72 hires div add 0 360 arc
0 setlinewidth
stroke
}
{
0
numsteps
{
dup
subsampling { round } if
getrampcolor
cx cy radius 0 360 arc
/cx cx xInc add def
/cy cy yInc add def
/radius radius rInc add def
cx cy radius 360 0 arcn
eofill
rampIndxInc add
}
repeat
pop
} ifelse
ext1 {
c2y r2 add r1 lt
{
c2x c2y r2 0 360 arc
fill
}
{
c2y r1 add r2 sub 0.0001 le
{
c2x c2y r2 360 0 arcn
pathbbox
/aymax exch def
/axmax exch def
/aymin exch def
/axmin exch def
/bxMin xMin axmin min def
/byMin yMin aymin min def
/bxMax xMax axmax max def
/byMax yMax aymax max def
bxMin byMin moveto
bxMax byMin lineto
bxMax byMax lineto
bxMin byMax lineto
bxMin byMin lineto
eofill
}
{
c2x c2y r2 0 360 arc fill
r1 r2 eq
{
/p1x r2 neg def
/p1y c2y def
/p2x r2 def
/p2y c2y def
p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
fill
}
{
/AA r2 r1 sub c2y div def
AA -1 eq
{ /theta 89.99 def}
{ /theta AA 1 AA dup mul sub sqrt div 1 atan def}
ifelse
/SS1 90 theta add dup sin exch cos div def
/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
/p1y c2y p1x SS1 div sub def
/SS2 90 theta sub dup sin exch cos div def
/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
/p2y c2y p2x SS2 div sub def
r1 r2 lt
{
/L1maxX p1x yMax p1y sub SS1 div add def
/L2maxX p2x yMax p2y sub SS2 div add def
}
{
/L1maxX 0 def
/L2maxX 0 def
}ifelse
p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
L1maxX L1maxX p1x sub SS1 mul p1y add lineto
fill
}
ifelse
}
ifelse
} ifelse
} if
grestore
grestore
end
end
end
} ifelse
} bd
/GenStrips {
40 dict begin
/background exch def
/ext1 exch def
/ext0 exch def
/BBox exch def
/y2 exch def
/x2 exch def
/y1 exch def
/x1 exch def
/rampdict exch def
gsave
BBox length 0 gt {
newpath
BBox 0 get BBox 1 get moveto
BBox 2 get BBox 0 get sub 0 rlineto
0 BBox 3 get BBox 1 get sub rlineto
BBox 2 get BBox 0 get sub neg 0 rlineto
closepath
clip
newpath
} if
x1 x2 eq
{
y1 y2 lt {/theta 90 def}{/theta 270 def} ifelse
}
{
/slope y2 y1 sub x2 x1 sub div def
/theta slope 1 atan def
x2 x1 lt y2 y1 ge and { /theta theta 180 sub def} if
x2 x1 lt y2 y1 lt and { /theta theta 180 add def} if
}
ifelse
gsave
clippath
x1 y1 translate
theta rotate
{ pathbbox } stopped
{ 0 0 0 0 } if
/yMax exch def
/xMax exch def
/yMin exch def
/xMin exch def
grestore
xMax xMin eq yMax yMin eq or
{
grestore
end
}
{
rampdict begin
20 dict begin
background length 0 gt { background sssetbackground gsave clippath fill grestore } if
gsave
x1 y1 translate
theta rotate
/xStart 0 def
/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
/ySpan yMax yMin sub def
/numsteps NumSamples def
/rampIndxInc 1 def
/subsampling false def
xStart 0 transform
xEnd 0 transform
3 -1 roll
sub dup mul
3 1 roll
sub dup mul
add 0.5 exp 72 div
0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
1 index 1 index lt { exch } if pop
mul
/numpix exch def
numpix 0 ne
{
NumSamples numpix div 0.5 gt
{
/numsteps numpix 2 div round cvi dup 1 le { pop 2 } if def
/rampIndxInc NumSamples 1 sub numsteps div def
/subsampling true def
} if
} if
ext0 {
0 getrampcolor
xMin xStart lt
{ xMin yMin xMin neg ySpan rectfill } if
} if
/xInc xEnd xStart sub numsteps div def
/x xStart def
0
numsteps
{
dup
subsampling { round } if
getrampcolor
x yMin xInc ySpan rectfill
/x x xInc add def
rampIndxInc add
}
repeat
pop
ext1 {
xMax xEnd gt
{ xEnd yMin xMax xEnd sub ySpan rectfill } if
} if
grestore
grestore
end
end
end
} ifelse
} bd
/currentdistillerparams where { pop currentdistillerparams /CoreDistVersion get 5000 lt}{true}ifelse
{
/PDFMark5 {cleartomark} bd
}
{
/PDFMark5 {pdfmark} bd
}ifelse
/ReadByPDFMark5
{
2 dict begin
/makerString exch def string /tmpString exch def
{
currentfile tmpString readline pop
makerString anchorsearch
{
pop pop cleartomark exit
}
{
3 copy /PUT PDFMark5 pop 2 copy (\n) /PUT PDFMark5
} ifelse
}loop
end
}bd
%%EndResource
%%BeginResource: procset pdflev2 6.0 1
%%Copyright: Copyright 1987-2001,2003 Adobe Systems Incorporated. All Rights Reserved.
%%Title: PDF operators, with code specific for Level 2
/docinitialize {
PDF begin
/_defaulthalftone currenthalftone dd
/_defaultblackgeneration currentblackgeneration dd
/_defaultundercolorremoval currentundercolorremoval dd
/_defaultcolortransfer [currentcolortransfer] dd
/_defaulttransfer currenttransfer dd
end
PDFVars /docSetupDone true put
} bd
/initialize {
PDFVars /docSetupDone get {
_defaulthalftone sethalftone
/_defaultblackgeneration load setblackgeneration
/_defaultundercolorremoval load setundercolorremoval
_defaultcolortransfer aload pop setcolortransfer
} if
false setoverprint
} bd
/terminate { } bd
/c /curveto ld
/cs /setcolorspace ld
/l /lineto ld
/m /moveto ld
/q /gsave ld
/Q /grestore ld
/sc /setcolor ld
/setSA/setstrokeadjust ld
/re {
4 2 roll m
1 index 0 rlineto
0 exch rlineto
neg 0 rlineto
h
} bd
/concattransferfuncs {
[ 3 1 roll /exec load exch /exec load ] cvx
} bd
/concatandsettransfer {
/_defaulttransfer load concattransferfuncs settransfer
} bd
/concatandsetcolortransfer {
_defaultcolortransfer aload pop
8 -1 roll 5 -1 roll concattransferfuncs 7 1 roll
6 -1 roll 4 -1 roll concattransferfuncs 5 1 roll
4 -1 roll 3 -1 roll concattransferfuncs 3 1 roll
concattransferfuncs
setcolortransfer
} bd
/defineRes/defineresource ld
/undefineRes/undefineresource ld
/findRes/findresource ld
currentglobal
true systemdict /setglobal get exec
[/Function /ExtGState /Form /Shading /FunctionDictionary /MadePattern /PatternPrototype /DataSource /Image]
{ /Generic /Category findresource dup length dict copy /Category defineresource pop }
forall
systemdict /setglobal get exec
/ri
{
/findcolorrendering isdefined?
{
mark exch
findcolorrendering
counttomark 2 eq
{ type /booleantype eq
{ dup type /nametype eq
{ dup /ColorRendering resourcestatus
{ pop pop
dup /DefaultColorRendering ne
{
/ColorRendering findresource
setcolorrendering
} if
} if
} if
} if
} if
cleartomark
}
{ pop
} ifelse
} bd
/knownColorants? {
pop false
} bd
/getrampcolor {
cvi
/indx exch def
0 1 NumComp 1 sub {
dup
Samples exch get
dup type /stringtype eq { indx get } if
exch
Scaling exch get aload pop
3 1 roll
mul add
} for
setcolor
} bd
/sssetbackground { aload pop setcolor } bd
%%EndResource
%%BeginResource: procset pdftext 6.0 1
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. All Rights Reserved.
%%Title: Text operators for PDF
PDF /PDFText 78 dict dup begin put
/docinitialize
{
/resourcestatus where {
pop
/CIDParams /ProcSet resourcestatus {
pop pop
false /CIDParams /ProcSet findresource /SetBuildCompatible get exec
} if
} if
PDF begin
PDFText /_pdfDefineIdentity-H known
{ PDFText /_pdfDefineIdentity-H get exec}
if
end
} bd
/initialize {
PDFText begin
} bd
/terminate { end } bd
Level2?
{
/_safeput
{
3 -1 roll load 3 1 roll put
}
bd
}
{
/_safeput
{
2 index load dup dup length exch maxlength ge
{ dup length 5 add dict copy
3 index xdd
}
{ pop }
ifelse
3 -1 roll load 3 1 roll put
}
bd
}
ifelse
/pdf_has_composefont? systemdict /composefont known def
/CopyFont {
{
1 index /FID ne 2 index /UniqueID ne and
{ def } { pop pop } ifelse
} forall
} bd
/Type0CopyFont
{
exch
dup length dict
begin
CopyFont
[
exch
FDepVector
{
dup /FontType get 0 eq
{
1 index Type0CopyFont
/_pdfType0 exch definefont
}
{
/_pdfBaseFont exch
2 index exec
}
ifelse
exch
}
forall
pop
]
/FDepVector exch def
currentdict
end
} bd
Level2? {currentglobal true setglobal} if
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF] def
Level2? {setglobal} if
/modEnc {
/_enc xdd
/_icode 0 dd
counttomark 1 sub -1 0
{
index
dup type /nametype eq
{
_enc _icode 3 -1 roll put
_icode 1 add
}
if
/_icode xdd
} for
cleartomark
_enc
} bd
/trEnc {
/_enc xdd
255 -1 0 {
exch dup -1 eq
{ pop /.notdef }
{ Encoding exch get }
ifelse
_enc 3 1 roll put
} for
pop
_enc
} bd
/TE {
/_i xdd
StandardEncoding 256 array copy modEnc
_pdfEncodings exch _i exch put
} bd
Level2?
{
/pdfPatchCStrings
{
currentdict /CharStrings known currentdict /FontType known and
{
FontType 1 eq CharStrings type /dicttype eq and
{
CharStrings /mu known CharStrings /mu1 known not and CharStrings wcheck and
{
CharStrings /mu get
type /stringtype eq
{
currentglobal
CharStrings /mu1
CharStrings /mu get
dup gcheck setglobal
dup length string copy
put
setglobal
} if
} if
} if
} if
} bd
}
{ /pdfPatchCStrings {} bd }
ifelse
/TZ
{
/_usePDFEncoding xdd
findfont
dup length 6 add dict
begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
/pdf_origFontName FontName def
/FontName exch def
currentdict /PaintType known
{ PaintType 2 eq {/PaintType 0 def} if }
if
_usePDFEncoding 0 ge
{
/Encoding _pdfEncodings _usePDFEncoding get def
pop
}
{
_usePDFEncoding -1 eq
{
counttomark 0 eq
{ pop }
{
Encoding 256 array copy
modEnc /Encoding exch def
}
ifelse
}
{
256 array
trEnc /Encoding exch def
}
ifelse
}
ifelse
pdf_EuroProcSet pdf_origFontName known
{
pdf_origFontName pdf_AddEuroGlyphProc
} if
Level2?
{
currentdict /pdf_origFontName undef
} if
FontName currentdict
end
definefont pop
}
bd
Level2?
{
/TZG
{
currentglobal true setglobal
2 index _pdfFontStatus
{
2 index findfont
false setglobal
3 index findfont
true setglobal
ne
{
2 index findfont dup rcheck
{
dup length dict begin
{
1 index /FID ne { def } { pop pop } ifelse
} forall
pdfPatchCStrings
currentdict end
}
if
3 index exch definefont pop
}
if
} if
setglobal
TZ
} bd
}
{
/TZG {TZ} bd
} ifelse
Level2?
{
currentglobal false setglobal
userdict /pdftext_data 5 dict put
pdftext_data
begin
/saveStacks
{
pdftext_data
begin
/vmmode currentglobal def
false setglobal
count array astore /os exch def
end
countdictstack array dictstack pdftext_data exch /ds exch put
cleardictstack pdftext_data /dscount countdictstack put
pdftext_data /vmmode get setglobal
} bind def
/restoreStacks
{
pdftext_data /vmmode currentglobal put false setglobal
clear cleardictstack
pdftext_data /ds get dup
pdftext_data /dscount get 1 2 index length 1 sub
{ get begin dup } for
pop pop
pdftext_data /os get aload pop
pdftext_data /vmmode get setglobal
} bind def
/testForClonePrinterBug
{
currentglobal true setglobal
/undefinedCategory /Generic /Category findresource
dup length dict copy /Category defineresource pop
setglobal
pdftext_data /saveStacks get exec
pdftext_data /vmmode currentglobal put false setglobal
/undefined /undefinedCategory { resourcestatus } stopped
pdftext_data exch /bugFound exch put
pdftext_data /vmmode get setglobal
pdftext_data /restoreStacks get exec
pdftext_data /bugFound get
} bind def
end
setglobal
/pdf_resourcestatus
pdftext_data /testForClonePrinterBug get exec
{
{
pdftext_data /saveStacks get exec
pdftext_data /os get dup dup length 1 sub
dup 1 sub dup 0 lt { pop 0 } if
exch 1 exch { get exch dup } for
pop pop
{ resourcestatus }
stopped
{
clear cleardictstack pdftext_data /restoreStacks get exec
{ pop pop } stopped pop false
}
{
count array astore pdftext_data exch /results exch put
pdftext_data /restoreStacks get exec pop pop
pdftext_data /results get aload pop
}
ifelse
}
}
{ { resourcestatus } }
ifelse
bd
}
if
Level2?
{
/_pdfUndefineResource
{
currentglobal 3 1 roll
_pdf_FontDirectory 2 index 2 copy known
{undef}
{pop pop}
ifelse
1 index (pdf) exch _pdfConcatNames 1 index
1 index 1 _pdfConcatNames 1 index
5 index 1 _pdfConcatNames 1 index
4
{
2 copy pdf_resourcestatus
{
pop 2 lt
{2 copy findresource gcheck setglobal undefineresource}
{pop pop}
ifelse
}
{ pop pop}
ifelse
} repeat
setglobal
} bd
}
{
/_pdfUndefineResource { pop pop} bd
}
ifelse
Level2?
{
/_pdfFontStatus
{
currentglobal exch
/Font pdf_resourcestatus
{pop pop true}
{false}
ifelse
exch setglobal
} bd
}
{
/_pdfFontStatusString 50 string def
_pdfFontStatusString 0 (fonts/) putinterval
/_pdfFontStatus
{
FontDirectory 1 index known
{ pop true }
{
_pdfFontStatusString 6 42 getinterval
cvs length 6 add
_pdfFontStatusString exch 0 exch getinterval
{ status } stopped
{pop false}
{
{ pop pop pop pop true}
{ false }
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
Level2?
{
/_pdfCIDFontStatus
{
/CIDFont /Category pdf_resourcestatus
{
pop pop
/CIDFont pdf_resourcestatus
{pop pop true}
{false}
ifelse
}
{ pop false }
ifelse
} bd
}
if
/_pdfString100 100 string def
/_pdfComposeFontName
{
dup length 1 eq
{
0 get
1 index
type /nametype eq
{
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
2 index exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
exch pop
true
}
{
pop pop
false
}
ifelse
}
{
false
}
ifelse
dup {exch cvn exch} if
} bd
/_pdfConcatNames
{
exch
_pdfString100 cvs
length dup dup _pdfString100 exch (-) putinterval
_pdfString100 exch 1 add dup _pdfString100 length exch sub getinterval
3 -1 roll exch cvs length
add 1 add _pdfString100 exch 0 exch getinterval
cvn
} bind def
/_pdfTextTempString 50 string def
/_pdfRegOrderingArray [(Adobe-Japan1) (Adobe-CNS1) (Adobe-Korea1) (Adobe-GB1)] def
/_pdf_CheckCIDSystemInfo
{
1 index _pdfTextTempString cvs
(Identity) anchorsearch
{
pop pop pop pop true
}
{
false
_pdfRegOrderingArray
{
2 index exch
anchorsearch
{ pop pop pop true exit}
{ pop }
ifelse
}
forall
exch pop
exch /CIDFont findresource
/CIDSystemInfo get
3 -1 roll /CMap findresource
/CIDSystemInfo get
exch
3 -1 roll
{
2 copy
/Supplement get
exch
dup type /dicttype eq
{/Supplement get}
{pop 0 }
ifelse
ge
}
{ true }
ifelse
{
dup /Registry get
2 index /Registry get eq
{
/Ordering get
exch /Ordering get
dup type /arraytype eq
{
1 index type /arraytype eq
{
true
1 index length 1 sub -1 0
{
dup 2 index exch get exch 3 index exch get ne
{ pop false exit}
if
} for
exch pop exch pop
}
{ pop pop false }
ifelse
}
{
eq
}
ifelse
}
{ pop pop false }
ifelse
}
{ pop pop false }
ifelse
}
ifelse
} bind def
pdf_has_composefont?
{
/_pdfComposeFont
{
2 copy _pdfComposeFontName not
{
2 index
}
if
(pdf) exch _pdfConcatNames
dup _pdfFontStatus
{ dup findfont 5 2 roll pop pop pop true}
{
4 1 roll
1 index /CMap pdf_resourcestatus
{
pop pop
true
}
{false}
ifelse
1 index true exch
{
_pdfCIDFontStatus not
{pop false exit}
if
}
forall
and
{
1 index 1 index 0 get _pdf_CheckCIDSystemInfo
{
3 -1 roll pop
2 index 3 1 roll
composefont true
}
{
pop pop exch pop false
}
ifelse
}
{
_pdfComposeFontName
{
dup _pdfFontStatus
{
exch pop
1 index exch
findfont definefont true
}
{
pop exch pop
false
}
ifelse
}
{
exch pop
false
}
ifelse
}
ifelse
{ true }
{
dup _pdfFontStatus
{ dup findfont true }
{ pop false }
ifelse
}
ifelse
}
ifelse
} bd
}
{
/_pdfComposeFont
{
_pdfComposeFontName not
{
dup
}
if
dup
_pdfFontStatus
{exch pop dup findfont true}
{
1 index
dup type /nametype eq
{pop}
{cvn}
ifelse
eq
{pop false}
{
dup _pdfFontStatus
{dup findfont true}
{pop false}
ifelse
}
ifelse
}
ifelse
} bd
}
ifelse
/_pdfStyleDicts 4 dict dup begin
/Adobe-Japan1 4 dict dup begin
Level2?
{
/Serif
/HeiseiMin-W3-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMin-W3}
{
/HeiseiMin-W3 _pdfCIDFontStatus
{/HeiseiMin-W3}
{/Ryumin-Light}
ifelse
}
ifelse
def
/SansSerif
/HeiseiKakuGo-W5-83pv-RKSJ-H _pdfFontStatus
{/HeiseiKakuGo-W5}
{
/HeiseiKakuGo-W5 _pdfCIDFontStatus
{/HeiseiKakuGo-W5}
{/GothicBBB-Medium}
ifelse
}
ifelse
def
/HeiseiMaruGo-W4-83pv-RKSJ-H _pdfFontStatus
{/HeiseiMaruGo-W4}
{
/HeiseiMaruGo-W4 _pdfCIDFontStatus
{/HeiseiMaruGo-W4}
{
/Jun101-Light-RKSJ-H _pdfFontStatus
{ /Jun101-Light }
{ SansSerif }
ifelse
}
ifelse
}
ifelse
/RoundSansSerif exch def
/Default Serif def
}
{
/Serif /Ryumin-Light def
/SansSerif /GothicBBB-Medium def
{
(fonts/Jun101-Light-83pv-RKSJ-H) status
}stopped
{pop}{
{ pop pop pop pop /Jun101-Light }
{ SansSerif }
ifelse
/RoundSansSerif exch def
}ifelse
/Default Serif def
}
ifelse
end
def
/Adobe-Korea1 4 dict dup begin
/Serif /HYSMyeongJo-Medium def
/SansSerif /HYGoThic-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-GB1 4 dict dup begin
/Serif /STSong-Light def
/SansSerif /STHeiti-Regular def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
/Adobe-CNS1 4 dict dup begin
/Serif /MKai-Medium def
/SansSerif /MHei-Medium def
/RoundSansSerif SansSerif def
/Default Serif def
end
def
end
def
/TZzero
{
/_wmode xdd
/_styleArr xdd
/_regOrdering xdd
3 copy
_pdfComposeFont
{
5 2 roll pop pop pop
}
{
[
0 1 _styleArr length 1 sub
{
_styleArr exch get
_pdfStyleDicts _regOrdering 2 copy known
{
get
exch 2 copy known not
{ pop /Default }
if
get
}
{
pop pop pop /Unknown
}
ifelse
}
for
]
exch pop
2 index 3 1 roll
_pdfComposeFont
{3 -1 roll pop}
{
findfont dup /FontName get exch
}
ifelse
}
ifelse
dup /WMode 2 copy known
{ get _wmode ne }
{ pop pop _wmode 1 eq}
ifelse
{
exch _wmode _pdfConcatNames
dup _pdfFontStatus
{ exch pop dup findfont false}
{ exch true }
ifelse
}
{
dup /FontType get 0 ne
}
ifelse
{
dup /FontType get 3 eq _wmode 1 eq and
{
_pdfVerticalRomanT3Font dup length 10 add dict copy
begin
/_basefont exch
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put dup 16#a5 /yen put dup 16#b4 /yen put}
if
def
FontName
currentdict
end
definefont
def
/Encoding _basefont /Encoding get def
/_fauxfont true def
}
{
dup length 3 add dict
begin
{1 index /FID ne {def}{pop pop} ifelse }
forall
FontType 0 ne
{
/Encoding Encoding dup length array copy
dup 16#27 /quotesingle put
dup 16#60 /grave put
_regOrdering /Adobe-Japan1 eq
{dup 16#5c /yen put}
if
def
/_fauxfont true def
} if
} ifelse
/WMode _wmode def
dup dup /FontName exch def
currentdict
end
definefont pop
}
{
pop
}
ifelse
/_pdf_FontDirectory 3 1 roll _safeput
}
bd
Level2?
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
selectfont
} bd
}
{
/Tf {
_pdf_FontDirectory 2 index 2 copy known
{get exch 3 -1 roll pop}
{pop pop}
ifelse
exch findfont exch
dup type /arraytype eq
{makefont}
{scalefont}
ifelse
setfont
} bd
}
ifelse
/cshow where
{
pop /pdf_cshow /cshow load dd
/pdf_remove2 {pop pop} dd
}
{
/pdf_cshow {exch forall} dd
/pdf_remove2 {} dd
} ifelse
/pdf_xshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_yshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
_pdf_x _pdf_y moveto
0 exch
rmoveto
}
ifelse
_pdf_i 1 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdf_xyshow
{
/_pdf_na xdd
/_pdf_i 0 dd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 /_pdf_showproc load exec
{_pdf_na _pdf_i get} stopped
{ pop pop }
{
{_pdf_na _pdf_i 1 add get} stopped
{ pop pop pop}
{
_pdf_x _pdf_y moveto
rmoveto
}
ifelse
}
ifelse
_pdf_i 2 add /_pdf_i xdd
currentpoint
/_pdf_y xdd
/_pdf_x xdd
}
exch
pdf_cshow
} bd
/pdfl1xs {/_pdf_showproc /show load dd pdf_xshow} bd
/pdfl1ys {/_pdf_showproc /show load dd pdf_yshow} bd
/pdfl1xys {/_pdf_showproc /show load dd pdf_xyshow} bd
Level2? _ColorSep5044? not and
{
/pdfxs {{xshow} stopped {pdfl1xs} if} bd
/pdfys {{yshow} stopped {pdfl1ys} if} bd
/pdfxys {{xyshow} stopped {pdfl1xys} if} bd
}
{
/pdfxs /pdfl1xs load dd
/pdfys /pdfl1ys load dd
/pdfxys /pdfl1xys load dd
} ifelse
/pdf_charpath {false charpath} bd
/pdf_xcharpath {/_pdf_showproc /pdf_charpath load dd pdf_xshow} bd
/pdf_ycharpath {/_pdf_showproc /pdf_charpath load dd pdf_yshow} bd
/pdf_xycharpath {/_pdf_showproc /pdf_charpath load dd pdf_xyshow} bd
/pdf_strokepath
{
{
pdf_remove2
_pdf_str1 exch 0 exch put
_pdf_str1 false charpath
currentpoint S moveto
} bind
exch pdf_cshow
} bd
/pdf_xstrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xshow} bd
/pdf_ystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_yshow} bd
/pdf_xystrokepath {/_pdf_showproc {pdf_charpath S} dd pdf_xyshow} bd
Level2? {currentglobal true setglobal} if
/d0/setcharwidth ld
/nND {{/.notdef} repeat} bd
/T3Defs {
/BuildChar
{
1 index /Encoding get exch get
1 index /BuildGlyph get exec
}
def
/BuildGlyph {
exch begin
GlyphProcs exch get exec
end
} def
/_pdfT3Font true def
} bd
/_pdfBoldRomanWidthProc
{
stringwidth 1 index 0 ne { exch .03 add exch }if setcharwidth
0 0
} bd
/_pdfType0WidthProc
{
dup stringwidth 0 0 moveto
2 index true charpath pathbbox
0 -1
7 index 2 div .88
setcachedevice2
pop
0 0
} bd
/_pdfType0WMode1WidthProc
{
dup stringwidth
pop 2 div neg -0.88
2 copy
moveto
0 -1
5 -1 roll true charpath pathbbox
setcachedevice
} bd
/_pdfBoldBaseFont
11 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/Encoding cHexEncoding def
/_setwidthProc /_pdfBoldRomanWidthProc load def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
pdf_has_composefont?
{
/_pdfBoldBaseCIDFont
11 dict begin
/CIDFontType 1 def
/CIDFontName /_pdfBoldBaseCIDFont def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_setwidthProc /_pdfType0WidthProc load def
/_bcstr2 2 string def
/BuildGlyph
{
exch begin
_basefont setfont
_bcstr2 1 2 index 256 mod put
_bcstr2 0 3 -1 roll 256 idiv put
_bcstr2 dup _setwidthProc
3 copy
moveto
show
_basefonto setfont
moveto
show
end
}bd
currentdict
end
def
/_pdfDefineIdentity-H
{
/Identity-H /CMap PDFText /pdf_resourcestatus get exec
{
pop pop
}
{
/CIDInit/ProcSet findresource begin 12 dict begin
begincmap
/CIDSystemInfo
3 dict begin
/Registry (Adobe) def
/Ordering (Identity) def
/Supplement 0 def
currentdict
end
def
/CMapName /Identity-H def
/CMapVersion 1 def
/CMapType 1 def
1 begincodespacerange
<0000> <ffff>
endcodespacerange
1 begincidrange
<0000> <ffff> 0
endcidrange
endcmap
CMapName currentdict/CMap defineresource pop
end
end
} ifelse
} def
} if
/_pdfVerticalRomanT3Font
10 dict begin
/FontType 3 def
/FontMatrix[1 0 0 1 0 0]def
/FontBBox[0 0 1 1]def
/_bcstr1 1 string def
/BuildChar
{
exch begin
_basefont setfont
_bcstr1 dup 0 4 -1 roll put
dup
_pdfType0WidthProc
moveto
show
end
}bd
currentdict
end
def
Level2? {setglobal} if
/MakeBoldFont
{
dup /ct_SyntheticBold known
{
dup length 3 add dict begin
CopyFont
/ct_StrokeWidth .03 0 FontMatrix idtransform pop def
/ct_SyntheticBold true def
currentdict
end
definefont
}
{
dup dup length 3 add dict
begin
CopyFont
/PaintType 2 def
/StrokeWidth .03 0 FontMatrix idtransform pop def
/dummybold currentdict
end
definefont
dup /FontType get dup 9 ge exch 11 le and
{
_pdfBoldBaseCIDFont
dup length 3 add dict copy begin
dup /CIDSystemInfo get /CIDSystemInfo exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefont exch def
/_Type0Identity /Identity-H 3 -1 roll [ exch ] composefont
/_basefonto exch def
currentdict
end
/CIDFont defineresource
}
{
_pdfBoldBaseFont
dup length 3 add dict copy begin
/_basefont exch def
/_basefonto exch def
currentdict
end
definefont
}
ifelse
}
ifelse
} bd
/MakeBold {
1 index
_pdf_FontDirectory 2 index 2 copy known
{get}
{exch pop}
ifelse
findfont
dup
/FontType get 0 eq
{
dup /WMode known {dup /WMode get 1 eq }{false} ifelse
version length 4 ge
and
{version 0 4 getinterval cvi 2015 ge }
{true}
ifelse
{/_pdfType0WidthProc}
{/_pdfType0WMode1WidthProc}
ifelse
_pdfBoldBaseFont /_setwidthProc 3 -1 roll load put
{MakeBoldFont} Type0CopyFont definefont
}
{
dup /_fauxfont known not 1 index /SubstMaster known not and
{
_pdfBoldBaseFont /_setwidthProc /_pdfBoldRomanWidthProc load put
MakeBoldFont
}
{
2 index 2 index eq
{ exch pop }
{
dup length dict begin
CopyFont
currentdict
end
definefont
}
ifelse
}
ifelse
}
ifelse
pop pop
dup /dummybold ne
{/_pdf_FontDirectory exch dup _safeput }
{ pop }
ifelse
}bd
/MakeItalic {
_pdf_FontDirectory exch 2 copy known
{get}
{exch pop}
ifelse
dup findfont
dup /FontInfo 2 copy known
{
get
/ItalicAngle 2 copy known
{get 0 eq }
{ pop pop true}
ifelse
}
{ pop pop true}
ifelse
{
exch pop
dup /FontType get 0 eq Level2? not and
{ dup /FMapType get 6 eq }
{ false }
ifelse
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1Type0 }
{ _italMtxType0 }
ifelse
}
{ pop pop _italMtxType0 }
ifelse
}
{
dup /WMode 2 copy known
{
get 1 eq
{ _italMtx_WMode1 }
{ _italMtx }
ifelse
}
{ pop pop _italMtx }
ifelse
}
ifelse
makefont
dup /FontType get 42 eq Level2? not or
{
dup length dict begin
CopyFont
currentdict
end
}
if
1 index exch
definefont pop
/_pdf_FontDirectory exch dup _safeput
}
{
pop
2 copy ne
{
/_pdf_FontDirectory 3 1 roll _safeput
}
{ pop pop }
ifelse
}
ifelse
}bd
/MakeBoldItalic {
/dummybold exch
MakeBold
/dummybold
MakeItalic
}bd
Level2?
{
/pdf_CopyDict
{1 index length add dict copy}
def
}
{
/pdf_CopyDict
{
1 index length add dict
1 index wcheck
{ copy }
{ begin
{def} forall
currentdict
end
}
ifelse
}
def
}
ifelse
/pdf_AddEuroGlyphProc
{
currentdict /CharStrings known
{
CharStrings /Euro known not
{
dup
/CharStrings
CharStrings 1 pdf_CopyDict
begin
/Euro pdf_EuroProcSet 4 -1 roll get def
currentdict
end
def
/pdf_PSBuildGlyph /pdf_PSBuildGlyph load def
/pdf_PathOps /pdf_PathOps load def
/Symbol eq Encoding 160 get /.notdef eq and
{
/Encoding Encoding dup length array copy
dup 160 /Euro put def
}
if
}
{ pop
}
ifelse
}
{ pop
}
ifelse
}
def
Level2? {currentglobal true setglobal} if
/pdf_PathOps 4 dict dup begin
/m {moveto} def
/l {lineto} def
/c {curveto} def
/cp {closepath} def
end
def
/pdf_PSBuildGlyph
{
gsave
8 -1 roll pop
7 1 roll
currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse
dup 9 1 roll
{
currentdict /StrokeWidth 2 copy known
{
get 2 div
5 1 roll
4 -1 roll 4 index sub
4 1 roll
3 -1 roll 4 index sub
3 1 roll
exch 4 index add exch
4 index add
5 -1 roll pop
}
{
pop pop
}
ifelse
}
if
setcachedevice
pdf_PathOps begin
exec
end
{
currentdict /StrokeWidth 2 copy known
{ get }
{ pop pop 0 }
ifelse
setlinewidth stroke
}
{
fill
}
ifelse
grestore
} def
/pdf_EuroProcSet 13 dict def
pdf_EuroProcSet
begin
/Courier-Bold
{
600 0 6 -12 585 612
{
385 274 m
180 274 l
179 283 179 293 179 303 c
179 310 179 316 180 323 c
398 323 l
423 404 l
197 404 l
219 477 273 520 357 520 c
409 520 466 490 487 454 c
487 389 l
579 389 l
579 612 l
487 612 l
487 560 l
449 595 394 612 349 612 c
222 612 130 529 98 404 c
31 404 l
6 323 l
86 323 l
86 304 l
86 294 86 284 87 274 c
31 274 l
6 193 l
99 193 l
129 77 211 -12 359 -12 c
398 -12 509 8 585 77 c
529 145 l
497 123 436 80 356 80 c
285 80 227 122 198 193 c
360 193 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-BoldOblique /Courier-Bold load def
/Courier
{
600 0 17 -12 578 584
{
17 204 m
97 204 l
126 81 214 -12 361 -12 c
440 -12 517 17 578 62 c
554 109 l
501 70 434 43 366 43 c
266 43 184 101 154 204 c
380 204 l
400 259 l
144 259 l
144 270 143 281 143 292 c
143 299 143 307 144 314 c
418 314 l
438 369 l
153 369 l
177 464 249 529 345 529 c
415 529 484 503 522 463 c
522 391 l
576 391 l
576 584 l
522 584 l
522 531 l
473 566 420 584 348 584 c
216 584 122 490 95 369 c
37 369 l
17 314 l
87 314 l
87 297 l
87 284 88 272 89 259 c
37 259 l
cp
600 0 m
}
pdf_PSBuildGlyph
} def
/Courier-Oblique /Courier load def
/Helvetica
{
556 0 24 -19 541 703
{
541 628 m
510 669 442 703 354 703 c
201 703 117 607 101 444 c
50 444 l
25 372 l
97 372 l
97 301 l
49 301 l
24 229 l
103 229 l
124 67 209 -19 350 -19 c
435 -19 501 25 509 32 c
509 131 l
492 105 417 60 343 60 c
267 60 204 127 197 229 c
406 229 l
430 301 l
191 301 l
191 372 l
455 372 l
479 444 l
194 444 l
201 531 245 624 348 624 c
433 624 484 583 509 534 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-Oblique /Helvetica load def
/Helvetica-Bold
{
556 0 12 -19 563 710
{
563 621 m
537 659 463 710 363 710 c
216 710 125 620 101 462 c
51 462 l
12 367 l
92 367 l
92 346 l
92 337 93 328 93 319 c
52 319 l
12 224 l
102 224 l
131 58 228 -19 363 -19 c
417 -19 471 -12 517 18 c
517 146 l
481 115 426 93 363 93 c
283 93 254 166 246 224 c
398 224 l
438 319 l
236 319 l
236 367 l
457 367 l
497 462 l
244 462 l
259 552 298 598 363 598 c
425 598 464 570 486 547 c
507 526 513 517 517 509 c
cp
556 0 m
}
pdf_PSBuildGlyph
} def
/Helvetica-BoldOblique /Helvetica-Bold load def
/Symbol
{
750 0 20 -12 714 685
{
714 581 m
650 645 560 685 465 685 c
304 685 165 580 128 432 c
50 432 l
20 369 l
116 369 l
115 356 115 347 115 337 c
115 328 115 319 116 306 c
50 306 l
20 243 l
128 243 l
165 97 300 -12 465 -12 c
560 -12 635 25 685 65 c
685 155 l
633 91 551 51 465 51 c
340 51 238 131 199 243 c
555 243 l
585 306 l
184 306 l
183 317 182 326 182 336 c
182 346 183 356 184 369 c
614 369 l 644 432 l
199 432 l
233 540 340 622 465 622 c
555 622 636 580 685 520 c
cp
750 0 m
}
pdf_PSBuildGlyph
} def
/Times-Bold
{
500 0 16 -14 478 700
{
367 308 m
224 308 l
224 368 l
375 368 l
380 414 l
225 414 l
230 589 257 653 315 653 c
402 653 431 521 444 457 c
473 457 l
473 698 l
444 697 l
441 679 437 662 418 662 c
393 662 365 700 310 700 c
211 700 97 597 73 414 c
21 414 l
16 368 l
69 368 l
69 359 68 350 68 341 c
68 330 68 319 69 308 c
21 308 l
16 262 l
73 262 l
91 119 161 -14 301 -14 c
380 -14 443 50 478 116 c
448 136 l
415 84 382 40 323 40 c
262 40 231 77 225 262 c
362 262 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-BoldItalic
{
500 0 9 -20 542 686
{
542 686 m
518 686 l
513 673 507 660 495 660 c
475 660 457 683 384 683 c
285 683 170 584 122 430 c
58 430 l
34 369 l
105 369 l
101 354 92 328 90 312 c
34 312 l
9 251 l
86 251 l
85 238 84 223 84 207 c
84 112 117 -14 272 -14 c
326 -14 349 9 381 9 c
393 9 393 -10 394 -20 c
420 -20 l
461 148 l
429 148 l
416 109 362 15 292 15 c
227 15 197 55 197 128 c
197 162 204 203 216 251 c
378 251 l
402 312 l
227 312 l
229 325 236 356 241 369 c
425 369 l
450 430 l
255 430 l
257 435 264 458 274 488 c
298 561 337 654 394 654 c
437 654 484 621 484 530 c
484 516 l
516 516 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Italic
{
500 0 23 -10 595 692
{
399 317 m
196 317 l
199 340 203 363 209 386 c
429 386 l
444 424 l
219 424 l
246 514 307 648 418 648 c
448 648 471 638 492 616 c
529 576 524 529 527 479 c
549 475 l
595 687 l
570 687 l
562 674 558 664 542 664 c
518 664 474 692 423 692 c
275 692 162 551 116 424 c
67 424 l
53 386 l
104 386 l
98 363 93 340 90 317 c
37 317 l
23 279 l
86 279 l
85 266 85 253 85 240 c
85 118 137 -10 277 -10 c
370 -10 436 58 488 128 c
466 149 l
424 101 375 48 307 48 c
212 48 190 160 190 234 c
190 249 191 264 192 279 c
384 279 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
/Times-Roman
{
500 0 10 -12 484 692
{
347 298 m
171 298 l
170 310 170 322 170 335 c
170 362 l
362 362 l
374 403 l
172 403 l
184 580 244 642 308 642 c
380 642 434 574 457 457 c
481 462 l
474 691 l
449 691 l
433 670 429 657 410 657 c
394 657 360 692 299 692 c
204 692 94 604 73 403 c
22 403 l
10 362 l
70 362 l
69 352 69 341 69 330 c
69 319 69 308 70 298 c
22 298 l
10 257 l
73 257 l
97 57 216 -12 295 -12 c
364 -12 427 25 484 123 c
458 142 l
425 101 384 37 316 37 c
256 37 189 84 173 257 c
335 257 l
cp
500 0 m
}
pdf_PSBuildGlyph
} def
end
Level2? {setglobal} if
currentdict readonly pop end
%%EndResource
PDFText begin
[39/quotesingle 96/grave 128/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis
/Udieresis/aacute/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute
/egrave/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde
/oacute/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex
/udieresis/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/.notdef/AE/Oslash
/.notdef/plusminus/.notdef/.notdef/yen/mu/.notdef/.notdef
/.notdef/.notdef/.notdef/ordfeminine/ordmasculine/.notdef/ae/oslash
/questiondown/exclamdown/logicalnot/.notdef/florin/.notdef/.notdef
/guillemotleft/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide
/.notdef/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright
/fi/fl/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex
/Idieresis/Igrave/Oacute/Ocircumflex/.notdef/Ograve/Uacute/Ucircumflex
/Ugrave/dotlessi/circumflex/tilde/macron/breve/dotaccent/ring/cedilla
/hungarumlaut/ogonek/caron
0 TE
[1/dotlessi/caron 39/quotesingle 96/grave 
127/bullet/Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis
/dagger/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE
/bullet/Zcaron/bullet/bullet/quoteleft/quoteright/quotedblleft
/quotedblright/bullet/endash/emdash/tilde/trademark/scaron
/guilsinglright/oe/bullet/zcaron/Ydieresis/space/exclamdown/cent/sterling
/currency/yen/brokenbar/section/dieresis/copyright/ordfeminine
/guillemotleft/logicalnot/hyphen/registered/macron/degree/plusminus
/twosuperior/threesuperior/acute/mu/paragraph/periodcentered/cedilla
/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply/Oslash
/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls/agrave
/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla/egrave/eacute
/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis/eth/ntilde
/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash/ugrave/uacute
/ucircumflex/udieresis/yacute/thorn/ydieresis
1 TE
end
%%BeginResource: procset pdfasc.prc 6.0 1
%%Copyright: Copyright 1992-2003 Adobe Systems Incorporated. All Rights Reserved.
/ASR {
13 dict begin
/mirV? exch def
/mirH? exch def
/center? exch def
/autorotate? exch def
/angle exch def
/shrink exch def
/Pury exch def
/Purx exch def
/Plly exch def
/Pllx exch def
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury 0 eq Durx 0 eq and Dlly 0 eq Dllx 0 eq and and
{ shrink 0 gt { GClipBBox } { GPageBBox } ifelse }
{ ITransDBBox }
ifelse
/PHt Pury Plly sub def
/PW Purx Pllx sub def
/DHt Dury Dlly sub def
/DW Durx Dllx sub def
angle 90 eq angle 270 eq or
{
PHt /PHt PW def /PW exch def
} if
autorotate? PHt PW ne and DHt DW ne and
{
DHt DW ge
PHt PW ge
ne
{ /angle angle 90 add def
PHt /PHt PW def /PW exch def
}
if
} if
angle 0 ne
{
/angle angle 360 mod def
angle rotate
angle 90 eq
{ 0 DW neg translate }
if
angle 180 eq
{ DW neg DHt neg translate }
if
angle 270 eq
{ DHt neg 0 translate }
if
} if
center?
{
ITransBBox
Durx Dllx add 2 div Dury Dlly add 2 div
Purx Pllx add -2 div Pury Plly add -2 div
3 -1 roll add exch
3 -1 roll add exch
translate
}
{
ITransBBox
angle 0 eq
{Dllx Pllx sub Dury Pury sub}
if
angle 90 eq
{Durx Purx sub Dury Pury sub}
if
angle 180 eq
{Durx Purx sub Dlly Plly sub}
if
angle 270 eq
{Dllx Pllx sub Dlly Plly sub}
if
translate
}
ifelse
mirH? mirV? or
{
ITransBBox
mirH?
{
-1 1 scale
Durx Dllx add neg 0 translate
} if
mirV?
{
1 -1 scale
0 Dury Dlly add neg translate
} if
} if
shrink 0 ne
{
ITransBBox
Dury Dlly sub Pury Plly sub div
Durx Dllx sub Purx Pllx sub div
2 copy gt { exch } if pop
shrink 1 eq
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{
shrink 2 eq 1 index 1.0 lt and
{
Durx Dllx add 2 div Dury Dlly add 2 div translate
dup scale
Purx Pllx add -2 div Pury Plly add -2 div translate
}
{ pop }
ifelse
}
ifelse
} if
end
} [/autorotate? /shrink? /mirH? /mirV? /angle /Pury /Purx /Plly /Pllx /Durx /Dury /Dllx /Dlly /PW /PHt /DW /DHt
/Devurx /Devury /Devllx /Devlly /pdfHt /pdfW]
bld
/GClipBBox
{
gsave newpath clippath pathbbox newpath grestore
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
ITransDBBox
} [/Durx /Dury /Dllx /Dlly]
bld
/GPageBBox
{
{
currentpagedevice /PageSize get aload pop
/Devury exch def /Devurx exch def
/Devllx 0 def /Devlly 0 def
ITransBBox
}
stopped
{ GClipBBox }
if
} [/Devurx /Devury /Devllx /Devlly ]
bld
/ITransDBBox
{
Durx Dury transform matrix defaultmatrix itransform
/Devury exch def
/Devurx exch def
Dllx Dlly transform matrix defaultmatrix itransform
/Devlly exch def
/Devllx exch def
Devury Devlly lt {/Devlly Devury /Devury Devlly def def} if
Devurx Devllx lt {/Devllx Devurx /Devurx Devllx def def} if
} [/Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
/ITransBBox
{
/um matrix currentmatrix matrix defaultmatrix matrix invertmatrix matrix concatmatrix def
Devllx Devlly um itransform
Devurx Devury um itransform
/Dury exch def
/Durx exch def
/Dlly exch def
/Dllx exch def
Dury Dlly lt {/Dlly Dury /Dury Dlly def def} if
Durx Dllx lt {/Dllx Durx /Durx Dllx def def} if
} [ /um /Durx /Dury /Dllx /Dlly /Devurx /Devury /Devllx /Devlly ]
bld
%%EndResource
currentdict readonly pop
end end
/currentpacking where {pop setpacking}if
PDFVars/DocInitAll{[PDF PDFText]{/docinitialize get exec}forall }put
PDFVars/InitAll{[PDF PDFText]{/initialize get exec}forall initgs}put
PDFVars/TermAll{[PDFText PDF]{/terminate get exec}forall}put
PDFVars begin PDF begin
PDFVars/DocInitAll get exec PDFVars/InitAll get exec

[/NamespacePush PDFMark5
[/_objdef {Metadata_In_EPS} /type /stream /OBJ PDFMark5
[{Metadata_In_EPS} 1245 (% &end XMP packet& %) ReadByPDFMark5
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<?adobe-xap-filters esc="CRLF"?>
<x:xmpmeta xmlns:x='adobe:ns:meta/' x:xmptk='XMP toolkit 2.9.1-13, framework 1.6'>
<rdf:RDF xmlns:rdf='http://www.w3.org/1999/02/22-rdf-syntax-ns#' xmlns:iX='http://ns.adobe.com/iX/1.0/'>
<rdf:Description rdf:about='uuid:598104ef-5a2e-45aa-a7fe-c6becabb38f4' xmlns:pdf='http://ns.adobe.com/pdf/1.3/' pdf:Producer='Acrobat Distiller 6.0 (Windows)'></rdf:Description>
<rdf:Description rdf:about='uuid:598104ef-5a2e-45aa-a7fe-c6becabb38f4' xmlns:xap='http://ns.adobe.com/xap/1.0/' xap:CreateDate='2006-10-29T22:08:22-10:00' xap:CreatorTool='PScript5.dll Version 5.2' xap:ModifyDate='2006-10-29T22:09:27-10:00' xap:MetadataDate='2006-10-29T22:09:27-10:00'></rdf:Description>
<rdf:Description rdf:about='uuid:598104ef-5a2e-45aa-a7fe-c6becabb38f4' xmlns:xapMM='http://ns.adobe.com/xap/1.0/mm/' xapMM:DocumentID='uuid:f125ee9a-eeed-4419-8353-ad5ad3ab2fe0'/>
<rdf:Description rdf:about='uuid:598104ef-5a2e-45aa-a7fe-c6becabb38f4' xmlns:dc='http://purl.org/dc/elements/1.1/' dc:format='application/pdf'><dc:title><rdf:Alt><rdf:li xml:lang='x-default'>Visio-Heuristic.vsd</rdf:li></rdf:Alt></dc:title><dc:creator><rdf:Seq><rdf:li>hongbing</rdf:li></rdf:Seq></dc:creator></rdf:Description>
</rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Metadata_In_EPS} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT PDFMark5
[/Document 1 dict begin /Metadata {Metadata_In_EPS} def currentdict end /BDC PDFMark5
[/NamespacePop PDFMark5

PDFVars/TermAll get exec end end

%%EndSetup
 PDF /docinitialize get exec
PDFVars begin PDF begin PDFVars/InitAll get exec
72 189 351 252 rectclip
/N13 [/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/ColorSpace defineRes pop

/N35 <</PatternType 1 /PaintType 1 /TilingType 1 /XStep 64.0 /YStep 64.0
/BBox [0.0 0.0 64.0 64.0]
/PaintProc {pop 
q
64.0 0.0 0.0 -64.0 -0.000001 64.0 cm
q
n
0.0 0.0 m
1.0 0.0 l
1.0 1.0 l
0.0 1.0 l
h
q
W
[/Indexed /N13 /ColorSpace findRes 1
<~rr<'!s8N~>]
cs 
<<
/ImageType 1
/Width 64
/Height 64
/ImageMatrix [64.0 0.0 0.0 -64.0 0.0 64.0] 
/BitsPerComponent 8
/Decode [0.0 255.0 ] 
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<~!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#~>
<~!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#~>
} _i 2 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 >>
image
Q
n
Q
Q
} bind >> /PatternPrototype defineRes pop

/N40 <</PatternType 1 /PaintType 1 /TilingType 1 /XStep 64.0 /YStep 64.0
/BBox [0.0 0.0 64.0 64.0]
/PaintProc {pop 
q
64.0 0.0 0.0 -64.0 -0.000001 64.0 cm
q
n
0.0 0.0 m
1.0 0.0 l
1.0 1.0 l
0.0 1.0 l
h
q
W
[/Indexed /N13 /ColorSpace findRes 1
<~!<3'!s8N~>]
cs 
<<
/ImageType 1
/Width 64
/Height 64
/ImageMatrix [64.0 0.0 0.0 -64.0 0.0 64.0] 
/BitsPerComponent 8
/Decode [0.0 255.0 ] 
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<~!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$~>
<~!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!!**$
!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$!!**$
!!**$!!**$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$!<E0$
!<E0$!<E0$!<E0$!<E0$!<E0$~>
} _i 2 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 >>
image
Q
n
Q
Q
} bind >> /PatternPrototype defineRes pop

/N43 <</PatternType 1 /PaintType 1 /TilingType 1 /XStep 64.0 /YStep 64.0
/BBox [0.0 0.0 64.0 64.0]
/PaintProc {pop 
q
64.0 0.0 0.0 -64.0 -0.000001 64.0 cm
q
n
0.0 0.0 m
1.0 0.0 l
1.0 1.0 l
0.0 1.0 l
h
q
W
[/Indexed /N13 /ColorSpace findRes 1
<~!<3'!s8N~>]
cs 
<<
/ImageType 1
/Width 64
/Height 64
/ImageMatrix [64.0 0.0 0.0 -64.0 0.0 64.0] 
/BitsPerComponent 8
/Decode [0.0 255.0 ] 
/DataSource
1 dict begin /_i 0 def currentdict end mark exch { begin {
<~!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#~>
<~!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!!*'#
!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#!!*'#
!!*'#!!*'#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#!<<-#
!<<-#!<<-#!<<-#!<<-#!<<-#~>
} _i 2 eq{ /_i 0 def pop ()}{_i get /_i _i 1 add def} ifelse
end } bind aload pop ] cvx
 >>
image
Q
n
Q
Q
} bind >> /PatternPrototype defineRes pop

72.0 189.0 351.0 252.0 re
W
n
n
162.419998 421.559998 m
162.419998 398.880005 l
79.32 399.0 l
79.379997 421.73999 l
162.419998 421.559998 l
/N35 /PatternPrototype findRes 
gsave
[0.72 0.0 0.0 -0.72 0.0 792.0] concat
matrix makepattern
grestore
setpattern
eofill
1 J
1 j
0.72 w
n
162.419998 421.559998 m
162.419998 398.880005 l
79.32 399.0 l
79.379997 421.73999 l
162.419998 421.559998 l
h
[/CIEBasedABC 20 dict
dup /CreationDate (19980209064900) put
dup /RenderingIntent (RelativeColorimetric) put
dup /Description (sRGB IEC61966-2.1) put
dup /ColorSpace (RGB ) put
dup /Copyright (Copyright (c) 1998 Hewlett-Packard Company) put
dup /ProfileID <1D3FDA2EDB4A89AB60A23C5F7C7D81DD> put
dup /DecodeABC [
{{0 0.00031 0.00061 0.0009 0.0012 0.00151 0.00181 0.00212 0.00242 0.00271
0.00302 0.00334 0.00366 0.00401 0.00437 0.00476 0.00515 0.00558 0.00602 0.00648
0.00696 0.00745 0.00798 0.00852 0.00908 0.00966 0.01027 0.01089 0.01153 0.0122
0.0129 0.01362 0.01435 0.01511 0.01589 0.0167 0.01752 0.01837 0.01925 0.02015
0.02107 0.02203 0.02299 0.02399 0.02501 0.02606 0.02713 0.02822 0.02934 0.03049
0.03166 0.03287 0.03409 0.03533 0.03662 0.03792 0.03925 0.04061 0.04199 0.04341
0.04484 0.04631 0.04781 0.04933 0.05088 0.05245 0.05406 0.05569 0.05736 0.05904
0.06077 0.06252 0.0643 0.06611 0.06794 0.06981 0.0717 0.07363 0.07558 0.07756
0.07959 0.08162 0.0837 0.08581 0.08795 0.09011 0.09231 0.09454 0.0968 0.09909
0.10142 0.10376 0.10616 0.10857 0.11102 0.11351 0.11602 0.11856 0.12114 0.12376
0.12639 0.12907 0.13178 0.13452 0.13729 0.14009 0.14294 0.14581 0.14873 0.15166
0.15463 0.15765 0.16068 0.16376 0.16687 0.17001 0.17319 0.17641 0.17965 0.18293
0.18625 0.1896 0.19299 0.19641 0.19987 0.20335 0.20688 0.21045 0.21405 0.21767
0.22134 0.22505 0.22879 0.23257 0.23638 0.24023 0.24411 0.24804 0.25199 0.25599
0.26002 0.26409 0.2682 0.27234 0.27651 0.28073 0.28499 0.28928 0.29361 0.29798
0.30238 0.30683 0.3113 0.31582 0.32038 0.32497 0.3296 0.33428 0.33898 0.34372
0.34851 0.35333 0.3582 0.3631 0.36804 0.37302 0.37804 0.3831 0.38819 0.39333
0.3985 0.40372 0.40898 0.41427 0.41961 0.42498 0.43039 0.43585 0.44134 0.44688
0.45245 0.45806 0.46372 0.46942 0.47516 0.48094 0.48675 0.49261 0.49851 0.50445
0.51043 0.51646 0.52253 0.52863 0.53477 0.54097 0.54719 0.55347 0.55979 0.56613
0.57253 0.57897 0.58545 0.59198 0.59855 0.60515 0.6118 0.61849 0.62524 0.63201
0.63884 0.6457 0.6526 0.65955 0.66654 0.67357 0.68066 0.68778 0.69495 0.70215
0.7094 0.71669 0.72404 0.73142 0.73885 0.74632 0.75383 0.76138 0.76899 0.77663
0.78433 0.79206 0.79983 0.80765 0.81552 0.82343 0.83139 0.8394 0.84744 0.85554
0.86367 0.87185 0.88007 0.88835 0.89666 0.90503 0.91343 0.92189 0.93038 0.93892
0.94751 0.95614 0.96482 0.97355 0.98232 0.99114 1}
dup 3 -1 roll 0 1 3 copy 3 -1 roll exch ge
{pop pop pop pop pop 256 get}
{pop 3 copy pop le {pop pop pop pop 0 get}
{exch dup 4 -1 roll exch sub 3 1 roll sub div 256 mul dup
floor dup 3 1 roll sub exch cvi dup 1 add 4 -1 roll exch
get 4 -1 roll 3 -1 roll get dup 4 1 roll sub mul add}
ifelse} ifelse
} bind
dup
dup
] put
dup /MatrixABC [
0.2180189128 0.1112492942 0.0069565698
0.1925612492 0.358452993 0.0485281768
0.0715286348 0.0303053423 0.3569742448
] put
dup /MatrixLMN [1.9999694824 0 0 0 1.9999694824 0 0 0 1.9999694824] put
dup /BlackPoint [0 0 0] put
dup /WhitePoint [0.9642028809 1 0.8249053955] put]
/E397 exch /ColorSpace defineRes

cs 0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
%ADOBeginSubsetFont: ArialMT Initial
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /ArialMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {0 0 0 0} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
[/N11/ArialMT 1 TZ
86.520004 406.800018 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7D8BE16D2C1CA7ED2E06F707C0E9530AE37D06FF7501A595D
3927> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 84 /T put
pop
%ADOEndSubsetFont
/N11 [11.999298 -0.020905 0.020905 11.999298 0.0 0.0] Tf
(T) show
93.8396 406.800476 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7EF322472FA01213C7AD90A23B536C2309DD40D370E2449B0
D0FEF85A6BE8067F30686F143E75903EB6FA56935472EF47CE3F33433C2F0C8B
6FA51573AE54B2C516F6F024F8775AD6639544E339FC2A328548BCBFD58B0EEA
03B7DC3AB069F44477958BFBFAAC7196D411DF9BE0B78A86C4BC33EC5D7C3729
5284C077711C162623860AACA404F650F8D516970257> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
(e) show
100.49913 406.740875 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/s <1C60D8A8C9B7A73DA057E90C9BFBE0FE301E99CB771FA2F05368A6342B5F
80456D91458EA2F3CAD55CDF89BFF34EEB39D7DD325B057E2BF0E9B878C214E2
BD1BD70DCABE10E0DC8EBCF7B100B55EBE94FB0F17084E21EBD279B324AEABD9
6538911D053BE9D7ECBF43F934B1033C9E405BBE31E7EDB643609C8D779046E1
B250C3CF05E6FA4787649137D90F47F85972A6603BA900DD7CB710E02662DB32
87CB26D7B7AE794611498865FC85A28083D2F6C2DEC302D47619A4A577C5B843
5558FCFE71A1BB6783AFD5F58B6D2C03593B3F2297A66A7E6D13C1E321C57F41
72D53C8FCAF4D28F2B78D3A4BF03> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 115 /s put
pop
%ADOEndSubsetFont
(s) show
106.498795 406.741211 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/t <1C60D8A8C9B854D0F45CF665C7276F8075B54A4ECD6470F395A458CA2D06
5152075036EEECA213894C1EA0DACFBD370590F4B831924E5BDA5281442349CF
AD2545E0750C3004A129C25B1EAA8DEF5DA8BF1998E80AE266F591E64CB5127F
5C42C88FB43C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 116 /t put
pop
%ADOEndSubsetFont
(t) show
109.858612 406.741364 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C3A78A5675B101A923F2D2A8AB56C> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
(-) show
113.878387 406.741547 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/l <1C60D8A8C9B88C08722AD20D19A90F9064193C8D82> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 108 /l put
pop
%ADOEndSubsetFont
(l) show
116.51825 406.74176 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B7EF32244AC11AA6BAAA29EE8C78E0E7206F4A2776A2D1EA7D
C8D9A28C62ADE3B609CF5E2EE23C64D0B75055BD249ADFEC7B4224D040D883CA
6747571955349CF8AD17E94E6FE5D0259F4D55623D4DC5C3CB4AC64A7A87DBBA
48B7420D7990F3C261DB9838C5B90BF72B82C8238A1A58FE8E6137AAFE2405FD
710F7ADB95B4F576668A6DB104942C88ED8C339BD78AF728DB2916FC74DD74C7
9942CE092A68BDC296553CDE10F01A05D2DEAC7F72D8B1533BA9F1804E12A7AC
722A8F562956D5A9884DE76BDFFB0920754E5122C8F7DA6A7FA5CADB2CD191F5
FF4EBD935D2603160BD9773627504BFDEC8A7B64E9DDD2D336730FA67FFE0A40
AC25E3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
(a) show
123.177872 406.742157 m
(s) show
129.177536 406.742493 m
(t) show
q
n
352.919983 420.179993 m
417.839996 420.059998 l
417.839996 439.079987 l
352.919983 439.200012 l
eoclip
n
n
417.779999 439.019989 m
417.779999 420.119995 l
352.97998 420.23999 l
352.97998 439.139984 l
417.779999 439.019989 l
eoclip
n
n
509.700012 438.899994 m
509.700012 453.779999 468.600006 465.899994 417.899994 465.959991 c
367.200012 466.079987 326.100006 454.079987 326.039978 439.259979 c
326.039978 424.380005 367.079987 412.259979 417.839996 412.139984 c
468.539978 412.079987 509.639984 424.079987 509.700012 438.899994 c
eoclip
n
n
352.919983 420.089996 64.859985 19.079987 re
f
q
65.272751 0.0 0.0 19.259998 352.859985 420.000031 cm
1.0 1.0 1.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 272
/Height 81
/ImageMatrix [272.0 0.0 0.0 -81.0 0.0 81.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 272 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask -D7dTs8W-!s8W-!s8W-!s8W-!s8W-!J-Z.*$3~>

Q
Q
Q
%ADOBeginSubsetFont: Arial-BoldMT Initial
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /Arial-BoldMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 0 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
def
/FontBBox {0 0 0 0} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
1 dict dup begin
/.notdef <1C60D8A8C9B6E3FA5101D97F0BCF44F7161DEB1E2A84766DD477E7
C8A936AA182F5809A9> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
[/N12/Arial-BoldMT 1 TZ
360.0 426.059998 m
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/Arial-BoldMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/T <1C60D8A8C9B7D8BE19809EC35BBBBC4A9DCDD5AC6ABFFD5901D001A83F8C
D3372E99> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/Arial-BoldMT findfont /Encoding get
dup 84 /T put
pop
%ADOEndSubsetFont
/N12 [11.999298 -0.020905 0.020905 11.999298 0.0 0.0] Tf
(T) show
367.319611 426.060455 m
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/Arial-BoldMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B6FF86F52F235E29DFABF84E30A9E11A138D00DABF3BDDD9B3
E7FC257212EAD90E7CB4DBFFD0700E703890A66311DAD24CF380C3C480> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/Arial-BoldMT findfont /Encoding get
dup 119 /w put
pop
%ADOEndSubsetFont
(w) show
376.679108 426.060944 m
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/Arial-BoldMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B7D8BE34A30C11766266259B98A0BA89715D82F7092153A622
8252D7594BDD75B2A7C57DC89088F8B1FFC43993725AE434A67B356F5F6B64D5
28A1696640F00DD016EBC232B8C863EA85B4B724E805002B9447A61792050E5F
2AB51B8800BF6303526C74FB360B7027D54FFCEDAF13BF8EA7CB1A81691C0A4F
B25E1EA64C0904433C6A5F35BBF9DD5C4CBFC1A5> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/Arial-BoldMT findfont /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
(o) show
383.998718 426.061401 m
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/Arial-BoldMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/hyphen <1C60D8A8C9B81F2C3A6131F04EDA09D4A0094DA9D5AC81D0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/Arial-BoldMT findfont /Encoding get
dup 45 /hyphen put
pop
%ADOEndSubsetFont
(-) show
388.018494 426.061584 m
(w) show
397.319061 426.000977 m
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/Arial-BoldMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/a <1C60D8A8C9B7EF322B767253CD3BE18E6883E9BFEE680E471A3E543E6B62
9FFE599C78BF6E9BC360B4FD3F4193BE88F8A133134BAA650EBC31A9DBCA73D4
43463241F1A95A036612031AED6950283B0D14D29C497685C55C7946BF118B40
E370FC30C35C6DDC0B89863AEC8E7000DED8B394346462262BD43999923C02BB
76E45D38F5FACA7247DBA2EBA6371EEFDE7DB20E4C849532AD601D5E173F1D18
8FE21B59BC4F7D31E2888063AF07346F130F63B08DDF6E64D185ED0A9B6E9CDF
61876470E8EEDF74D22C009ED4E9E4309ADA897BACFA19FF9D9A39BF5E4C8C09
48ED0FBBA814A39FAF9E13FB561E06> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/Arial-BoldMT findfont /Encoding get
dup 97 /a put
pop
%ADOEndSubsetFont
(a) show
404.038696 426.001282 m
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/Arial-BoldMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/y <1C60D8A8C9B7EF322B7536945647B4BA07C8DC342FF58A782AE941212DA9
36B500226D637B658433D28B8CA55D32CD6B9B1269E0231AED7EEAE92EA48D1A
B958BAD61D13401B6A794D4ED73191B8ADB547A985247846F2CB1E080C4F3C74
337DE0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/Arial-BoldMT findfont /Encoding get
dup 121 /y put
pop
%ADOEndSubsetFont
(y) show
q
n
201.720001 423.959991 m
266.639984 423.839996 l
266.639984 439.319977 l
201.720001 439.440002 l
eoclip
n
n
266.579987 439.259979 m
266.579987 423.899994 l
201.779999 424.019989 l
201.779999 439.380005 l
266.579987 439.259979 l
eoclip
n
n
358.5 439.200012 m
358.5 451.259979 317.399994 461.160004 266.700012 461.220001 c
216.0 461.279999 174.900009 451.559998 174.839996 439.5 c
174.839996 427.440002 215.940002 417.539978 266.639984 417.47998 c
317.339996 417.359985 358.440002 427.079987 358.5 439.200012 c
eoclip
n
n
201.720001 423.869995 64.860016 15.540009 re
f
q
65.272751 0.0 0.0 15.719997 201.659988 423.780029 cm
1.0 1.0 1.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 272
/Height 66
/ImageMatrix [272.0 0.0 0.0 -66.0 0.0 66.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 272 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask -D7dTs8W-!s8W-!s8W-!s8W-!huWm$$3~>

Q
Q
Q
209.159988 428.100006 m
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/Arial-BoldMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B6FF86F5F3A19921C3FE187E6183EB941A461BFDF48896B01C
539BA03B9A71268054FD539295016B775957F73BDDB654AA6712BF7E0C40F4AC
922FE0B288CD70E18C4E1C889841E3AE3271A7D86FE908FD4A3BC0FE2CC8F051
210EDBAF3FCCF42B66137993282D8903C68179D39C68CF2DDA978A8EFE5F0928
4C45B6203BE9537D93C8C7D651EB9110B223AA11E17568> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/Arial-BoldMT findfont /Encoding get
dup 79 /O put
pop
%ADOEndSubsetFont
(O) show
218.459473 428.100616 m
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/Arial-BoldMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B7D8BE193B13518E6892DBA9B266D0A17D5C8CBB8FCA3DEC31
FFDE21FB19188C5C709BB859EE16635D8123C09E9F6380448F624FEDEAFC78CB
8E4436A865BB0CB81152FE1F90E6EB1DE7D9B62F15D5F2855507D6B695B1CC6A
FD11F003818163793142F6A0F46BD84EFADF> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/Arial-BoldMT findfont /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
(n) show
225.839066 428.100952 m
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/Arial-BoldMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/e <1C60D8A8C9B7EF322BF270AB151730C1576B3DBF6DAC6B05EF7C7C2AC355
0E4D7D76EEB5EC00E2AE0B63EA674701E41362C9EF4C943E6044930A81C0288C
730E9CD4222EC82D37FE43450E9A846C17FEBAA9742B3180B655FFA4E0E014EF
214E09E7DE6E45A7476C6DEA21B47E198DDC2AD648DA39E6CBF2981071855AA9
4524E4E0809AB2B25573430347DD> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/Arial-BoldMT findfont /Encoding get
dup 101 /e put
pop
%ADOEndSubsetFont
(e) show
232.498703 428.101349 m
(-) show
236.458481 428.101654 m
(w) show
245.819061 428.042145 m
(a) show
252.478699 428.042542 m
(y) show
q
n
79.259995 376.259979 m
162.419998 376.079987 l
162.479996 398.940002 l
79.259995 399.059998 l
eoclip
n
n
162.419998 398.880005 m
162.360001 376.139984 l
79.32 376.319977 l
79.32 399.0 l
162.419998 398.880005 l
eoclip
n
n
280.139984 398.700012 m
280.139984 416.579987 227.519989 431.100006 162.539993 431.220001 c
97.559998 431.339996 44.82 416.940002 44.82 399.119995 c
44.759998 381.300018 97.439995 366.779999 162.419998 366.660004 c
227.400009 366.539978 280.079987 380.880005 280.139984 398.700012 c
eoclip
n
n
79.32 376.109985 83.099998 22.920013 re
f
q
83.340004 0.0 0.0 23.1 79.199989 376.02002 cm
1.0 1.0 1.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 482
/Height 281
/ImageMatrix [481.999969 0.0 0.0 -281.0 0.0 281.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 482 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask -D5)l?iU0+s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8V!Y!$DU~>

Q
Q
Q
n
162.419998 398.880005 m
162.360001 376.139984 l
79.32 376.319977 l
79.32 399.0 l
162.419998 398.880005 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
86.460007 384.059998 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/R <1C60D8A8C9B6079F62E89B521DCDBE3DC5497B8DD99916239C0DFA5ED4F6
32B33575F4260343AF5DB7D477D12055F49C5E99C0AC176EAD42723223937F2B
A15ECAD7751CB6A136B700EE485E38E7CDB87D9465C90BB8E29B04FDDA42609F
BC3833B9FB5105619F4CC434003085F449D9FD5022725306B331FB97B31D2952
57B180DE1FD5465D256CCA19301DA97326882845130A5257BF61307ABA64C3F0
B222> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 82 /R put
pop
%ADOEndSubsetFont
/N11 [11.999298 -0.020905 0.020905 11.999298 0.0 0.0] Tf
(R) show
95.159515 384.060455 m
(e) show
101.819153 384.060852 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/f <1C60D8A8C9B854D0F47057B2F13303E258FCAEE9E8BBA6E28BB76AD7C9AC
375C57E63FD93AA7EEFE0B415129EF1D4FCA22C92A40BF74338947AB5FDA350C
84006AAFD35679D1D46B6CDD7DB92B5F8282A6F8D013A8A4A9> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 102 /f put
pop
%ADOEndSubsetFont
(f) show
105.17897 384.061005 m
(a) show
111.838593 384.061401 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/c <1C60D8A8C9B7A73DB9D8FD6AA4FBAF8D65C36EA1D4AADBD389F972C0EDCE
9E7F36285FA93A80D3647871D2CE5AAAA6A6A370DC54E1595FB6AAB3E389C9F7
BBBB85F787D6C418B35B940450E5E243895ECFD2205F51B2D154CFFECF34148C
344C1EF806F9AAF539FB961E3EFAF6353381E833DF7C0542FFF27122A28D3654
8FE63FC8465B1B685766E782F0> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 99 /c put
pop
%ADOEndSubsetFont
(c) show
117.838165 384.00174 m
(t) show
121.137985 384.001984 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/o <1C60D8A8C9B7EF32334FFE7884F6C3B903D000D9FD76C2EAE8EDCCA90A98
7875625CA0393015EF6761BE1C3B6D9E9DA4BABE1DD313B783BCBF8F620C846C
7F6361946173FB7A4A6BF94EAA0CB4947DD1974AF371F3C211E584576DE9AD79
F9DA988E9E531810E3876F3029BB1D2ED366525F30E48DD7CE3C9B66C5CC099F
518C54BB58C51D6FB6D0C8> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 111 /o put
pop
%ADOEndSubsetFont
(o) show
127.857605 384.002289 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/r <1C60D8A8C9B81F2C3A9694980E415F1DEF5C498473095A24D1BE11285789
4FEA85DB28AD762FB8D2F4CAC5BF8B9C18D8A2DFCF155E0751AF58898A6619AD
D420F549AB7C795751D32E8EE6> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 114 /r put
pop
%ADOEndSubsetFont
(r) show
131.817383 384.002594 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/i <1C60D8A8C9B88C087228DFC7C7ABCC71B868F57EDB285655227000619B17
1C8A80AB> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 105 /i put
pop
%ADOEndSubsetFont
(i) show
134.517227 384.002686 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/n <1C60D8A8C9B7EF322B3BE19FB964E04D2DB06D4930CA5D8F41D2EF3A285C
0BD536CD2C57668EB9E30311BF9A2872DFB44F2BF2A4683B5D66FA01BB1CCDAD
E9C8A9EE2CB010715D3D6DFF0E843CF77C87A07D1DBD0482675E3CA1DAA2A520
3A8015DD09B7CE> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 110 /n put
pop
%ADOEndSubsetFont
(n) show
141.176865 384.003082 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/g <1C60D8A8C9B7EF322851D9960AE993FFFAEAEBBA8EF734FCE7E65DE817A0
65D42CB79E2F25620DE08D5E215259551032CAAB8B64DC091B23609C94686805
FCD1002A05D2F3A503C856DC13846572185F42FF2BFD9F15BF0ACDA6574C955F
4076A04EF5053C599BB967219E83E503007603274168A1AC27F860CC431F353A
8DF99E768322FA497DD6D6041A10F21485F35F6B6BC8593BF71444B3EA7925C3
D02204444D7AC4083F26AB950EAFA977F5BEA7ACE2F891389A8350A12D33EF2F
505F4D273E961ABD61591D772170> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 103 /g put
pop
%ADOEndSubsetFont
(g) show
q
n
79.200005 353.519989 m
162.360001 353.399994 l
162.419998 376.200012 l
79.259995 376.380005 l
eoclip
n
n
162.360001 376.139984 m
162.300003 353.459991 l
79.259995 353.579987 l
79.32 376.319977 l
162.360001 376.139984 l
eoclip
n
n
280.079987 376.019989 m
280.139984 393.839996 227.459991 408.419983 162.479996 408.47998 c
97.5 408.600006 44.82 394.259979 44.759998 376.440002 c
44.759998 358.619995 97.379997 344.039978 162.360001 343.919983 c
227.339996 343.800018 280.079987 358.200012 280.079987 376.019989 c
eoclip
n
n
79.259995 353.429993 83.099991 22.920013 re
f
q
83.340004 0.0 0.0 23.1 79.139992 353.340027 cm
1.0 1.0 1.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 482
/Height 281
/ImageMatrix [481.999969 0.0 0.0 -281.0 0.0 281.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 482 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask -D5)l?iU0+s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8V!Y!$DU~>

Q
Q
Q
n
162.360001 376.139984 m
162.300003 353.459991 l
79.259995 353.579987 l
79.32 376.319977 l
162.360001 376.139984 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
86.460007 361.380005 m
(R) show
95.099533 361.380554 m
(e) show
101.759064 361.320953 m
(f) show
105.118881 361.321106 m
(a) show
111.778503 361.321503 m
(c) show
117.778183 361.321838 m
(t) show
121.138 361.321991 m
(o) show
127.797623 361.322388 m
(r) show
131.817398 361.322571 m
(i) show
134.457153 361.262787 m
(n) show
141.116791 361.263184 m
(g) show
q
n
79.139999 330.839996 m
162.360001 330.720001 l
162.360001 353.519989 l
79.200005 353.639984 l
eoclip
n
n
162.300003 353.459991 m
162.300003 330.779999 l
79.200005 330.899994 l
79.259995 353.579987 l
162.300003 353.459991 l
eoclip
n
n
280.019989 353.339996 m
280.079987 371.160004 227.400009 385.679993 162.419998 385.800018 c
97.439995 385.919983 44.759998 371.579987 44.759998 353.700012 c
44.700001 335.880005 97.379997 321.359985 162.360001 321.23999 c
227.339996 321.119995 280.019989 335.459991 280.019989 353.339996 c
eoclip
n
n
79.200005 330.75 83.099998 22.859985 re
f
q
83.399994 0.0 0.0 23.1 79.079994 330.600037 cm
1.0 1.0 1.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 482
/Height 281
/ImageMatrix [481.999969 0.0 0.0 -281.0 0.0 281.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 482 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask -D5)l?iU0+s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8V!Y!$DU~>

Q
Q
Q
n
162.300003 353.459991 m
162.300003 330.779999 l
79.200005 330.899994 l
79.259995 353.579987 l
162.300003 353.459991 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
86.400009 338.639984 m
(R) show
95.039536 338.640533 m
(e) show
101.759155 338.640839 m
(f) show
105.058975 338.641083 m
(a) show
111.718613 338.641479 m
(c) show
117.718277 338.641815 m
(t) show
121.077988 338.58197 m
(o) show
127.737625 338.582367 m
(r) show
131.757401 338.58255 m
(i) show
134.397247 338.582764 m
(n) show
141.116882 338.583069 m
(g) show
q
n
79.139999 308.100006 m
162.300003 307.97998 l
162.360001 330.839996 l
79.139999 330.959991 l
eoclip
n
n
162.300003 330.779999 m
162.23999 308.039978 l
79.200005 308.160004 l
79.200005 330.899994 l
162.300003 330.779999 l
eoclip
n
n
280.019989 330.600006 m
280.019989 348.419983 227.400009 363.0 162.419998 363.119995 c
97.439995 363.179993 44.700001 348.839996 44.700001 331.019989 c
44.639999 313.200012 97.32 298.619995 162.300003 298.5 c
227.279999 298.440002 279.959991 312.779999 280.019989 330.600006 c
eoclip
n
n
79.200005 308.009979 83.099998 22.920013 re
f
q
83.340004 0.0 0.0 23.1 79.079994 307.920013 cm
1.0 1.0 1.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 482
/Height 281
/ImageMatrix [481.999969 0.0 0.0 -281.0 0.0 281.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 482 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask -D5)l?iU0+s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8V!Y!$DU~>

Q
Q
Q
n
162.300003 330.779999 m
162.23999 308.039978 l
79.200005 308.160004 l
79.200005 330.899994 l
162.300003 330.779999 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
86.339996 315.959991 m
(T) show
93.659592 315.960449 m
(e) show
100.379227 315.960754 m
(s) show
106.378784 315.901093 m
(t) show
109.678604 315.901337 m
(-) show
113.69838 315.90152 m
(a) show
120.358017 315.901917 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/d <1C60D8A8C9B7EF322407C6655A1B3652DB8522EB511BE6B0855A72D96214
58876CAD1FA22A00635F436A34E23EAFC09C394044ECC1389CD99E4AF1C1F6DD
52305C78619784840FC37A805B0805EF290BC9E049CF068290816CB7E74DB612
941355BCE71CBDD11DD0F9CA29531036ED13EFB9CAB613E9F630FBBC9408EF13
CE4683D92968530F64760C3DF85C7C7EA06EBA8BF859> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 100 /d put
pop
%ADOEndSubsetFont
(d) show
127.017639 315.902313 m
(d) show
133.737274 315.902618 m
(i) show
136.377121 315.902832 m
(t) show
139.736832 315.842987 m
(i) show
142.376678 315.843201 m
(o) show
149.036316 315.843597 m
(n) show
q
n
79.080002 285.419983 m
162.300003 285.300018 l
162.300003 308.100006 l
79.139999 308.220001 l
eoclip
n
n
162.23999 308.039978 m
162.23999 285.359985 l
79.139999 285.47998 l
79.200005 308.160004 l
162.23999 308.039978 l
eoclip
n
n
279.959991 307.919983 m
280.019989 325.73999 227.339996 340.259979 162.360001 340.380005 c
97.379997 340.5 44.700001 326.160004 44.639999 308.279999 c
44.639999 290.459991 97.259995 275.940002 162.23999 275.820007 c
227.220001 275.700012 279.959991 290.040009 279.959991 307.919983 c
eoclip
n
n
79.139999 285.329987 83.099991 22.859985 re
f
q
83.340004 0.0 0.0 23.040001 79.019989 285.240021 cm
1.0 1.0 1.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 482
/Height 281
/ImageMatrix [481.999969 0.0 0.0 -281.0 0.0 281.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 482 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask -D5)l?iU0+s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8V!Y!$DU~>

Q
Q
Q
n
162.23999 308.039978 m
162.23999 285.359985 l
79.139999 285.47998 l
79.200005 308.160004 l
162.23999 308.039978 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
86.339996 293.28009 m
(T) show
93.659485 293.220551 m
(e) show
100.319122 293.220947 m
(s) show
106.318787 293.221283 m
(t) show
109.678604 293.221436 m
(-) show
113.638382 293.221741 m
(a) show
120.298019 293.222137 m
(d) show
127.017548 293.162445 m
(d) show
133.67717 293.162842 m
(i) show
136.317017 293.163055 m
(t) show
139.676834 293.163208 m
(i) show
142.316681 293.163422 m
(o) show
149.036316 293.163727 m
(n) show
q
n
79.019997 262.73999 m
162.23999 262.559998 l
162.300003 285.419983 l
79.080002 285.540009 l
eoclip
n
n
162.23999 285.359985 m
162.179993 262.619995 l
79.080002 262.800018 l
79.139999 285.47998 l
162.23999 285.359985 l
eoclip
n
n
279.899994 285.179993 m
279.959991 303.0 227.279999 317.579987 162.300003 317.700012 c
97.32 317.820007 44.639999 303.419983 44.639999 285.600006 c
44.579998 267.779999 97.259995 253.199997 162.23999 253.139999 c
227.220001 253.019989 279.899994 267.359985 279.899994 285.179993 c
eoclip
n
n
79.080002 262.589996 83.159988 22.920013 re
f
q
83.399994 0.0 0.0 23.1 78.959991 262.500061 cm
1.0 1.0 1.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 482
/Height 281
/ImageMatrix [481.999969 0.0 0.0 -281.0 0.0 281.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 482 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask -D5)l?iU0+s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8V!Y!$DU~>

Q
Q
Q
n
162.23999 285.359985 m
162.179993 262.619995 l
79.080002 262.800018 l
79.139999 285.47998 l
162.23999 285.359985 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
86.279999 270.540009 m
(R) show
94.919525 270.540558 m
(e) show
101.63916 270.540863 m
(f) show
104.93898 270.541107 m
(a) show
111.598511 270.481506 m
(c) show
117.598175 270.481842 m
(t) show
120.957993 270.481995 m
(o) show
127.61763 270.482391 m
(r) show
131.637405 270.482574 m
(i) show
134.277252 270.482788 m
(n) show
140.99678 270.423096 m
(g) show
n
162.179993 262.619995 m
162.119995 239.939987 l
79.080002 240.059998 l
79.080002 262.800018 l
162.179993 262.619995 l
/N40 /PatternPrototype findRes 
gsave
0 J
0 j
1.0 w
[0.72 0.0 0.0 -0.72 0.0 792.0] concat
matrix makepattern
grestore
setpattern
eofill
n
162.179993 262.619995 m
162.119995 239.939987 l
79.080002 240.059998 l
79.080002 262.800018 l
162.179993 262.619995 l
h
/E397 /ColorSpace findRes cs 0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
86.220001 247.860001 m
(T) show
93.599487 247.800354 m
(e) show
100.259125 247.800751 m
(s) show
106.258789 247.801102 m
(t) show
109.558609 247.801361 m
(-) show
113.578384 247.801559 m
(f) show
116.878204 247.801819 m
(i) show
119.578064 247.80191 m
(r) show
123.597839 247.802109 m
(s) show
129.597397 247.742462 m
(t) show
q
n
78.959999 217.319992 m
162.179993 217.139999 l
162.179993 240.0 l
79.019997 240.119995 l
eoclip
n
n
162.119995 239.939987 m
162.119995 217.199997 l
79.019997 217.37999 l
79.080002 240.059998 l
162.119995 239.939987 l
eoclip
n
n
279.839996 239.759995 m
279.899994 257.579987 227.220001 272.160004 162.23999 272.279999 c
97.259995 272.399994 44.579998 258.0 44.52 240.179993 c
44.52 222.360001 97.139999 207.839996 162.119995 207.720001 c
227.100006 207.600006 279.839996 221.940002 279.839996 239.759995 c
eoclip
n
n
79.019997 217.169998 83.099998 22.919998 re
f
q
83.340004 0.0 0.0 23.1 78.899994 217.080048 cm
1.0 1.0 1.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 482
/Height 281
/ImageMatrix [481.999969 0.0 0.0 -281.0 0.0 281.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 482 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask -D5)l?iU0+s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8V!Y!$DU~>

Q
Q
Q
n
162.119995 239.939987 m
162.119995 217.199997 l
79.019997 217.37999 l
79.080002 240.059998 l
162.119995 239.939987 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
86.220001 225.120102 m
(R) show
94.859528 225.120651 m
(e) show
101.519165 225.121048 m
(f) show
104.878983 225.121201 m
(a) show
111.538513 225.0616 m
(c) show
117.538177 225.061951 m
(t) show
120.897995 225.062103 m
(o) show
127.557632 225.0625 m
(r) show
131.577408 225.062698 m
(i) show
134.217255 225.062897 m
(n) show
140.876892 225.063293 m
(g) show
q
n
78.900002 194.580002 m
162.119995 194.459991 l
162.179993 217.259995 l
78.959999 217.440002 l
eoclip
n
n
162.119995 217.199997 m
162.059998 194.519989 l
78.959999 194.639999 l
79.019997 217.37999 l
162.119995 217.199997 l
eoclip
n
n
279.839996 217.080002 m
279.839996 234.900009 227.159988 249.419998 162.179993 249.539993 c
97.200005 249.659988 44.52 235.319992 44.52 217.5 c
44.459999 199.619995 97.139999 185.100006 162.119995 184.979996 c
227.100006 184.860001 279.779999 199.259995 279.839996 217.080002 c
eoclip
n
n
78.959999 194.48999 83.159996 22.919998 re
f
q
83.399994 0.0 0.0 23.1 78.839989 194.40004 cm
1.0 1.0 1.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 482
/Height 281
/ImageMatrix [481.999969 0.0 0.0 -281.0 0.0 281.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 482 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask -D5)l?iU0+s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!s8W-!s8V!Y!$DU~>

Q
Q
Q
n
162.119995 217.199997 m
162.059998 194.519989 l
78.959999 194.639999 l
79.019997 217.37999 l
162.119995 217.199997 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
86.160004 202.440002 m
(R) show
94.800613 202.380554 m
(e) show
101.520248 202.380844 m
(f) show
104.820068 202.381104 m
(a) show
111.479691 202.3815 m
(c) show
117.47937 202.381851 m
(t) show
120.839188 202.382004 m
(o) show
127.498718 202.322403 m
(r) show
131.518494 202.322601 m
(i) show
134.15834 202.3228 m
(n) show
140.877975 202.32309 m
(g) show
q
n
206.159988 398.759979 m
266.579987 398.639984 l
266.639984 421.440002 l
206.220001 421.559998 l
eoclip
n
n
206.220001 398.819977 m
266.519989 398.700012 l
266.579987 421.380005 l
206.279999 421.5 l
206.220001 398.819977 l
eoclip
n
n
352.079987 421.319977 m
352.079987 439.139984 313.859985 453.660004 266.700012 453.720001 c
219.479996 453.839996 181.259995 439.440002 181.199997 421.619995 c
181.199997 403.800018 219.419998 389.279999 266.579987 389.160004 c
313.73999 389.100006 352.019989 403.5 352.079987 421.319977 c
eoclip
n
n
206.159988 398.669983 60.419998 22.859985 re
f
q
60.672638 0.0 0.0 23.039997 206.099976 398.580017 cm
1.0 1.0 1.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 253
/Height 97
/ImageMatrix [252.999985 0.0 0.0 -97.000008 0.0 97.000008] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 253 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask -D?S1?iU0+s8W-!s8W-!s8W-!s8W-!s8W-!huWm$$3~>

Q
Q
Q
n
206.220001 398.819977 m
266.519989 398.700012 l
266.579987 421.380005 l
206.279999 421.5 l
206.220001 398.819977 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
227.400009 406.559998 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B6079F629170873C67115641D0B6890161EC48F71E8D2106F3
AC927984C1E464F121F968> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 78 /N put
pop
%ADOEndSubsetFont
(N) show
236.040634 406.500549 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/O <1C60D8A8C9B6FF86E621E1FAD9CC02A23AF5AAF7451327A9277DAE8170AA
C8E603A02E3EEFF561DDADE9FD6F6F16B77EE709DD797791A73F1C532C58482F
9C51E1EAE7EA6E4D820E6AA1026E7BE345B1C97C5D9EBBEF4840C4188F96B538
0E7625249BBAD172254404F6F1CB17CABA1F131B17AAAB56C5D3B94E3AC2C2E9
F0A0D079C435D0249DF6C47E18FCF00E7FFE3C519BB35DF797EF47286BDCA762
289BE1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 79 /O put
pop
%ADOEndSubsetFont
(O) show
n
360.119995 398.519989 m
417.720001 398.399994 l
417.779999 421.139984 l
360.179993 421.259979 l
360.119995 398.519989 l
1.0 1.0 1.0 sc
eofill
n
360.119995 398.519989 m
417.720001 398.399994 l
417.779999 421.139984 l
360.179993 421.259979 l
360.119995 398.519989 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
379.919983 406.259979 m
(N) show
388.559509 406.260529 m
(O) show
n
206.220001 376.079987 m
266.519989 375.959991 l
266.519989 398.700012 l
206.220001 398.819977 l
206.220001 376.079987 l
1.0 1.0 1.0 sc
eofill
n
206.220001 376.079987 m
266.519989 375.959991 l
266.519989 398.700012 l
206.220001 398.819977 l
206.220001 376.079987 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
227.339996 383.819977 m
(N) show
235.979523 383.820526 m
(O) show
n
206.159988 353.399994 m
266.459991 353.279999 l
266.519989 375.959991 l
206.220001 376.079987 l
206.159988 353.399994 l
1.0 1.0 1.0 sc
eofill
n
206.159988 353.399994 m
266.459991 353.279999 l
266.519989 375.959991 l
206.220001 376.079987 l
206.159988 353.399994 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
227.279999 361.139984 m
(N) show
235.979523 361.140442 m
(O) show
n
206.100006 330.660004 m
266.399994 330.539978 l
266.459991 353.279999 l
206.159988 353.399994 l
206.100006 330.660004 l
1.0 1.0 1.0 sc
eofill
n
206.100006 330.660004 m
266.399994 330.539978 l
266.459991 353.279999 l
206.159988 353.399994 l
206.100006 330.660004 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
227.279999 338.399994 m
(N) show
235.919525 338.400543 m
(O) show
n
206.100006 307.97998 m
266.399994 307.859985 l
266.399994 330.539978 l
206.100006 330.660004 l
206.100006 307.97998 l
1.0 1.0 1.0 sc
eofill
n
206.100006 307.97998 m
266.399994 307.859985 l
266.399994 330.539978 l
206.100006 330.660004 l
206.100006 307.97998 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
227.220001 315.720001 m
(N) show
235.859528 315.720551 m
(O) show
n
206.039993 285.23999 m
266.339996 285.179993 l
266.399994 307.859985 l
206.100006 307.97998 l
206.039993 285.23999 l
1.0 1.0 1.0 sc
eofill
n
206.039993 285.23999 m
266.339996 285.179993 l
266.399994 307.859985 l
206.100006 307.97998 l
206.039993 285.23999 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
227.159988 292.97998 m
(N) show
235.859512 292.980438 m
(O) show
n
205.979996 262.559998 m
266.279999 262.440002 l
266.339996 285.179993 l
206.039993 285.23999 l
205.979996 262.559998 l
1.0 1.0 1.0 sc
eofill
n
205.979996 262.559998 m
266.279999 262.440002 l
266.339996 285.179993 l
206.039993 285.23999 l
205.979996 262.559998 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
227.159988 270.300018 m
(N) show
235.799515 270.300568 m
(O) show
n
205.979996 239.819992 m
266.279999 239.759995 l
266.279999 262.440002 l
205.979996 262.559998 l
205.979996 239.819992 l
0.80392 0.80392 0.80392 sc
eofill
n
205.979996 239.819992 m
266.279999 239.759995 l
266.279999 262.440002 l
205.979996 262.559998 l
205.979996 239.819992 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
224.100006 247.620087 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/Y <1C60D8A8C9B64EDFFB70684E072B8DF628E28D14911D3157C9B31464A98A
6DDBA63C4291EB3FBE26BFAA34ED61BDD57BF24E591E919774064E4833> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 89 /Y put
pop
%ADOEndSubsetFont
(Y) show
232.079468 247.560593 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B64EDFFB83C6241DB110BEE5AB2FAD9D94B39ED5E81E7411B6
6E9361DDE78FC667AB91EF9824> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 69 /E put
pop
%ADOEndSubsetFont
(E) show
240.119019 247.560989 m
%ADOBeginSubsetFont: ArialMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/ArialMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/S <1C60D8A8C9B64EDFE3D078722A65C31955939D63AA5C8A4945719B5E558E
3B73A676CC12D1E18D93A8DC67C074D6E352D426981DE76F8EC4CFE5DAE051BE
47753A7C234C4B8D7D9F50292A61882B5500CC701F878FE6279CD19D14EA6035
C725D4931858CF3461C79FFD466BC895EDE173399A2BD2E78AE68911697608AB
C43162F893CD7C777109FD1C2A7BDF43C1311B2D2394EF4EFD7673806B958539
1A018BFE68EF06C54BF8E587A422DFA5D710A4DBF30F08C0D26B4FD7D4009DAD
454C3BA07E20BFDD204112D8AC10A9FED52DB4D91054E587F882FDD5684E75C8
56C9D7B2578D1D43FC927CBD5F2B4CE1D8726D9A38A6BB3D15B84B1D> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/ArialMT findfont /Encoding get
dup 83 /S put
pop
%ADOEndSubsetFont
(S) show
n
205.919998 217.139999 m
266.220001 217.019989 l
266.279999 239.759995 l
205.979996 239.819992 l
205.919998 217.139999 l
0.80392 0.80392 0.80392 sc
eofill
n
205.919998 217.139999 m
266.220001 217.019989 l
266.279999 239.759995 l
205.979996 239.819992 l
205.919998 217.139999 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
224.039993 224.880096 m
(Y) show
232.079544 224.880493 m
(E) show
240.059097 224.880997 m
(S) show
n
205.860001 194.400009 m
266.160004 194.339996 l
266.220001 217.019989 l
205.919998 217.139999 l
205.860001 194.400009 l
0.80392 0.80392 0.80392 sc
eofill
n
205.860001 194.400009 m
266.160004 194.339996 l
266.220001 217.019989 l
205.919998 217.139999 l
205.860001 194.400009 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
224.039993 202.200089 m
(Y) show
232.019455 202.140594 m
(E) show
239.999008 202.141098 m
(S) show
n
360.119995 375.839996 m
417.720001 375.720001 l
417.720001 398.399994 l
360.119995 398.519989 l
360.119995 375.839996 l
0.80392 0.80392 0.80392 sc
eofill
n
360.119995 375.839996 m
417.720001 375.720001 l
417.720001 398.399994 l
360.119995 398.519989 l
360.119995 375.839996 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
376.859985 383.579987 m
(Y) show
384.899536 383.580383 m
(E) show
392.878998 383.520874 m
(S) show
n
360.059998 353.100006 m
417.660004 353.039978 l
417.720001 375.720001 l
360.119995 375.839996 l
360.059998 353.100006 l
0.80392 0.80392 0.80392 sc
eofill
n
360.059998 353.100006 m
417.660004 353.039978 l
417.720001 375.720001 l
360.119995 375.839996 l
360.059998 353.100006 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
376.859985 360.839996 m
(Y) show
384.839539 360.840485 m
(E) show
392.819092 360.840973 m
(S) show
n
360.0 330.419983 m
417.600006 330.300018 l
417.660004 353.039978 l
360.059998 353.100006 l
360.0 330.419983 l
0.80392 0.80392 0.80392 sc
eofill
n
360.0 330.419983 m
417.600006 330.300018 l
417.660004 353.039978 l
360.059998 353.100006 l
360.0 330.419983 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
376.800018 338.160004 m
(Y) show
384.779572 338.160492 m
(E) show
392.819122 338.160889 m
(S) show
n
360.0 307.679993 m
417.600006 307.619995 l
417.600006 330.300018 l
360.0 330.419983 l
360.0 307.679993 l
0.80392 0.80392 0.80392 sc
eofill
n
360.0 307.679993 m
417.600006 307.619995 l
417.600006 330.300018 l
360.0 330.419983 l
360.0 307.679993 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
376.73999 315.47998 m
(Y) show
384.779449 315.42038 m
(E) show
392.759003 315.420868 m
(S) show
n
359.940002 285.0 m
417.539978 284.880005 l
417.600006 307.619995 l
360.0 307.679993 l
359.940002 285.0 l
0.80392 0.80392 0.80392 sc
eofill
n
359.940002 285.0 m
417.539978 284.880005 l
417.600006 307.619995 l
360.0 307.679993 l
359.940002 285.0 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
376.73999 292.740082 m
(Y) show
384.719543 292.74057 m
(E) show
392.699097 292.741058 m
(S) show
n
359.880005 262.259979 m
417.47998 262.200012 l
417.539978 284.880005 l
359.940002 285.0 l
359.880005 262.259979 l
0.80392 0.80392 0.80392 sc
eofill
n
359.880005 262.259979 m
417.47998 262.200012 l
417.539978 284.880005 l
359.940002 285.0 l
359.880005 262.259979 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
376.679993 270.060089 m
(Y) show
384.659454 270.00058 m
(E) show
392.699005 270.000977 m
(S) show
n
359.880005 239.580002 m
417.47998 239.459991 l
417.47998 262.200012 l
359.880005 262.259979 l
359.880005 239.580002 l
0.80392 0.80392 0.80392 sc
eofill
n
359.880005 239.580002 m
417.47998 239.459991 l
417.47998 262.200012 l
359.880005 262.259979 l
359.880005 239.580002 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
376.619995 247.320099 m
(Y) show
384.659546 247.320496 m
(E) show
392.639099 247.320999 m
(S) show
n
359.819977 216.839996 m
417.419983 216.779999 l
417.47998 239.459991 l
359.880005 239.580002 l
359.819977 216.839996 l
0.80392 0.80392 0.80392 sc
eofill
n
359.819977 216.839996 m
417.419983 216.779999 l
417.47998 239.459991 l
359.880005 239.580002 l
359.819977 216.839996 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
376.619995 224.639999 m
(Y) show
384.599457 224.580505 m
(E) show
392.57901 224.581009 m
(S) show
n
359.759979 194.159988 m
417.359985 194.039993 l
417.419983 216.779999 l
359.819977 216.839996 l
359.759979 194.159988 l
0.80392 0.80392 0.80392 sc
eofill
n
359.759979 194.159988 m
417.359985 194.039993 l
417.419983 216.779999 l
359.819977 216.839996 l
359.759979 194.159988 l
h
0.0 0.50196 0.0 sc
S
0.0 0.0 0.0 sc
376.559998 201.900101 m
(Y) show
384.539551 201.900604 m
(E) show
392.579102 201.901001 m
(S) show
q
n
79.139999 423.539978 79.319992 15.839996 re
eoclip
n
n
158.400009 439.319977 m
79.200005 439.319977 79.200005 -15.720001 re
158.400009 439.319977 m
eoclip
n
n
270.660004 439.380005 m
270.660004 451.73999 220.440002 461.759979 158.459991 461.759979 c
96.540001 461.759979 46.32 451.73999 46.32 439.380005 c
46.32 427.019989 96.540001 417.0 158.459991 417.0 c
220.440002 417.0 270.660004 427.019989 270.660004 439.380005 c
eoclip
n
n
79.200005 423.569977 79.200005 15.779999 re
f
q
79.55999 0.0 0.0 16.079998 79.019989 423.420044 cm
1.0 1.0 1.0 sc
q
n
0.0 0.0 1.0 1.0 re
<<
/ImageType 1
/Width 470
/Height 258
/ImageMatrix [470.0 0.0 0.0 -258.0 0.0 258.0] 
/BitsPerComponent 1
/Decode [0.0 1.0 ] 
/_Filters [currentfile /ASCII85Decode filter dup <</K -1 
/Columns 470 
>> /CCITTFaxDecode filter dup 
] >>
pdf_imagemask -D5)_s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!
s8W-!s8W-!s8W-!s8W-!n,WM#$3~>

Q
Q
Q
95.460007 427.919983 m
%ADOBeginSubsetFont: Arial-BoldMT AddGlyphs
%ADOt1write: (1.0.21)
%%Copyright: Copyright 2006 Adobe System Incorporated. All rights reserved.
systemdict begin
/Arial-BoldMT findfont dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/E <1C60D8A8C9B64EDFFB871F4BC81FBDF202F74A2A9990666F4653F156EEAF
D5D786BB69DEDB8B2E0A95C5AFB0A097> |-
/p <1C60D8A8C9B7D8BE2E8563B32C07DCC3804272870E069E443B687857C9AC
B5C7CA1CF4F6A17C25172CC3E3E31B65AB87A5F695EADCB9429C1CB7981C750B
5DB31D41989E5AF25C22D1AF173045FD1E2E798D136DAECB194448D399145071
5E7374AE8B43D8B50AD9D750A67743A1F2A35DFF73BE71D039D15D8530023A7D
A074A0D1B66504E092406A88A86DBDD558> |-
/i <1C60D8A8C9B854D0F456B21D2F64F910BA7B8B592C84A4B1CA21D58F6678
BEC800D8864E53D53A> |-
/s <1C60D8A8C9B7EF322FE651D521834CDC537E3DD6EDE0ABF561677B8E076D
DC9728066ABB56D1B743872DFE7AE020F0764CE3958A51AA0338BC1551D98AE3
FB37FA10E152AF1ED0A626D6C892D666067C463296034FB47068E23F64D99406
EC5C2C17229C4A63CE0EFA8720ACDB7F7406ADA1BC78971EA6415F0612916927
81A355051246F6EE6DC9DD910EE9B57ECB7AA0A970570176A3D15D1E3F2012D4
7AFFA014792503A125E8700D4C4B9A85575792648D6CE60E59BBF3015C0285B0> |-
/d <1C60D8A8C9B7D8BE1937528A8A04A3F08B6D80EAB145BDD9DBE53FB1B70A
6DDBF10422FFF8F4C48F788DD104B24EA5229392446A977753676010F4776395
4952B19E372D9318BC5C7A48B7A85FDEA74862756E58887CA2F53B9D7C319DD7
A84656FBF89C0C66533E86D0B18AA2C13EC41ADA69D4E07EF68978C6DC11D8A9
705A6EC736D21DD4607DF3> |-
systemdict /gcheck known {setglobal} if end {end} if
end
/Arial-BoldMT findfont /Encoding get
dup 69 /E put
dup 112 /p put
dup 105 /i put
dup 115 /s put
dup 100 /d put
pop
%ADOEndSubsetFont
/N12 12.0 Tf
(Episode)
[7.98009 7.38231 3.311998 6.647997 7.38231 7.322309 6.647997 ] pdfxs
n
270.0 397.800018 86.399994 22.679993 re
/N35 /PatternPrototype findRes 
gsave
0 J
0 j
1.0 w
[0.72 0.0 0.0 -0.72 0.0 792.0] concat
matrix makepattern
grestore
setpattern
f
n
269.040009 238.319992 88.380005 25.139999 re
/N43 /PatternPrototype findRes 
gsave
0 J
0 j
1.0 w
[0.72 0.0 0.0 -0.72 0.0 792.0] concat
matrix makepattern
grestore
setpattern
f
n
331.200012 397.800018 m
338.399994 390.600006 l
333.660004 390.600006 l
333.660004 201.600006 l
338.399994 201.600006 l
331.200012 194.400009 l
324.0 201.600006 l
328.800018 201.600006 l
328.800018 390.600006 l
324.0 390.600006 l
331.200012 397.800018 l
/E397 /ColorSpace findRes cs 0.80392 0.80392 0.80392 sc
eofill
0.24 w
n
331.200012 397.800018 m
338.399994 390.600006 l
333.660004 390.600006 l
333.660004 201.600006 l
338.399994 201.600006 l
331.200012 194.400009 l
324.0 201.600006 l
328.800018 201.600006 l
328.800018 390.600006 l
324.0 390.600006 l
331.200012 397.800018 l
h
0.0 0.0 0.0 sc
S
n
295.200012 194.400009 m
302.399994 201.600006 l
297.660004 201.600006 l
297.660004 263.459991 l
292.800018 263.459991 l
292.800018 201.600006 l
288.0 201.600006 l
295.200012 194.400009 l
0.80392 0.80392 0.80392 sc
eofill
n
295.200012 194.400009 m
302.399994 201.600006 l
297.660004 201.600006 l
297.660004 263.459991 l
292.800018 263.459991 l
292.800018 201.600006 l
288.0 201.600006 l
295.200012 194.400009 l
h
0.0 0.0 0.0 sc
S
/Arial-BoldMT /Font _pdfUndefineResource
/N12 /Font _pdfUndefineResource
/ArialMT /Font _pdfUndefineResource
/N11 /Font _pdfUndefineResource
[/EMC PDFMark5
PDFVars/TermAll get exec end end
%%PageTrailer
%%Trailer
%%DocumentSuppliedResources:
%%+ font ArialMT
%%+ font Arial-BoldMT
%%+ procset (Adobe Acrobat - PDF operators) 1.2 0
%%+ procset (Adobe Acrobat - type operators) 1.2 0
%%+ procset (Adobe Acrobat - general image support) 1.2 0
%%+ procset (Adobe Acrobat - monochrome image support) 1.2 0
%%+ procset (Adobe Acrobat - color image support) 1.2 0
%%+ procset (Adobe Acrobat - indexed color image support) 1.2 0
%%EOF
