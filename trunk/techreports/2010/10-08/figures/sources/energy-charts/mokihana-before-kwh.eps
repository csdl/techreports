%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: mokihana-before-kwh.pdf
%%Creator: Adobe Acrobat 10.1.5
%%For: rbrewer
%%CreationDate: 1/25/13, 3:10 PM
%%BoundingBox: 0 0 507 305
%%HiResBoundingBox: 0 0 507 305
%%CropBox: 0 0 507 305
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$None SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 551 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.2-c001 63.139439, 2010/09/27-13:37:26        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
    xmlns:dc="http://purl.org/dc/elements/1.1/"
   xmp:CreateDate="2013-01-26T01:09:27Z"
   xmp:ModifyDate="2013-01-26T01:09:27Z"
   pdf:Producer="Mac OS X 10.8.2 Quartz PDFContext"
   dc:format="application/pdf"/>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
Adobe_AGM_Core/ps gx
gsave
/0 
[/DeviceCMYK] /CSA add_res
grestore
Adobe_AGM_Core/pt gx
%%EndPageSetup
1 -1 scale 0 -305 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 305 li
507 305 li
507 0 li
cp
clp
507 305 mo
0 305 li
0 0 li
507 0 li
0 0 li
0 305 li
507 305 li
507 305 li
false sop
0 0 0 0 cmyk
f
0 0 mo
507 0 li
507 305 li
0 305 li
0 0 li
ef
59.6671 13.0001 mo
486.618 13.0001 li
486.618 275.983 li
59.6671 275.983 li
59.6671 13.0001 li
ef
60 237.5 mo
486.618 237.5 li
486.618 238.5 li
60 238.5 li
60 237.5 li
60 200.5 mo
486.618 200.5 li
486.618 201.5 li
60 201.5 li
60 200.5 li
60 162.5 mo
486.618 162.5 li
486.618 163.5 li
60 163.5 li
60 162.5 li
60 125.5 mo
486.618 125.5 li
486.618 126.5 li
60 126.5 li
60 125.5 li
60 87.5001 mo
486.618 87.5001 li
486.618 88.5002 li
60 88.5002 li
60 87.5001 li
60 50.5002 mo
486.618 50.5002 li
486.618 51.5001 li
60 51.5001 li
60 50.5002 li
60 12.5002 mo
486.618 12.5002 li
486.618 13.5001 li
60 13.5001 li
60 12.5002 li
0 0 0 .473793 cmyk
f
1 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
59.6671 275.983 mo
59.6672 13.0001 li
@
56 275.983 mo
59.6671 275.983 li
56 238 mo
59.6671 238 li
56 201 mo
59.6671 201 li
56 163 mo
59.6671 163 li
56 126 mo
59.6671 126 li
56 88.0001 mo
59.6671 88.0001 li
56 51.0001 mo
59.6671 51.0001 li
56 13.0001 mo
59.6671 13.0001 li
@
59.6671 275.983 mo
486.618 275.983 li
@
60 276 mo
60 279.792 li
163 276 mo
163 279.792 li
266 276 mo
266 279.792 li
369 276 mo
369 279.792 li
471.896 276 mo
471.896 279.792 li
@
67.0546 122.126 mo
170.055 125.126 li
171.09 125.156 171.904 126.02 171.874 127.055 cv
171.844 128.09 170.981 128.904 169.945 128.874 cv
66.9455 125.874 li
65.9103 125.844 65.0957 124.981 65.1258 123.946 cv
65.156 122.91 66.0194 122.096 67.0546 122.126 cv
169.909 125.127 mo
272.909 120.127 li
273.943 120.077 274.823 120.875 274.873 121.909 cv
274.923 122.944 274.125 123.823 273.091 123.873 cv
170.091 128.873 li
169.057 128.923 168.177 128.125 168.127 127.091 cv
168.077 126.057 168.875 125.177 169.909 125.127 cv
273.091 120.127 mo
376.091 125.127 li
377.125 125.177 377.923 126.057 377.873 127.091 cv
377.823 128.125 376.943 128.923 375.909 128.873 cv
272.909 123.873 li
271.875 123.823 271.077 122.944 271.127 121.909 cv
271.177 120.875 272.057 120.077 273.091 120.127 cv
376.018 125.125 mo
479.018 126.125 li
480.054 126.135 480.885 126.983 480.875 128.018 cv
480.865 129.054 480.017 129.885 478.982 129.875 cv
375.982 128.875 li
374.946 128.865 374.115 128.017 374.125 126.982 cv
374.135 125.946 374.983 125.115 376.018 125.125 cv
.686061 .353338 .0289006 0 cmyk
f
72 129 mo
62 129 li
62 126.5 li
72 126.5 li
72 129 li
65.8748 125.5 mo
62 125.5 li
62 119 li
72 119 li
72 122.27 li
67.0546 122.126 li
67.036 122.125 67.0176 122.125 66.9991 122.125 cv
65.9888 122.125 65.1555 122.929 65.1258 123.946 cv
65.1074 124.578 65.4046 125.147 65.8748 125.5 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 61 175 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!d/Pc!!!!!!!!!!!d/Pc!!!!!!!!!$Fbklt!rr<$!!!+EN+6@WFoq^E!s<b-BkV0oO*1U-GB]6q
G'8%PG*@,oG^,I%IXHTnI[#&#!s<e9Mi3LOR<Sf9!!!+GS!&r(GQRpG!!!!$H(LUP!rr<$!!!!!!dI09
!!!!!!!!!!!dI09!!!!!~>
<~!!!!!!^T'Q!!!!!!!!!!!^T'Q!!!!!!!!!"5=e=1!<<*"!!!$b8h;Mb5lgrc!<GGX0J>(58jNIY5X8%'
2E3TQ3)2_(6:+I04$#Gb4AS:1!<GMb6UO4.;F1Bb!!!$d;b'>V63.&d!!!!"6WR5R!<<*"!!!!!!^e=:
!!!!!!!!!!!^e=:!!!!!~>
<~!!!!!!"028!!!!!!!!!!!"028!!!!!!!!!!$j[+J!!!!!!!!!-#ljr4$ig8-!!!K9!!!!!$Od"8%LrjH
!!!!!!"'2G%1NXE!!!!!!"02D!!!H9!!!!!$Om(9!!!!.$ig89%0-A.!!!!!%1<US!!!!!!!!!!!"9&3
!!!!!!!!!!!"9&3!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
72 126.5 mo
62 126.5 li
62 125.5 li
65.8748 125.5 li
66.1739 125.725 66.543 125.863 66.9455 125.874 cv
72 126.022 li
72 126.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 3 61 177 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 3 
/M[12 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s<e9Mi3LOR<Sf9!!!+GS!&r(GQRpG!!!!$H(LUP!rr<$~>
<~!<GMb6UO4.;F1Bb!!!$d;b'>V63.&d!!!!"6WR5R!<<*"~>
<~!!!H9!!!!!$Om(9!!!!.$ig89%0-A.!!!!!%1<US!!!!!~>
<~GBY26!!!!!"X/)6H$OTW"TSN++a83WH$O[Z+U&#mGBnIZ~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
72 126.022 mo
66.9455 125.874 li
66.543 125.863 66.1739 125.725 65.8748 125.5 cv
65.4046 125.147 65.1074 124.578 65.1258 123.946 cv
65.1555 122.929 65.9888 122.125 66.9991 122.125 cv
67.0176 122.125 67.036 122.125 67.0546 122.126 cv
72 122.27 li
72 126.022 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[9 0 0 6 64 178 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 6 
/M[9 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~U6B(sPbOhETp9>*BPEa+TV-OQG'8%PRA-F)IXHTnI[[%,T8SVcMk?f<TVS9EP+e\ETqM~>
<~=%t4s9NY7n<)#&"0/-+&<)bh83&WZS;--g\4$#Gb4Ao<b<C9,@6WI8g<*<6l7oibl<)`~>
<~%LE+8$4dFL#mpY4!!!B;#mgS3!!!!!$4maK!!!!!!"0;J$NL/,!"0>E#nRLF!"9DF#mg~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
175 132 mo
165 132 li
165 128.73 li
169.925 128.874 li
169.95 128.875 169.974 128.875 169.999 128.875 cv
170.007 128.875 170.016 128.875 170.024 128.875 cv
170.025 128.875 170.025 128.875 170.025 128.875 cv
170.028 128.875 170.031 128.875 170.034 128.875 cv
170.059 128.874 170.083 128.874 170.108 128.872 cv
175 128.635 li
175 132 li
169.982 125.124 mo
165 124.979 li
165 122 li
175 122 li
175 124.88 li
169.982 125.124 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 164 172 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!d/Pc!!!!!!!!!!!d/Pc!!!!!!!!!$Fbklt!rr<$!!!+EN+6@WFoq^E!s<b-BkV0oO*1U-GB]6q
G'8%PG*@,oG^,I%IXHTnI[#&#!s<e9Mi3LOR<Sf9!!!+GS!&r(GQRpG!!!!$H(LUP!rr<$!!!!!!dI09
!!!!!!!!!!!dI09!!!!!~>
<~!!!!!!^T'Q!!!!!!!!!!!^T'Q!!!!!!!!!"5=e=1!<<*"!!!$b8h;Mb5lgrc!<GGX0J>(58jNIY5X8%'
2E3TQ3)2_(6:+I04$#Gb4AS:1!<GMb6UO4.;F1Bb!!!$d;b'>V63.&d!!!!"6WR5R!<<*"!!!!!!^e=:
!!!!!!!!!!!^e=:!!!!!~>
<~!!!!!!"028!!!!!!!!!!!"028!!!!!!!!!!$j[+J!!!!!!!!!-#ljr4$ig8-!!!K9!!!!!$Od"8%LrjH
!!!!!!"'2G%1NXE!!!!!!"02D!!!H9!!!!!$Om(9!!!!.$ig89%0-A.!!!!!%1<US!!!!!!!!!!!"9&3
!!!!!!!!!!!"9&3!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
169.999 128.875 mo
169.974 128.875 169.95 128.875 169.925 128.874 cv
165 128.73 li
165 124.979 li
169.982 125.124 li
175 124.88 li
175 128.635 li
170.108 128.872 li
170.083 128.874 170.059 128.874 170.034 128.875 cv
170.031 128.875 170.028 128.875 170.025 128.875 cv
170.025 128.875 170.025 128.875 170.024 128.875 cv
170.016 128.875 170.007 128.875 169.999 128.875 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 6 164 175 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 6 
/M[12 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~TqS-RP@J*eU7e3RTV/$EBkV0oQ(jqEU8"'#G'8%PG+#)!UnjH.IXHTnI[[%,TV/*QMi3LOT;8-QTqS-T
TotS4UnFET~>
<~<)cgu9e7hh=B&7!<)cpn0J>(59it@o='&3X2E3TQ3)NaY=]nWa4$#Gb4Ao<b<)d"#6UO4.<EW:#<)ch"
<_#Y\=]A@"~>
<~#mgnJ#ljr4%g`OK#mh.M!!!!!$P*OM&.f3L!!!!!!"'8K&.f0K!!!!!!"0;J#mh.N!!!!!$P3UN#mgnL
$ig89&.&XL~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
278 127 mo
268 127 li
268 126.5 li
278 126.5 li
278 127 li
278 125.5 mo
268 125.5 li
268 124.12 li
273 123.877 li
278 124.12 li
278 125.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 5 267 177 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 5 
/M[12 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!s<e9Mi3LOR<Sf9!!!+GS!&r(GQRpG!!!!$H(LUP!rr<$!!!!!!dI09!!!!!!!!!!!dI09!!!!!~>
<~!<GMb6UO4.;F1Bb!!!$d;b'>V63.&d!!!!"6WR5R!<<*"!!!!!!^e=:!!!!!!!!!!!^e=:!!!!!~>
<~!!!H9!!!!!$Om(9!!!!.$ig89%0-A.!!!!!%1<US!!!!!!!!!!!"9&3!!!!!!!!!!!"9&3!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
278 126.5 mo
268 126.5 li
268 125.5 li
278 125.5 li
278 126.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 3 267 177 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 3 
/M[12 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!$H(LUP!rr<$!!!!!!dI09!!!!!!!!!!!dI09!!!!!~>
<~!!!!"6WR5R!<<*"!!!!!!^e=:!!!!!!!!!!!^e=:!!!!!~>
<~!!!!!%1<US!!!!!!!!!!!"9&3!!!!!!!!!!!"9&3!!!!!~>
<~H$O[Z+U&#mGBnIZH$O[\G9KG"H$O[\H$O[\G9KG"H$O[\~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
278 120.366 mo
273.116 120.129 li
273.078 120.126 273.04 120.125 273.002 120.125 cv
273.001 120.125 273 120.125 273 120.125 cv
272.999 120.125 272.999 120.125 272.998 120.125 cv
272.96 120.125 272.922 120.126 272.884 120.129 cv
268 120.366 li
268 117 li
278 117 li
278 120.366 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 5 267 184 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 5 
/M[12 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!d/Pc!!!!!!!!!!!d/Pc!!!!!!!!!$Fbklt!rr<$!!!+EN+6@WFoq^E!s<b-BkV0oO*1U-~>
<~!!!!!!^T'Q!!!!!!!!!!!^T'Q!!!!!!!!!"5=e=1!<<*"!!!$b8h;Mb5lgrc!<GGX0J>(58jNIY~>
<~!!!!!!"028!!!!!!!!!!!"028!!!!!!!!!!$j[+J!!!!!!!!!-#ljr4$ig8-!!!K9!!!!!$Od"8~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
278 124.12 mo
273 123.877 li
268 124.12 li
268 120.366 li
272.884 120.129 li
272.922 120.126 272.96 120.125 272.998 120.125 cv
272.999 120.125 272.999 120.125 273 120.125 cv
273 120.125 273.001 120.125 273.002 120.125 cv
273.04 120.125 273.078 120.126 273.116 120.129 cv
278 120.366 li
278 124.12 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 6 267 180 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 6 
/M[12 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~TqS-RP@J*eU7e3RTV/$EBkV0oQ(jqEU8"'#G'8%PG+#)!UnjH.IXHTnI[[%,TV/*QMi3LOT;8-QTqS-T
TotS4UnFET~>
<~<)cgu9e7hh=B&7!<)cpn0J>(59it@o='&3X2E3TQ3)NaY=]nWa4$#Gb4Ao<b<)d"#6UO4.<EW:#<)ch"
<_#Y\=]A@"~>
<~#mgnJ#ljr4%g`OK#mh.M!!!!!$P*OM&.f3L!!!!!!"'8K&.f0K!!!!!!"0;J#mh.N!!!!!$P3UN#mgnL
$ig89&.&XL~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381 125 mo
373.468 125 li
371 124.88 li
371 122 li
381 122 li
381 125 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 5 370 179 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 5 
/M[12 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!d/Pc!!!!!!!!!!!d/Pc!!!!!!!!!$Fbklt!rr<$!!!+EN+6@WFoq^E!s<b-BkV0oO*1U-~>
<~!!!!!!^T'Q!!!!!!!!!!!^T'Q!!!!!!!!!"5=e=1!<<*"!!!$b8h;Mb5lgrc!<GGX0J>(58jNIY~>
<~!!!!!!"028!!!!!!!!!!!"028!!!!!!!!!!$j[+J!!!!!!!!!-#ljr4$ig8-!!!K9!!!!!$Od"8~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
371 128.413 mo
371 124.88 li
373.468 125 li
371 125 li
371 128.413 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[4 0 0 5 370 176 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 5 
/M[4 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~TqS-RTV/$EU8"'#UnjH.TV/*Q~>
<~<)cgu<)cpn='&3X=]nWa<)d"#~>
<~#mgnJ#mh.M&.f3L&.f0K#mh.N~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
484 125.5 mo
474 125.5 li
474 123 li
484 123 li
484 125.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 5 473 178 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 5 
/M[12 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!d/Pc!!!!!!!!!!!d/Pc!!!!!!!!!$Fbklt!rr<$!!!+EN+6@WFoq^E!s<b-BkV0oO*1U-~>
<~!!!!!!^T'Q!!!!!!!!!!!^T'Q!!!!!!!!!"5=e=1!<<*"!!!$b8h;Mb5lgrc!<GGX0J>(58jNIY~>
<~!!!!!!"028!!!!!!!!!!!"028!!!!!!!!!!$j[+J!!!!!!!!!-#ljr4$ig8-!!!K9!!!!!$Od"8~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
474 126.076 mo
474 126.076 li
474 125.5 li
484 125.5 li
484 126 li
474 126 li
474 126.076 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 3 473 177 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 3 
/M[12 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!+EN+6@WFoq^E!s<b-BkV0oO*1U-GB]6qG'8%PG*@,o~>
<~!!!$b8h;Mb5lgrc!<GGX0J>(58jNIY5X8%'2E3TQ3)2_(~>
<~!!!!-#ljr4$ig8-!!!K9!!!!!$Od"8%LrjH!!!!!!"'2G~>
<~H$OTW"TSN++a83WGBY26!!!!!"X/)6+X%!h!!!!!!!OMh~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
67.0546 137.126 mo
170.055 140.126 li
171.09 140.156 171.904 141.02 171.874 142.055 cv
171.844 143.09 170.981 143.904 169.945 143.874 cv
66.9455 140.874 li
65.9103 140.844 65.0957 139.981 65.1258 138.945 cv
65.156 137.91 66.0194 137.096 67.0546 137.126 cv
169.891 140.128 mo
272.891 134.128 li
273.925 134.068 274.812 134.857 274.872 135.891 cv
274.932 136.925 274.143 137.812 273.109 137.872 cv
170.109 143.872 li
169.075 143.932 168.188 143.143 168.128 142.109 cv
168.068 141.075 168.857 140.188 169.891 140.128 cv
272.891 134.128 mo
375.891 128.128 li
376.925 128.068 377.812 128.857 377.872 129.891 cv
377.932 130.925 377.143 131.812 376.109 131.872 cv
273.109 137.872 li
272.075 137.932 271.188 137.143 271.128 136.109 cv
271.068 135.075 271.857 134.188 272.891 134.128 cv
376.018 128.125 mo
479.018 129.125 li
480.054 129.135 480.885 129.983 480.875 131.018 cv
480.865 132.054 480.017 132.885 478.982 132.875 cv
375.982 131.875 li
374.946 131.865 374.115 131.017 374.125 129.982 cv
374.135 128.946 374.983 128.115 376.018 128.125 cv
.15903 .780758 .684627 .0278935 cmyk
f
72 144 mo
62 144 li
62 134 li
72 134 li
72 137.27 li
67.0546 137.126 li
67.036 137.125 67.0176 137.125 66.9991 137.125 cv
65.9888 137.125 65.1555 137.929 65.1258 138.945 cv
65.0957 139.981 65.9103 140.844 66.9455 140.874 cv
72 141.021 li
72 144 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 61 160 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0/"q1/hSb//hSe10/"q1/hSb//hSe1/hR5.!s8W-!Wt&-/hR>4#6kD<#6uk6/hRJ<#mptF$4/=;/hR\H
%hK6^%hC9F/hRbL'+trl',)uN/hRtX(`4),(`4kX/hS(^)]K_8)]LC^/hS4f+!2RH+!3*f0/"q1/hSb/
/hSe10/"q1/hSb//hSe1~>
<~[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^L-oE,]c8DfE.n[^LU4IXQZoIX\`6[^LjBKnP/6KS?kC[^MB`
PEV2oPEWG`[^MWnS!oh9R[^ao[^N-5W2QYnW2R/5[^NEEYct@9YctRE[^Ni]]Y(ni]Y(\][^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ~>
<~R$a5,Q^=&*Q^=),R$a5,Q^=&*Q^=),Q^:-077BX66q*H/Q^:TJ;,U7g;c/mJQ^:iX=]nm1=]q)XQ^;E#
BPD-nBP<a!Q^;W/E,T]7EH%82Q^<8SJUrB'JUs/SQ^<VgMi3LOMi3pgQ^=;8St;OFSt;:8R$a5,Q^=&*
Q^=),R$a5,Q^=&*Q^=),~>
<~#mgtI$O[=M$O[7I#mgtI$O[=M$O[7I$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7
!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZt9!<E3%!<EQ9$O[";!WiE)!Wi`;#mgtI$O[=M
$O[7I#mgtI$O[=M$O[7I~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
72 141.021 mo
66.9455 140.874 li
65.9103 140.844 65.0957 139.981 65.1258 138.945 cv
65.1555 137.929 65.9888 137.125 66.9991 137.125 cv
67.0176 137.125 67.036 137.125 67.0546 137.126 cv
72 137.27 li
72 141.021 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[9 0 0 6 64 163 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 6 
/M[9 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~"pY>;#6tJd/d_ml#mgqF/hR\G&.]9^%k]II'+trl',)uN(`4),(`4)B/fP`K)]K_8/hR~>
<~I=?TnIXZaS[Y0?fKnY26[^MB`PEV2oPI@ogS!oh9R[^aoW2QYnW2QZ'[]m!?Yct@9[^H~>
<~;Gg=h;,^>YQW[Ho=]nm1Q^;E"BkV0nBU>'(E,T]7EH%82JUrB'JUrB=Q]$c[Mi3LOQ^7~>
<~!!!!!!!!!,$NL/,!!!!!$OZq7!!!!!!"0/7!!!!!!!!B7!!!!!!!!!,$NU8/!<E3%$OZ~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
175 147 mo
165 147 li
165 143.73 li
169.926 143.874 li
169.95 143.875 169.974 143.875 169.998 143.875 cv
170.003 143.875 170.008 143.875 170.012 143.875 cv
170.053 143.875 170.093 143.873 170.133 143.87 cv
175 143.587 li
175 147 li
169.972 140.123 mo
165 139.979 li
165 137 li
175 137 li
175 139.831 li
169.972 140.123 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 164 157 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0/"q1/hSb//hSe10/"q1/hSb//hSe1/hR5.!s8W-!Wt&-/hR>4#6kD<#6uk6/hRJ<#mptF$4/=;/hR\H
%hK6^%hC9F/hRbL'+trl',)uN/hRtX(`4),(`4kX/hS(^)]K_8)]LC^/hS4f+!2RH+!3*f0/"q1/hSb/
/hSe10/"q1/hSb//hSe1~>
<~[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^L-oE,]c8DfE.n[^LU4IXQZoIX\`6[^LjBKnP/6KS?kC[^MB`
PEV2oPEWG`[^MWnS!oh9R[^ao[^N-5W2QYnW2R/5[^NEEYct@9YctRE[^Ni]]Y(ni]Y(\][^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ~>
<~R$a5,Q^=&*Q^=),R$a5,Q^=&*Q^=),Q^:-077BX66q*H/Q^:TJ;,U7g;c/mJQ^:iX=]nm1=]q)XQ^;E#
BPD-nBP<a!Q^;W/E,T]7EH%82Q^<8SJUrB'JUs/SQ^<VgMi3LOMi3pgQ^=;8St;OFSt;:8R$a5,Q^=&*
Q^=),R$a5,Q^=&*Q^=),~>
<~#mgtI$O[=M$O[7I#mgtI$O[=M$O[7I$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7
!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZt9!<E3%!<EQ9$O[";!WiE)!Wi`;#mgtI$O[=M
$O[7I#mgtI$O[=M$O[7I~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
169.998 143.875 mo
169.974 143.875 169.95 143.875 169.926 143.874 cv
165 143.73 li
165 139.979 li
169.972 140.123 li
175 139.831 li
175 143.587 li
170.133 143.87 li
170.093 143.873 170.053 143.875 170.012 143.875 cv
170.008 143.875 170.003 143.875 169.998 143.875 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 6 164 160 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 6 
/M[12 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~/hR>4#6kD<#6uk6/hRJ<#mptF$4/=;/hR\H%hK6^%hC9F/hRbL'+trl',)uN/hRtX(`4),(`4kX/hS(^
)]K_8)]LC^~>
<~[^LU4IXQZoIX\`6[^LjBKnP/6KS?kC[^MB`PEV2oPEWG`[^MWnS!oh9R[^ao[^N-5W2QYnW2R/5[^NEE
Yct@9YctRE~>
<~Q^:TJ;,U7g;c/mJQ^:iX=]nm1=]q)XQ^;E#BPD-nBP<a!Q^;W/E,T]7EH%82Q^<8SJUrB'JUs/SQ^<Vg
Mi3LOMi3pg~>
<~$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZt9
!<E3%!<EQ9~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
278 141 mo
268 141 li
268 138.169 li
273.109 137.872 li
273.109 137.872 li
278 137.587 li
278 141 li
268 134.413 mo
268 131 li
278 131 li
278 133.831 li
272.891 134.128 li
272.891 134.128 li
268 134.413 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 267 163 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0/"q1/hSb//hSe10/"q1/hSb//hSe1/hR5.!s8W-!Wt&-/hR>4#6kD<#6uk6/hRJ<#mptF$4/=;/hR\H
%hK6^%hC9F/hRbL'+trl',)uN/hRtX(`4),(`4kX/hS(^)]K_8)]LC^/hS4f+!2RH+!3*f0/"q1/hSb/
/hSe10/"q1/hSb//hSe1~>
<~[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^L-oE,]c8DfE.n[^LU4IXQZoIX\`6[^LjBKnP/6KS?kC[^MB`
PEV2oPEWG`[^MWnS!oh9R[^ao[^N-5W2QYnW2R/5[^NEEYct@9YctRE[^Ni]]Y(ni]Y(\][^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ~>
<~R$a5,Q^=&*Q^=),R$a5,Q^=&*Q^=),Q^:-077BX66q*H/Q^:TJ;,U7g;c/mJQ^:iX=]nm1=]q)XQ^;E#
BPD-nBP<a!Q^;W/E,T]7EH%82Q^<8SJUrB'JUs/SQ^<VgMi3LOMi3pgQ^=;8St;OFSt;:8R$a5,Q^=&*
Q^=),R$a5,Q^=&*Q^=),~>
<~#mgtI$O[=M$O[7I#mgtI$O[=M$O[7I$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7
!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZt9!<E3%!<EQ9$O[";!WiE)!Wi`;#mgtI$O[=M
$O[7I#mgtI$O[=M$O[7I~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
268 138.169 mo
268 134.413 li
272.891 134.128 li
272.891 134.128 li
278 133.831 li
278 137.587 li
273.109 137.872 li
273.109 137.872 li
268 138.169 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 6 267 166 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 6 
/M[12 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~/hR>4#6kD<#6uk6/hRJ<#mptF$4/=;/hR\H%hK6^%hC9F/hRbL'+trl',)uN/hRtX(`4),(`4kX/hS(^
)]K_8)]LC^~>
<~[^LU4IXQZoIX\`6[^LjBKnP/6KS?kC[^MB`PEV2oPEWG`[^MWnS!oh9R[^ao[^N-5W2QYnW2R/5[^NEE
Yct@9YctRE~>
<~Q^:TJ;,U7g;c/mJQ^:iX=]nm1=]q)XQ^;E#BPD-nBP<a!Q^;W/E,T]7EH%82Q^<8SJUrB'JUs/SQ^<Vg
Mi3LOMi3pg~>
<~$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZt9
!<E3%!<EQ9~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381 135 mo
371 135 li
371 132.169 li
373.908 132 li
381 132 li
381 131.924 li
381 135 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 5 370 169 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 5 
/M[12 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~/hRtX(`4),(`4kX/hS(^)]K_8)]LC^/hS4f+!2RH+!3*f0/"q1/hSb//hSe10/"q1/hSb//hSe1~>
<~[^N-5W2QYnW2R/5[^NEEYct@9YctRE[^Ni]]Y(ni]Y(\][^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ~>
<~Q^<8SJUrB'JUs/SQ^<VgMi3LOMi3pgQ^=;8St;OFSt;:8R$a5,Q^=&*Q^=),R$a5,Q^=&*Q^=),~>
<~$OZq7!!!!!!!!B7$OZt9!<E3%!<EQ9$O[";!WiE)!Wi`;#mgtI$O[=M$O[7I#mgtI$O[=M$O[7I~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381 132 mo
373.908 132 li
376.046 131.876 li
381 131.924 li
381 132 li
381 125.174 mo
376.054 125.126 li
373.468 125 li
381 125 li
381 125.174 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[8.09524 0 0 7.38095 373.143 172.762 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 34 
/H 31 
/M[34 0 0 -31 0 31 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 34 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
j=^?`hmVU4r0Z[Ur<rN0j=^?`hmVU4r0[!^oF(R'j=^?`hmVU4r0[<glO3UsjsgE`/M?uTk,JNbYd1\9
[cW;IMiO!fR/`Q9!s8Z0"pk27jrXXL-nG6Lk*Q7CVQI3([dJ58EW0q\F*N=rPl@'4!!<6'":+o4lOs72
r=]5N+t3CBl\>IprJ(K:SZ&mo[e!i&?Mn(4?=%>hKTuJ&jT#>_!XAW3jotkt)^bM9mW\MN"F#K]U9X^+
r(QZTr(@2e9NZ%YOoC^.!!**)rX7ij!t,qk/cIBiEr9n[EcQYkT`D@s[d6N`7fGm[<+gQ=rg2[G!<EB'
$iL2+"T8Gu"T/?)"9]/O-2fIpG5ZR^G567\G5cUgG'.qYOeT,[[f&er9)V?W8cVH^8d7jZ8m#bSOoC^.
!!**)rX7il!Y-+pr@\+ppNc=T",)l5Z2V33:$>7Q=_iGJrg2[G!<EE($iU>-#6"er"p,;S-N,RrHi&3j
HguIcLR"[@rjMf&qbR5gpeUfb"]%p"D1@]IQfJ,I!=&N2rs&<)!!_ot!"]/N-N,RpIK4lnIe8*lM3b!D
rjM`'!)iVkq,.2lrDE`)DLdrMQfJ,I!XAW3rWi?,rWi6)q$7$6*%(V:rdXfqs*sQh",`JBZMq<3<;TVo
<;BJh<<Q6.E.F/OQfJ,I!XAW3pB^HurX&Q0!YHD!r@[5`",rYFZMq;p<WccMJWp)"j8]2^#6"u1$0MTr
&KN4s0'7cgNgciNrjLrk"(ZG)PQ$p3!<)s!!XAW3r!EE1q$R$+q?d<2&fi=t0'7ljO.3)RrjLrm"(cP*
PQ$p<!;-<m!XAK/r<iK2p^7!.rX&]?*[gn=k(s2'SuK'q[f'P2?2\+)?2e10>m"b`KTc>$q#Ka]!<NK)
$iUV4%0$e,$j%+a-iG[[N!#<:WjD]5k$\F.H%hKLQN3B5!!*-*rX8W6!"J`6q@3E6rXAoE+".">k)]\4
TrYO![f0n9AH-96AH$*ADL7,&rg2^H!W`?,rX8Z9r=Ai<ndbd<+=I+?k*#n9UTCg$[f'q=B`2ZEB_?$@
E.!J+rg2^H!W`?,rX8K4!"n]3!Z)t-r@\)6qj%2GpQb`BrfmSTUo^s&[f1(ACAquJC\MTCC]8&NF+&n1
rg2^H!W`B.rX7j#!Z3(/r@[5u".c9j[/RMrCBJ[.Mj=:.jT#>_!sef5rt4H-!Z<.0r@\)9qj@DMpQtrI
s-N_P".lBl[/RMrD?G$3Mj=:.jT#>_!sef5r=])Cq\&K6!Z<.0r@\#:s-rnSqj[GN"Il'_Y-e2:r,;US
qeu@NqJcXWG_(g=rg2^H!W`B.rX8`>q@ioCn.YpC+t3CBs.'+[n!sHKrLF%cW3<T-[cVW5HA%9Crg2^H
!W`B.rX8W=!#GAFoG.HI,601k0'8f/V5pi.rjM`J!-n<_oQUFcLQDD#jo>Ja!X&c-$iLn?(B#'F(A\dK
*$Zmcr\!?/"/i6*[JmW5HMr6iHLcFbJV]EdQf\8M!<NB/rX8E9nJ;9J,:P;F0'9&6X0/b9rjLs>!eZDo
rKlXH!s&H+#Q>,2)<_q?*[E0fr\!?4"0A]3[JmVsK*$geP5Ua0!<W?(":+o6jr"4A,Ur[Ek,\WeYd=;:
k(NnoNK]b/QgXtL!<N<*#Q>+n)$1m*.fD!^XTG]2Zi.>pLBEHqPF2?9kQ1Y`!WiK0rX45~>

%%EndBinary
grestore
np
371 128.413 mo
371 125 li
373.468 125 li
376.054 125.126 li
381 125.174 li
381 128.173 li
376.039 128.125 li
376.027 128.125 376.014 128.125 376.002 128.125 cv
375.978 128.125 375.954 128.125 375.929 128.126 cv
375.912 128.127 375.895 128.128 375.878 128.129 cv
371 128.413 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[10.4762 0 0 3.80952 370.762 176.333 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 44 
/H 16 
/M[44 0 0 -16 0 16 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
r%Hq[r%IuWhmWHlr0ZB.r0[Bgh[B>gr%Hq[r%IuWjL4upr3uTkhj=8.r!D6gr!E9Skq;]_r%IuWhmWHl
r0ZB.r0[BgmL/Rnr!E<T!\Q&Uj!k*]/M?uTrjN!<Z`pOkWWT?,ZaTkBrg3eSPE(RoL@9j!MiO!frg<Zk
!sf)7"QKRd"9eu8rX&NV!\5ZDiu\=I-nG6LrjN!:Xeq`eR-L%@T;J`trjVlo"-easGjBGIE<L?-K8c&o
R/RBo#6Y)/irB/^!X&c-$2lIZ.3]ZD'C$52')`IF)BpU.0)i9]Z`'FVk_B.mrJ(K:SZ&mo[f2TqP_=3o
l<aBo"^YMLG(c+ZQi7?m"p"c+i;`o[!XAW3r@S-u)\:s5!Y64sr@\)X"0nS`KBmaXFp</CP+o4i[K*c8
QNNA!C09apr(@2e9NZ%YOoC^H$NUG4hZ*ZX#6##0/d![N(^o@+!"/iF,VB!JrjDp6ToachEr9n\EcQYk
Ts=U*rg*_JHY6=B8,c!W7fu_'H]S/mrX/`1!Ta=Y!!**(rX8ZW![S]mq?-[!r<)iuqu[')":Z4pr@\)X
"0nS_JbjQgFo?LZFT?UaFU!#3Fb,[LZ2V32QNN@tBNY+&rC[#[qapo^8kK"S#"_EZ=D3)Erg3Tl!<rS^
!!**)rX8ZW![S`piroJo)C>>7rjDp6UQ^?.GkQFSGlr_`UTsg,rg*_LI;<$a:$>7Q=_iGJrg3Tl!<rS^
!!**)rX8ZW![\isqZZm%rWVfr!Y64sr@\)X"0nYeL\lGqI/eQ`Hio.hUpC!.rg*_LIr/Kg;#=&g;#!ia
;$B`k?#>(Rrg3Tl!<rT#!9X=_!=&N2r@S-u)\DoOq?I!)n-9"+*%(V:rjDp7UmHr6IK4lnIe8*lM3b!D
rjMfm"I"@R?W6f"!)iVkq,.2lrDE`)DLdrMQi7?n"p3Z^!<NK)$iM[Z-6*To#Q+l,#Or'$&KE.r0)i9]
ZDEqGqg\Kns*sQh",`JBZMq<3QNNG'E+&QBqc!Moq,@,i"B/]IJ<Tu!rX/`2!oEtZ!X9&4$iM[Z-63]_
#lY/0#QbSX-N,Rr[KEh3R>^*V",rYFZMq<3QNNG'EFIm."(?2#PQ$pJ$NUG5hZ*ZY#6##//cm@?'&s9"
&KN4s0)i9]ZDO(Mk_&ec"-/hIZMq<3QNNG(Eb+34"(ZG)PQ$pJ$NUG5hZ*ZY#6##//cm@@'DVt8$2Fr-
$3(>.$3LSI*@C_;rjDp7W1/h-L'*L+W3ZE2rg*_NJobM`=p&>WJs62#rX/`2!q63Z!!*-*rX45~>

%%EndBinary
grestore
np
371 132.169 mo
371 128.413 li
375.878 128.129 li
375.895 128.128 375.912 128.127 375.929 128.126 cv
375.954 128.125 375.978 128.125 376.002 128.125 cv
376.014 128.125 376.027 128.125 376.039 128.125 cv
381 128.173 li
381 131.924 li
376.046 131.876 li
373.908 132 li
371 132.169 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 6 370 172 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 6 
/M[12 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~/hR>4#6kD<#6uk6/hRJ<#mptF$4/=;/hR\H%hK6^%hC9F/hRbL'+trl',)uN/hRtX(`4),(`4kX/hS(^
)]K_8)]LC^~>
<~[^LU4IXQZoIX\`6[^LjBKnP/6KS?kC[^MB`PEV2oPEWG`[^MWnS!oh9R[^ao[^N-5W2QYnW2R/5[^NEE
Yct@9YctRE~>
<~Q^:TJ;,U7g;c/mJQ^:iX=]nm1=]q)XQ^;E#BPD-nBP<a!Q^;W/E,T]7EH%82Q^<8SJUrB'JUs/SQ^<Vg
Mi3LOMi3pg~>
<~$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZt9
!<E3%!<EQ9~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
484 136 mo
474 136 li
474 133 li
484 133 li
484 126.5 li
484 136 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 11 473 168 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 11 
/M[12 0 0 -11 0 11 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0/"q1/hSb//hSe1/hR5.!s8W-!Wt&-/hR>4#6kD<#6uk6/hRJ<#mptF$4/=;/hR\H%hK6^%hC9F/hRbL
'+trl',)uN/hRtX(`4),(`4kX/hS(^)]K_8)]LC^/hS4f+!2RH+!3*f0/"q1/hSb//hSe10/"q1/hSb/
/hSe1~>
<~[^NWQ[^NWQ[^NWQ[^L-oE,]c8DfE.n[^LU4IXQZoIX\`6[^LjBKnP/6KS?kC[^MB`PEV2oPEWG`[^MWn
S!oh9R[^ao[^N-5W2QYnW2R/5[^NEEYct@9YctRE[^Ni]]Y(ni]Y(\][^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ~>
<~R$a5,Q^=&*Q^=),Q^:-077BX66q*H/Q^:TJ;,U7g;c/mJQ^:iX=]nm1=]q)XQ^;E#BPD-nBP<a!Q^;W/
E,T]7EH%82Q^<8SJUrB'JUs/SQ^<VgMi3LOMi3pgQ^=;8St;OFSt;:8R$a5,Q^=&*Q^=),R$a5,Q^=&*
Q^=),~>
<~#mgtI$O[=M$O[7I$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7!!!!!!!!B7$OZq7
!!!!!!!!B7$OZq7!!!!!!!!B7$OZt9!<E3%!<EQ9$O[";!WiE)!Wi`;#mgtI$O[=M$O[7I#mgtI$O[=M
$O[7I~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
484 133 mo
474 133 li
474 132.827 li
478.982 132.875 li
478.988 132.875 478.994 132.875 479 132.875 cv
480.027 132.875 480.865 132.048 480.875 131.018 cv
480.881 130.398 480.585 129.846 480.125 129.5 cv
480.575 129.162 480.869 128.625 480.875 128.018 cv
480.881 127.399 480.585 126.846 480.125 126.5 cv
484 126.5 li
484 133 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[10.4762 0 0 6.90476 473.762 171.762 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 44 
/H 29 
/M[44 0 0 -29 0 29 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
r%Hq[r%HU/r0ZB.r0[Bgh[B>gr@\4)/M,p3!\>oUr@e/Y"1>G=XQHP^WWT?,ZF0\?rg3eSPE(R]L'*?o
PF)99rWrZ4"pG.i!s8Z0"pk27r@\4&-mS%"q&]Y_-nG6LrjDp8Xeq`NQiitXXgA#8rg3ePN.ZB@F8BkZ
F*N=rPl@'L#m1D8!WhcjoDeso!X&c-$2lIX.3]\o'*&[D'*9'r./bdt[KEk7SWN&j!/CH-"-B(PZi7E4
QNNJ*G%pVUp0RZ&"^YMLG(c+ZQi7?o"p+ha!!30&#6##//cm@=&*!iq%iZko0)i9]Z(dD6qKMLSqK<!c
K9Dt6rjMfm"-J%I=R&TX9*J!_=DE;Irg3Tl!<rS^!!**)rX8]X"YCu:$NgLm!s8oJ,VB!JrjDp6Toach
Er9n\EcQYkTs=U*rg*_JHY6=B8,c!W7fu_'H]S/mrX/]0!!1sW!<EB'$iM[Z,oI-f"8rB$"8N)t!sA`0
%2gJj0)i9]Z(dA3qKDg[rHA!Z!-\?a#^1?5JWZ\3[^H1Erg*_LHtZXY8c;9[8bksY8cD<d8P2TWBRGsA
Qi7?n"p*T]!<EE($iM[Z,oR9R"TT#5)C>>7rjDp6UQ^?.Gj'DTKTi19rjMfm"-J"I>5V+Y9ESF5I?FMq
rX/`2!Ta=Y!!**)rX8ZW![\isqZZm%rWVfr!Y64sr@\)X"0nYeL\lGqI/eQ`Hio.hUpC!.rg*_LIr/Kg
;#=&g;#3uf:]+&n:JY85J!'_srX/`2!T*kX!=&N2r@S-u)\DoOq?I!)n-9"+*%(V:rjDp7UmHr6IK4lo
IK4ihIfkOnV6^*/rg*_NJ8S`i;ZK_k;u';k<;f\s?Z(CXrg3Tl!<rV_!!*-*rX8ZW![\luqZm$)rWhs!
!YHD!r@\)X"1"bjMYho#JH(,hJ-1[rV6^*/rg*_NJoG,p<;TVo<;BJh<<Q6.E.F/OQi7?n"p4T#k5YMa
#6##//cm@?&a9T#$2t23&KE.r0)i9]ZDEtIj+.;kRAR:h[f2TrPCdd_<od9`@<$j^rg3Tl!<rV_!!*-*
rX8ZW![\p#is>c!*@C_;rjDp7VOEM)K*..&VR$30rg*_NK5tM_=9E)SK9Q;$rX/`2!oEtZ!X9&4$iM[Z
-6<ir$31D.$N(5,$3LSI*@C_;rjDp7W1/h-L'*L+W3ZE2rg*_NJobM`=p&>WJs62#rX/`2!oEtY!XAW3
r[n:)-QWrt$iLG2$ht).$iUJ7'-8P"0)i9]Z`0LYk_]4o"-T7TZi7E4QNNJ*G%g_YrE]A.pg*l*r`oV>
G(c%XQi7?n"p3Z^!<NK)$iM[Z-Qa*#%JpS6%JpS.$j%+a-iG[s[KEk9Ss88o"-fFXZi7E4QNNJ-H#2ML
")<+8Pl@$K$N^M6!V$0Z!!*-*rX8ZW![f*,q$mB6q%!61rXSo:!Yuk*r@\)X"1,&%R,a81R%^RerjMfm
"-eUgDYn&EAH-3?B(9C6DL7,&rg3Tl!X8],i;`o[!XAW3r@S."+;jqdr=Ai<ndbd<+=I+?rjDp8XJ;6^
PN\24R\QsjrjMfm"-eXkEr'MKB`2Z9BEN4$Lm7n*rX/c3!s.?\!W`?,rX8ZW![o3/oah*8n.5X;+=R1@
rjDp9XJD?_Pl$aGPkUIBPl?pMS#!-mrjMfm"-n^mF8KbMCB&)DCAr#JC'/O*M3\(,rsJo:#6P"c!!30'
#Q>,0/cmFE(ul20(a1=+0)i9][&p0pj-Be<V6.-([f2TqQ&C-7j(ea=IuBTkQi7?o#6P"c!!30'#Q>,0
/cmFE)#P!1&d&aa+Xm:ArjDp9XehZeQi!0MQhQmHQi<?SSu/WsrjMfm"-ndpFlR?AFb#C8rg3Tl!XAf.
kQ(GZ!W`B.rX8ZW![o30q@`c@q\&K6!Z<.0r@\)X"155.T_Y&VS,8ZOS,/QVS"Q^_[/RN5QNNM1Jp7$/
s)@jRrc%jUqJcXWG_(g=rg3Tl!XAf.i;`o[!sef5r@S."+WC7lq@ioCn.YpC+t3CBrjDp9YGn8oSG8ZK
SH,2YSHGXcYI+;;rg*_PN.Q?8Es$`ANKsL0rX/c4!s.?\!W`B.rX8ZW![o63q%WlFq%`N;!ZWF6r@\)X
"1>A6UuS*MV5pi.rjMcl!f_n^q/ua_q0)CT!e#ibrKmKk!s\o0!TO.\!<N9)#Q>,1/d!aU,96Orr>,>J
neM<I,:P;F0)i9][BZg2j.ldTXKf24[f)NoOGJJaHMr6iHM)[bHiekTOStOF$NgV:!Wh<]!s&H+#Q>,1
/d!aU,9>e\"!&U80E*U'[KEqCY,^fcq54=qY-PJ7[f)NoP)G"RJ-(@]P5UaH$NgV:!Wh<]!s&H+#Q>,1
/d!aU,TcFmoGI`P,UkDG0)i9][Bd!;j/E-^YHkS8[f)NoP)P1VK*$geP5UaH$N^P9!qZN]!<N<*#Q>,0
/cmII*oe+>*[E350)`3[Z`pUmX9,Q/Zi.?3QNNV=NJ[Lcl@f=sNK]b/Qi7?o#6Y+e!<N<*#Q>,0/cmLJ
+6+4?+!`?70)`3]['?g:XlZYdYHbG4[f2TqR$<Yij+d_pO->t1Qi7?o#6Y+e!<N<*#Q>*]~>

%%EndBinary
grestore
np
484 126.5 mo
480.125 126.5 li
479.817 126.268 479.434 126.129 479.018 126.125 cv
474 126.076 li
474 126 li
484 126 li
484 126.5 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[10.4762 0 0 .952381 473.762 178.19 ]ct
snap_to_device
<<
/T 1
/W 44 
/H 4 
/M[44 0 0 -4 0 4 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0/"t30.nk0/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb00/"t30/"t30.nk0/hSb//hSb//hSb/
/hSb//hSb//hSb//hSb//hSb00/"t30/"t30.nk0/hSb//hSb//hSb//hSb//hSb//hSb//hSb//hSb0
0/"t30/"t3/hJV(.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt.P*/(0/"t3~>
<~[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ
[^NWQ[^NWPZEUF1WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!WiWG1[C3NP~>
<~R$a8.R$X/+Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&+R$a8.R$a8.R$X/+Q^=&*Q^=&*Q^=&*
Q^=&*Q^=&*Q^=&*Q^=&*Q^=&+R$a8.R$a8.R$X/+Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&+
R$a8.R$a8-PE(QUL5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5(G;L5V(UQ^F/-~>
<~#mgnE#n%+K$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=K#mgnE#mgnE#n%+K$O[=M$O[=M$O[=M
$O[=M$O[=M$O[=M$O[=M$O[=K#mgnE#mgnE#n%+K$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[=K
#mgnE#mgnD"pG,3!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!sAc3#RLeD~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
480.125 129.5 mo
479.817 129.268 479.434 129.129 479.018 129.125 cv
474 129.076 li
474 126.076 li
479.018 126.125 li
479.434 126.129 479.817 126.268 480.125 126.5 cv
480.585 126.846 480.881 127.399 480.875 128.018 cv
480.869 128.625 480.575 129.162 480.125 129.5 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[7.38095 0 0 3.80952 473.762 175.333 ]ct
snap_to_device
<<
/T 1
/W 31 
/H 16 
/M[31 0 0 -16 0 16 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0/"t30.nk0/hSb//hSb//hSb//hSb//hSb//hSb00/"t3/hSb//hSb//hSb//hSb//hSb//hSb//hSe1
0/"t2/hSb//hSb//hSb//hSb//hSb//hSb//h\k20.nh-.Olnt.Olnt.Olnt.Olnt.Olnt.Olnt0/"t3
.juVa+!2RH+!2RH+!2RH+!2RH+!2RH+!2RW/hSb*+rV+.',)#m',)#m',)#m',)#m',)#m',)uN/hSIi
%gE4B"pP89"pP89"pP89"pP89"pP89"thM\/L2/@!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-/hSb/,oI*n
!s8W-!s8Z/"9\f/!s8Z/"9\i1"9\fZ/hSb&)@coS"U,&5"U,&5"U,&5"U,&5"U,&5"U-M2/hSIi%g<+?
"U,&6"pP89"U,&6"pP89"pP89"thM\/g_MK"pP89"pYA<#6tJ="pYA<#6tJ=#6tJ=/hSb/-6*R%#6tJ=
#7(S@#RCY?#7(S@#RC\A#RC\g/hSb'*>&P_#RC\A#RC\A#RC\A#RC\A#RC\A#RE%8/hSIk&d\jN#mgnE
#mgnE#mgnE#mgnE#mgnE#qdh_/g_VQ$47+I$47+I#mq"H$47+I$4."F#mgqG~>
<~\$riU\$i`R[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWR\$riU[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NZS
\$riT[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^NWQ[^W`T[^33>WiE)!WiE)!WiE)!WiE)!WiE)!WiE)!\$riR
Xeq_XR$a8.R$a8.R$a8.R$a8.R$a8.R$a8L[^NN@SWJV^LPLY?LPLY?LPLY?LPLY?LPLY?LPN=H[]uQi
K6MN`GB\7TGB\7TGB\7TGB\7TGB\7SG.+ifZ([8/EcQ2@EcQ2@EcQ2@EcQ2@EcQ2@EcQ2?[^NWLU61"M
G'8%PG'8"NF`hkNG'8"NF`hhLF`hl9[^NH9PCn+)G^+IYH$O[\H$O[\H$O[\H$O[\H$Qj,[]uWnLO4Ap
H[C*eI!g<hI!^3fI!g<hI!g<hI($JlZD<hDIXZ`pIXZ`pIsuiqIXZ`pIXcisIt)rt[^NWMV3m-iIt)rt
It3'"J:N0"It3'"J:N0#J:N0Y[^NK<R>ZWIJUrB'JUrB'JUrB'JUrB'JUrB'JUt8<[^)d!NIuk9K7ef/
K7ef/K7ef/K7ef/K7ef/K=84sZDa7QL5(G;L5(G;L5(G;L5(G;L5(G;L5(G;~>
<~R$a8.R$X/+Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&+R$a8.Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=),
R$a8-Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^=&*Q^F/-Q]mGfL5(G;L5(G;L5(G;L5(G;L5(G;L5(G;R$a8*
N.Z@rF)uDDF)uDDF)uDDF)uDDF)uDDF)c2dQ^<qiG%k8h?=$rE?=$rE?=$rE?=$rE?=$rE?<rnaQ]Z`3
=A2C^9MA,R9MA,R9MA,R9MA,R9MA,R9:)!3O*bM=7n6'>7n6'>7n6'>7n6'>7n6'>7n6'>Q^=&$HtZVR
8P)KF8P)NH8kMZH8P)NH8kM]J8kM[AQ^<h_CKaG,9he>U9MA,R9MA,R9MA,R9MA,R9MCe>Q]Zc7>u4?o
:f'ta:JXb^:Jak`:JXb^:JXb^;4!W9PCROX;c?Un;c?Un;H$Lm;c?Un;c6Lk;GpCjQ^=&&JoG*s<)cgr
<)Z^o;c?Uo<)Z^o;c?Un;cQhaQ^<nfEFDmK<`W7%<`W7%<`W7%<`W7%<`W7%<`YQRQ]m&BA6;r9=BJ[-
=BJ[-=BJ[-=BJ[-=BJ[-=I5A@PCdje>$>*5>$>*5>$>*5>$>*5>$>*5>$>*5~>
<~#mgnE#n%+K$O[=M$O[=M$O[=M$O[=M$O[=M$O[=K#mgnE$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$O[7I
#mgnG$O[=M$O[=M$O[=M$O[=M$O[=M$O[=M$OI+G#R1G8!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-#mgnC
"9JT(!!!!!!!!!!!!!!!!!!!!!!!!!!!!!,$O[.?!<<*"!!!!!!!!!!!!!!!!!!!!!!!!!!!!B7$O-V3
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"0/B"T\T'!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$O[=H!<<*"
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!,$O[.>!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!B7$O-V3!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!"0/B"p+c)!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!$O[=H!WW3#!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!,$O[.?!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!B7$O-Y4!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!"0/B"p+c)!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
479 132.875 mo
478.994 132.875 478.988 132.875 478.982 132.875 cv
474 132.827 li
474 129.076 li
479.018 129.125 li
479.434 129.129 479.817 129.268 480.125 129.5 cv
480.585 129.846 480.881 130.398 480.875 131.018 cv
480.865 132.048 480.027 132.875 479 132.875 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[9 0 0 6 473 171 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 6 
/M[9 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~/hR>4#6kD<#;.V9$4.%G#mr:;&.f?`%hB1'/eSd1&ebol/hRtX(`4),(bRE[)]K_8)]J~>
<~[^LU4IXQZoI^Z\<KS>)5KnQnCPEV2oPEV3=[[NYSR[]e8[^N-5W2QYnW4'.=Yct@9Ycn~>
<~Q^:TJ;,U7g;jWhR=]nm1=]q)XBk_6pBP;(GQZ$e]DfBZ8Q^<8SJUrB'JX;^]Mi3LOMi.~>
<~$OZq7!!!!!!"0/7!!!!!!!!B7!!!!!!!!!,$NL/,!!!!!$OZq7!!!!!!"0/8!<E3%!<E~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
67.0728 97.1264 mo
170.073 101.126 li
171.108 101.167 171.914 102.038 171.874 103.073 cv
171.833 104.108 170.962 104.914 169.927 104.874 cv
66.9272 100.874 li
65.8925 100.833 65.0862 99.962 65.1264 98.9273 cv
65.1667 97.8925 66.038 97.0863 67.0728 97.1264 cv
169.891 101.128 mo
272.891 95.1282 li
273.925 95.068 274.812 95.8572 274.872 96.891 cv
274.932 97.9248 274.143 98.8116 273.109 98.8718 cv
170.109 104.872 li
169.075 104.932 168.188 104.143 168.128 103.109 cv
168.068 102.075 168.857 101.188 169.891 101.128 cv
273.091 95.1273 mo
376.091 100.127 li
377.125 100.177 377.923 101.057 377.873 102.091 cv
377.823 103.125 376.943 103.923 375.909 103.873 cv
272.909 98.8729 li
271.875 98.8226 271.077 97.9434 271.127 96.9091 cv
271.177 95.8748 272.057 95.077 273.091 95.1273 cv
376.03 100.125 mo
479.03 101.791 li
480.066 101.808 480.891 102.66 480.875 103.696 cv
480.858 104.731 480.005 105.557 478.97 105.54 cv
375.97 103.875 li
374.934 103.858 374.109 103.005 374.125 101.97 cv
374.142 100.934 374.995 100.108 376.03 100.125 cv
.397925 .0829786 .8009 0 cmyk
f
72 104 mo
62 104 li
62 93.9999 li
72 93.9999 li
72 97.3178 li
67.0728 97.1264 li
67.048 97.1255 67.0234 97.125 66.9989 97.125 cv
65.9968 97.125 65.1657 97.9173 65.1264 98.9273 cv
65.0862 99.962 65.8925 100.833 66.9272 100.874 cv
72 101.071 li
72 104 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 61 200 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!%92p!!!!!!!!!!!%92p!!!!!!!!!!#!b<U!!!!!!!!!!-;$oY!!!!!!!!!'5<:hh"onW'!!!!G
8j>O7-NF,H!!!3g7RKR55R%2g!!"9<8kVcK:+$#A"pR@j:JXb^;*G0g,U>l]='&I)=%=M]5!D4s5X7S"
5X7Ls5!D4s5X7S"5X7Ls~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!ii1!!!!!!!!!!!!!!!!!!!!!!!!!
#QOi0!!!!!!!!!!!<<*#!!!!!!!!!&!WiE)"onW'!!!!&!s8W-"TSN&!!!')"pP89"p+c)!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!+K@:!!!!!!!!!!!+K@:!!!!!!!!!!&>Gp2!!!!!!!!!!@@Nft!!!!!!!!!1TS\Ju&-)\1!!!"-
TotS6@fQK/!!!S(SXGq;UC[D*!!$E)W2QYnWaYr.&.kP@Z*CR=ZD.sB?sp%L]tV1n^8kXLU8"N^VP^5f
VP^)^U8"N^VP^5fVP^)^~>
<~!!!!!!#-.J!!!!!!!!!!!#-.J!!!!!!!!!!"!o>t!!!!!!!!!!(]sdR!!!!!!!!!$-3+#m!rr<$!!!!9
#QOi/'`\46!!!*J!!!!!-3F5J!!!lH!!!!!$PrdC!s9hL!!!!!!%7pO)&X7k!!!!!!#QRk-n$Pp.Olnt
.Olhp-n$Pp.Olnt.Olhp~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
72 101.071 mo
66.9272 100.874 li
65.8925 100.833 65.0862 99.962 65.1264 98.9273 cv
65.1657 97.9173 65.9968 97.125 66.9989 97.125 cv
67.0234 97.125 67.048 97.1255 67.0728 97.1264 cv
72 97.3178 li
72 101.071 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[9 0 0 6 64 203 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 6 
/M[9 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~?qj?j:LIR<?sQ)[3^I%Z?sl]'5<hq>?smA07RKR56X=)-:.e/O8l/8j?r9]q:JXhR?!R~>
<~'aY-O#o+0i'b^TJ!!*`J'bq#\!!!61'bqGa!<<*#!>?1_"Te`,!X8rG'a4[A!s8]-',(~>
<~^9=3(Z+drd^:^A#Lo7o"^:peKP*2fL^:q=[SXGq;WP#sZXJi(rW3<G>^9Y#KZ*CU6]Y"~>
<~!#Pe='`\46!!=PJ!%%dJ!!!iA!!!3<!!!!G!!!!!-3F5J%KHJ/!"0SC!!!!!!!!!I!s8~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
175 108 mo
165 108 li
165 104.682 li
169.906 104.873 li
169.936 104.874 169.967 104.875 169.998 104.875 cv
170.001 104.875 170.003 104.875 170.006 104.875 cv
170.048 104.875 170.091 104.873 170.133 104.87 cv
175 104.587 li
175 108 li
169.982 101.123 mo
165 100.929 li
165 98 li
175 98 li
175 100.831 li
169.982 101.123 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 164 196 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!%92p!!!!!!!!!!!%92p!!!!!!!!!!#!b<U!!!!!!!!!!-;$oY!!!!!!!!!'5<:hh"onW'!!!!G
8j>O7-NF,H!!!3g7RKR55R%2g!!"9<8kVcK:+$#A"pR@j:JXb^;*G0g,U>l]='&I)=%=M]5!D4s5X7S"
5X7Ls5!D4s5X7S"5X7Ls~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!ii1!!!!!!!!!!!!!!!!!!!!!!!!!
#QOi0!!!!!!!!!!!<<*#!!!!!!!!!&!WiE)"onW'!!!!&!s8W-"TSN&!!!')"pP89"p+c)!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!+K@:!!!!!!!!!!!+K@:!!!!!!!!!!&>Gp2!!!!!!!!!!@@Nft!!!!!!!!!1TS\Ju&-)\1!!!"-
TotS6@fQK/!!!S(SXGq;UC[D*!!$E)W2QYnWaYr.&.kP@Z*CR=ZD.sB?sp%L]tV1n^8kXLU8"N^VP^5f
VP^)^U8"N^VP^5fVP^)^~>
<~!!!!!!#-.J!!!!!!!!!!!#-.J!!!!!!!!!!"!o>t!!!!!!!!!!(]sdR!!!!!!!!!$-3+#m!rr<$!!!!9
#QOi/'`\46!!!*J!!!!!-3F5J!!!lH!!!!!$PrdC!s9hL!!!!!!%7pO)&X7k!!!!!!#QRk-n$Pp.Olnt
.Olhp-n$Pp.Olnt.Olhp~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
169.998 104.875 mo
169.967 104.875 169.936 104.874 169.906 104.873 cv
165 104.682 li
165 100.929 li
169.982 101.123 li
175 100.831 li
175 104.587 li
170.133 104.87 li
170.091 104.873 170.048 104.875 170.006 104.875 cv
170.003 104.875 170.001 104.875 169.998 104.875 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 6 164 199 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 6 
/M[12 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~?smAM9heAY?smAM?smAJ697.n?!q&J?smA:9g:j<:LIR<?sm8-7RKR56X=)-?slZ'8kVcK:ekD+?!Tiq
:JXb^;*eJn~>
<~'bqGu#m^eC'bqGu'bqGs!<<*#',;5s'bqGi#QOi0#o+0i'bqA_!<<*#!>?1_'bq#Y!WiE)"pl"Z',(BM
!s8W-"T]8M~>
<~^:q=qYFqVp^:q=q^:q=oVhp5-]Y;+o^:q=bVim4BZ+drd^:q7YSXGq;WP#sZ^:pePW2QYnYHYaT]Y(2K
Z*CR=ZDkLL~>
<~!!!!!(]sdR!!!!!!!!!$-3+#m!rr<$!!!!9#QOi/'`\46!!!*J!!!!!-3F5J!!!lH!!!!!$PrdC!s9hL
!!!!!!%7pO~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
278 102 mo
268 102 li
268 99.1695 li
273.009 98.8777 li
278 99.12 li
278 102 li
268 95.4131 mo
268 92 li
278 92 li
278 95.3656 li
273.122 95.1288 li
273.082 95.1262 273.042 95.1249 273.002 95.1249 cv
272.986 95.1249 272.97 95.1251 272.954 95.1255 cv
272.952 95.1256 272.949 95.1257 272.947 95.1257 cv
272.947 95.1257 272.947 95.1257 272.946 95.1257 cv
272.921 95.1264 272.896 95.1276 272.871 95.1293 cv
268 95.4131 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 267 202 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!%92p!!!!!!!!!!!%92p!!!!!!!!!!#!b<U!!!!!!!!!!-;$oY!!!!!!!!!'5<:hh"onW'!!!!G
8j>O7-NF,H!!!3g7RKR55R%2g!!"9<8kVcK:+$#A"pR@j:JXb^;*G0g,U>l]='&I)=%=M]5!D4s5X7S"
5X7Ls5!D4s5X7S"5X7Ls~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!ii1!!!!!!!!!!!!!!!!!!!!!!!!!
#QOi0!!!!!!!!!!!<<*#!!!!!!!!!&!WiE)"onW'!!!!&!s8W-"TSN&!!!')"pP89"p+c)!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!+K@:!!!!!!!!!!!+K@:!!!!!!!!!!&>Gp2!!!!!!!!!!@@Nft!!!!!!!!!1TS\Ju&-)\1!!!"-
TotS6@fQK/!!!S(SXGq;UC[D*!!$E)W2QYnWaYr.&.kP@Z*CR=ZD.sB?sp%L]tV1n^8kXLU8"N^VP^5f
VP^)^U8"N^VP^5fVP^)^~>
<~!!!!!!#-.J!!!!!!!!!!!#-.J!!!!!!!!!!"!o>t!!!!!!!!!!(]sdR!!!!!!!!!$-3+#m!rr<$!!!!9
#QOi/'`\46!!!*J!!!!!-3F5J!!!lH!!!!!$PrdC!s9hL!!!!!!%7pO)&X7k!!!!!!#QRk-n$Pp.Olnt
.Olhp-n$Pp.Olnt.Olhp~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
268 99.1695 mo
268 95.4131 li
272.871 95.1293 li
272.896 95.1276 272.921 95.1264 272.946 95.1257 cv
272.947 95.1257 272.947 95.1257 272.947 95.1257 cv
272.949 95.1257 272.952 95.1256 272.954 95.1255 cv
272.97 95.1251 272.986 95.1249 273.002 95.1249 cv
273.042 95.1249 273.082 95.1262 273.122 95.1288 cv
278 95.3656 li
278 99.12 li
273.009 98.8777 li
268 99.1695 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 6 267 205 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 6 
/M[12 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~?smAM9heAY?smAM?smAJ697.n?!q&J?smA:9g:j<:LIR<?sm8-7RKR56X=)-?slZ'8kVcK:ekD+?!Tiq
:JXb^;*eJn~>
<~'bqGu#m^eC'bqGu'bqGs!<<*#',;5s'bqGi#QOi0#o+0i'bqA_!<<*#!>?1_'bq#Y!WiE)"pl"Z',(BM
!s8W-"T]8M~>
<~^:q=qYFqVp^:q=q^:q=oVhp5-]Y;+o^:q=bVim4BZ+drd^:q7YSXGq;WP#sZ^:pePW2QYnYHYaT]Y(2K
Z*CR=ZDkLL~>
<~!!!!!(]sdR!!!!!!!!!$-3+#m!rr<$!!!!9#QOi/'`\46!!!*J!!!!!-3F5J!!!lH!!!!!$PrdC!s9hL
!!!!!!%7pO~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381 107 mo
371 107 li
371 103.635 li
375.909 103.873 li
375.935 103.874 375.961 103.875 375.986 103.875 cv
381 103.956 li
381 107 li
381 100.206 mo
376.058 100.126 li
371 99.8801 li
371 97 li
381 97 li
381 100.206 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 370 197 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!%92p!!!!!!!!!!!%92p!!!!!!!!!!#!b<U!!!!!!!!!!-;$oY!!!!!!!!!'5<:hh"onW'!!!!G
8j>O7-NF,H!!!3g7RKR55R%2g!!"9<8kVcK:+$#A"pR@j:JXb^;*G0g,U>l]='&I)=%=M]5!D4s5X7S"
5X7Ls5!D4s5X7S"5X7Ls~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!ii1!!!!!!!!!!!!!!!!!!!!!!!!!
#QOi0!!!!!!!!!!!<<*#!!!!!!!!!&!WiE)"onW'!!!!&!s8W-"TSN&!!!')"pP89"p+c)!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!+K@:!!!!!!!!!!!+K@:!!!!!!!!!!&>Gp2!!!!!!!!!!@@Nft!!!!!!!!!1TS\Ju&-)\1!!!"-
TotS6@fQK/!!!S(SXGq;UC[D*!!$E)W2QYnWaYr.&.kP@Z*CR=ZD.sB?sp%L]tV1n^8kXLU8"N^VP^5f
VP^)^U8"N^VP^5fVP^)^~>
<~!!!!!!#-.J!!!!!!!!!!!#-.J!!!!!!!!!!"!o>t!!!!!!!!!!(]sdR!!!!!!!!!$-3+#m!rr<$!!!!9
#QOi/'`\46!!!*J!!!!!-3F5J!!!lH!!!!!$PrdC!s9hL!!!!!!%7pO)&X7k!!!!!!#QRk-n$Pp.Olnt
.Olhp-n$Pp.Olnt.Olhp~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381 103.956 mo
375.986 103.875 li
375.961 103.875 375.935 103.874 375.909 103.873 cv
371 103.635 li
371 99.8801 li
376.058 100.126 li
381 100.206 li
381 103.956 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 6 370 200 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 6 
/M[12 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~?smAM9heAY?smAM?smAJ697.n?!q&J?smA:9g:j<:LIR<?sm8-7RKR56X=)-?slZ'8kVcK:ekD+?!Tiq
:JXb^;*eJn~>
<~'bqGu#m^eC'bqGu'bqGs!<<*#',;5s'bqGi#QOi0#o+0i'bqA_!<<*#!>?1_'bq#Y!WiE)"pl"Z',(BM
!s8W-"T]8M~>
<~^:q=qYFqVp^:q=q^:q=oVhp5-]Y;+o^:q=bVim4BZ+drd^:q7YSXGq;WP#sZ^:pePW2QYnYHYaT]Y(2K
Z*CR=ZDkLL~>
<~!!!!!(]sdR!!!!!!!!!$-3+#m!rr<$!!!!9#QOi/'`\46!!!*J!!!!!-3F5J!!!lH!!!!!$PrdC!s9hL
!!!!!!%7pO~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
484 109 mo
474 109 li
474 105.46 li
478.97 105.54 li
478.98 105.541 478.99 105.541 479.001 105.541 cv
480.022 105.541 480.858 104.721 480.875 103.696 cv
480.891 102.66 480.066 101.808 479.03 101.791 cv
474 101.709 li
474 99 li
484 99 li
484 109 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 473 195 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!!%92p!!!!!!!!!!!%92p!!!!!!!!!!#!b<U!!!!!!!!!!-;$oY!!!!!!!!!'5<:hh"onW'!!!!G
8j>O7-NF,H!!!3g7RKR55R%2g!!"9<8kVcK:+$#A"pR@j:JXb^;*G0g,U>l]='&I)=%=M]5!D4s5X7S"
5X7Ls5!D4s5X7S"5X7Ls~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!ii1!!!!!!!!!!!!!!!!!!!!!!!!!
#QOi0!!!!!!!!!!!<<*#!!!!!!!!!&!WiE)"onW'!!!!&!s8W-"TSN&!!!')"pP89"p+c)!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~!!!!!!+K@:!!!!!!!!!!!+K@:!!!!!!!!!!&>Gp2!!!!!!!!!!@@Nft!!!!!!!!!1TS\Ju&-)\1!!!"-
TotS6@fQK/!!!S(SXGq;UC[D*!!$E)W2QYnWaYr.&.kP@Z*CR=ZD.sB?sp%L]tV1n^8kXLU8"N^VP^5f
VP^)^U8"N^VP^5fVP^)^~>
<~!!!!!!#-.J!!!!!!!!!!!#-.J!!!!!!!!!!"!o>t!!!!!!!!!!(]sdR!!!!!!!!!$-3+#m!rr<$!!!!9
#QOi/'`\46!!!*J!!!!!-3F5J!!!lH!!!!!$PrdC!s9hL!!!!!!%7pO)&X7k!!!!!!#QRk-n$Pp.Olnt
.Olhp-n$Pp.Olnt.Olhp~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
479.001 105.541 mo
478.99 105.541 478.98 105.541 478.97 105.54 cv
474 105.46 li
474 101.709 li
479.03 101.791 li
480.066 101.808 480.891 102.66 480.875 103.696 cv
480.858 104.721 480.022 105.541 479.001 105.541 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[9 0 0 6 473 198 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 6 
/M[9 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~?smAM9heAY?smAM>s^S56![l+?qj?[5>P'_?sQ,h6UXC2?slZ'8kVcK:gI?p;,9t`:Jh~>
<~'bqGu#m^eC'bqGu'*/(5!>?1_'aY-G!!`fF'b^TK!!!$#'bq#Y!WiE)"qqXN"Tni/!sJ~>
<~^:q=qYFqVp^:q=q]VgUBVnBaX^9=GtP,Y_#^:^D8R@9\G^:pePW2QYnYIqNHZE^[>Z*F~>
<~!!!!!(]sdR!!!!!"""!J-3F5J!#PtA!!X/<!!=PJ!!!!G!!!lH!!!!!$NgJW!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
66.9695 68.8016 mo
169.969 67.1253 li
171.005 67.1084 171.858 67.9341 171.875 68.9695 cv
171.892 70.0049 171.066 70.858 170.031 70.8747 cv
67.0305 72.5511 li
65.9951 72.568 65.1422 71.7422 65.1253 70.7068 cv
65.1084 69.6715 65.9342 68.8185 66.9695 68.8016 cv
169.945 67.1258 mo
272.945 64.1259 li
273.98 64.0957 274.844 64.9104 274.874 65.9454 cv
274.904 66.9805 274.09 67.8441 273.055 67.8743 cv
170.055 70.8742 li
169.019 70.9044 168.156 70.0897 168.126 69.0547 cv
168.096 68.0195 168.91 67.156 169.945 67.1258 cv
272.964 64.1254 mo
375.964 62.1254 li
376.999 62.1053 377.854 62.9283 377.875 63.9637 cv
377.895 64.999 377.072 65.8546 376.036 65.8746 cv
273.036 67.8747 li
272.001 67.8949 271.145 67.0718 271.125 66.0365 cv
271.105 65.0012 271.928 64.1454 272.964 64.1254 cv
375.801 62.1356 mo
478.801 51.1357 li
479.831 51.0256 480.754 51.7713 480.864 52.8009 cv
480.974 53.8306 480.229 54.7545 479.199 54.8644 cv
376.199 65.8645 li
375.169 65.9744 374.246 65.2289 374.136 64.1991 cv
374.026 63.1694 374.771 62.2455 375.801 62.1356 cv
.496284 .612085 .0302739 9.15541e-05 cmyk
f
72 76 mo
62 76 li
62 66 li
72 66 li
72 68.7197 li
66.9695 68.8016 li
65.9342 68.8185 65.1084 69.6715 65.1253 70.7068 cv
65.142 71.7319 65.978 72.5514 66.9993 72.5514 cv
67.0097 72.5514 67.0201 72.5513 67.0305 72.5511 cv
72 72.4702 li
72 76 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 61 228 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ej(:!!!!!!":S:0ej(:!!!!!!":S:)B*$&!!!!!)IXO&!!!pG)?9aU@2]+G!!!!;@2^%m)?9a;!!!!!
)JEe&!!!!!!!!!!)JEe&!!!!!!!!!;@2^%m)?9a;!!!pG)?9aU@2]+G)B*$&!!!!!)IXO&0ej(:!!!!!
!":S:0ej(:!!!!!!":S:~>
<~4Zs>V!!!!!!"_:V4Zs>V!!!!!!"_:V+X)1U!!!!!+aY@U!!"0h+TMKcHQ`@h!!!!BHQaPZ+TMKB!!!!!
+bPCj!!!!!!!!!!+bPCj!!!!!!!!!BHQaPZ+TMKB!!"0h+TMKcHQ`@h+X)1U!!!!!+aY@U4Zs>V!!!!!
!"_:V4Zs>V!!!!!!"_:V~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~$k*4<!!!!!!!<W<$k*4<!!!!!!!<W<"pPqL!!!!!"rRUL!!!3@"onW-)$U'@!!!!')$U9_"onW'!!!!!
"reKc!!!!!!!!!!"reKc!!!!!!!!!')$U9_"onW'!!!3@"onW-)$U'@"pPqL!!!!!"rRUL$k*4<!!!!!
!!<W<$k*4<!!!!!!!<W<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
66.9993 72.5514 mo
65.978 72.5514 65.142 71.7319 65.1253 70.7068 cv
65.1084 69.6715 65.9342 68.8185 66.9695 68.8016 cv
72 68.7197 li
72 72.4702 li
67.0305 72.5511 li
67.0201 72.5513 67.0097 72.5514 66.9993 72.5514 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[9 0 0 6 64 231 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 6 
/M[9 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~BkqL"CM@R"CMRX"CM@R"CMR^$Bk_?uCMR^$CM@KuCMR^$CM@R"BkqL"CM@R"CMRX"CMN~>
<~KnbA<L4tA;LPCM;L4tA;LPLY>KnY8:LPLY?L4t>9LPLY?L4tA:KnbA<LP:J<LPCM;LPG~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~)A3Pk&fMAn%h]cn&fMAn%hB0`)]KD#%hB0]&fVc&%hB0]&fMAq)A3Pk%iQ&k%h]cn%hA~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
175 74.0001 mo
165 74.0001 li
165 70.9566 li
170.019 70.8749 li
170.031 70.8748 170.043 70.8746 170.055 70.8742 cv
175 70.7302 li
175 74.0001 li
165 67.2062 mo
165 64 li
175 64 li
175 66.9786 li
169.954 67.1256 li
165 67.2062 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 164 230 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ej(:!!!!!!":S:0ej(:!!!!!!":S:)B*$&!!!!!)IXO&!!!pG)?9aU@2]+G!!!!;@2^%m)?9a;!!!!!
)JEe&!!!!!!!!!!)JEe&!!!!!!!!!;@2^%m)?9a;!!!pG)?9aU@2]+G)B*$&!!!!!)IXO&0ej(:!!!!!
!":S:0ej(:!!!!!!":S:~>
<~4Zs>V!!!!!!"_:V4Zs>V!!!!!!"_:V+X)1U!!!!!+aY@U!!"0h+TMKcHQ`@h!!!!BHQaPZ+TMKB!!!!!
+bPCj!!!!!!!!!!+bPCj!!!!!!!!!BHQaPZ+TMKB!!"0h+TMKcHQ`@h+X)1U!!!!!+aY@U4Zs>V!!!!!
!"_:V4Zs>V!!!!!!"_:V~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~$k*4<!!!!!!!<W<$k*4<!!!!!!!<W<"pPqL!!!!!"rRUL!!!3@"onW-)$U'@!!!!')$U9_"onW'!!!!!
"reKc!!!!!!!!!!"reKc!!!!!!!!!')$U9_"onW'!!!3@"onW-)$U'@"pPqL!!!!!"rRUL$k*4<!!!!!
!!<W<$k*4<!!!!!!!<W<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
165 70.9566 mo
165 67.2062 li
169.954 67.1256 li
175 66.9786 li
175 70.7302 li
170.055 70.8742 li
170.043 70.8746 170.031 70.8748 170.019 70.8749 cv
165 70.9566 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 6 164 233 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 6 
/M[12 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~CMR^"CMR^$BkqL"CMR^$BkqKuCMR^$CMR^$CM@KuCMR^$CMR^$CM@KuCMR^$CMR^$BkqKuCMR^$CMR^"
CMR^$BkqL"~>
<~LPLV<L51P=KnbA<LPLY>Knb>9L51P>LPLY?L4t>9LPLY?LPLY?L4t>9LPLY?LPLY>Knb>9L51P>LPLV<
L51P=KnbA<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~%hB9k&e>Kc)A3Pk%hB0`)A3Z$&e>K`%hB0]&fVc&%hB0]%hB0]&fVc&%hB0]%hB0`)A3Z$&e>K`%hB9k
&e>Kc)A3Pk~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
278 67.9999 mo
268.74 67.9999 li
273.055 67.8743 li
278 67.7783 li
278 67.9999 li
268 64.2699 mo
268 61.0001 li
278 61.0001 li
278 64.0276 li
272.964 64.1254 li
272.952 64.1256 272.941 64.1259 272.93 64.1264 cv
268 64.2699 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 9 267 236 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 9 
/M[12 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ej(:!!!!!!":S:0ej(:!!!!!!":S:)B*$&!!!!!)IXO&!!!pG)?9aU@2]+G!!!!;@2^%m)?9a;!!!!!
)JEe&!!!!!!!!!!)JEe&!!!!!!!!!;@2^%m)?9a;!!!pG)B'M4@2]+G~>
<~4Zs>V!!!!!!"_:V4Zs>V!!!!!!"_:V+X)1U!!!!!+aY@U!!"0h+TMKcHQ`@h!!!!BHQaPZ+TMKB!!!!!
+bPCj!!!!!!!!!!+bPCj!!!!!!!!!BHQaPZ+TMKB!!"0h+X&!PHQ`@h~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~$k*4<!!!!!!!<W<$k*4<!!!!!!!<W<"pPqL!!!!!"rRUL!!!3@"onW-)$U'@!!!!')$U9_"onW'!!!!!
"reKc!!!!!!!!!!"reKc!!!!!!!!!')$U9_"onW'!!!3@"pP89)$U'@~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
268 68.0215 mo
268 64.2699 li
272.93 64.1264 li
272.941 64.1259 272.952 64.1256 272.964 64.1254 cv
278 64.0276 li
278 67.7783 li
273.052 67.8744 li
268.74 67.9999 li
268 67.9999 li
268 68.0215 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 6 267 236 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 6 
/M[12 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~CMR^"CMR^$BkqL"CMR^$BkqKuCMR^$CMR^$CM@KuCMR^$CMR^$CM@KuCMR^$CMR^$BkqKuCMR^$CMR^"
CMR^$BkqL"~>
<~LPLV<L51P=KnbA<LPLY>Knb>9L51P>LPLY?L4t>9LPLY?LPLY?L4t>9LPLY?LPLY>Knb>9L51P>LPLV<
L51P=KnbA<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~%hB9k&e>Kc)A3Pk%hB0`)A3Z$&e>K`%hB0]&fVc&%hB0]%hB0]&fVc&%hB0]%hB0`)A3Z$&e>K`%hB9k
&e>Kc)A3Pk~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381 69 mo
371 69 li
371 65.9724 li
376.007 65.8752 li
376.064 65.8749 376.12 65.8721 376.177 65.8667 cv
376.188 65.8657 376.199 65.8646 376.209 65.8634 cv
381 65.3517 li
381 69 li
371 62.2217 mo
371 59 li
381 59 li
381 61.5804 li
375.882 62.1269 li
371 62.2217 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 370 235 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ej(:!!!!!!":S:0ej(:!!!!!!":S:)B*$&!!!!!)IXO&!!!pG)?9aU@2]+G!!!!;@2^%m)?9a;!!!!!
)JEe&!!!!!!!!!!)JEe&!!!!!!!!!;@2^%m)?9a;!!!pG)?9aU@2]+G)B*$&!!!!!)IXO&0ej(:!!!!!
!":S:0ej(:!!!!!!":S:~>
<~4Zs>V!!!!!!"_:V4Zs>V!!!!!!"_:V+X)1U!!!!!+aY@U!!"0h+TMKcHQ`@h!!!!BHQaPZ+TMKB!!!!!
+bPCj!!!!!!!!!!+bPCj!!!!!!!!!BHQaPZ+TMKB!!"0h+TMKcHQ`@h+X)1U!!!!!+aY@U4Zs>V!!!!!
!"_:V4Zs>V!!!!!!"_:V~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~$k*4<!!!!!!!<W<$k*4<!!!!!!!<W<"pPqL!!!!!"rRUL!!!3@"onW-)$U'@!!!!')$U9_"onW'!!!!!
"reKc!!!!!!!!!!"reKc!!!!!!!!!')$U9_"onW'!!!3@"onW-)$U'@"pPqL!!!!!"rRUL$k*4<!!!!!
!!<W<$k*4<!!!!!!!<W<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
371 65.9724 mo
371 62.2217 li
375.882 62.1269 li
381 61.5804 li
381 65.3517 li
376.209 65.8634 li
376.199 65.8646 376.188 65.8657 376.177 65.8667 cv
376.12 65.8721 376.064 65.8749 376.007 65.8752 cv
371 65.9724 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 6 370 238 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 6 
/M[12 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~CMR^"CMR^$BkqL"CMR^$BkqKuCMR^$CMR^$CM@KuCMR^$CMR^$CM@KuCMR^$CMR^$BkqKuCMR^$CMR^"
CMR^$BkqL"~>
<~LPLV<L51P=KnbA<LPLY>Knb>9L51P>LPLY?L4t>9LPLY?LPLY?L4t>9LPLY?LPLY>Knb>9L51P>LPLV<
L51P=KnbA<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!~>
<~%hB9k&e>Kc)A3Pk%hB0`)A3Z$&e>K`%hB0]&fVc&%hB0]%hB0]&fVc&%hB0]%hB0`)A3Z$&e>K`%hB9k
&e>Kc)A3Pk~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
484 58 mo
474 58 li
474 55.4196 li
479.199 54.8644 li
480.229 54.7545 480.974 53.8306 480.864 52.8009 cv
480.807 52.2623 480.527 51.8014 480.125 51.5001 cv
484 51.5001 li
484 58 li
474 51.6484 mo
474 51.5001 li
475.389 51.5001 li
474 51.6484 li
484 50.5002 mo
474 50.5002 li
474 48.0001 li
484 48.0001 li
484 50.5002 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 473 246 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~0ej(:!!!!!!":S:0ej(:!!!!!!":S:)B*$&!!!!!)IXO&!!!pG)?9aU@2]+G!!!!;@2^%m)?9a;!!!!!
)JEe&!!!!!!!!!!)JEe&!!!!!!!!!;@2^%m)?9a;!!!pG)?9aU@2]+G)B*$&!!!!!)IXO&0ej(:!!!!!
!":S:0ej(:!!!!!!":S:~>
<~4Zs>V!!!!!!"_:V4Zs>V!!!!!!"_:V+X)1U!!!!!+aY@U!!"0h+TMKcHQ`@h!!!!BHQaPZ+TMKB!!!!!
+bPCj!!!!!!!!!!+bPCj!!!!!!!!!BHQaPZ+TMKB!!"0h+TMKcHQ`@h+X)1U!!!!!+aY@U4Zs>V!!!!!
!"_:V4Zs>V!!!!!!"_:V~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
<~$k*4<!!!!!!!<W<$k*4<!!!!!!!<W<"pPqL!!!!!"rRUL!!!3@"onW-)$U'@!!!!')$U9_"onW'!!!!!
"reKc!!!!!!!!!!"reKc!!!!!!!!!')$U9_"onW'!!!3@"onW-)$U'@"pPqL!!!!!"rRUL$k*4<!!!!!
!!<W<$k*4<!!!!!!!<W<~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
484 51.5001 mo
480.125 51.5001 li
479.809 51.2632 479.419 51.1249 479.002 51.1249 cv
478.936 51.1249 478.869 51.1284 478.801 51.1357 cv
475.389 51.5001 li
474 51.5001 li
474 50.5002 li
484 50.5002 li
484 51.5001 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 3 473 252 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 3 
/M[12 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!pG)?9aU@2]+G!!!!;@2^%m)?9a;!!!!!)JEe&!!!!!~>
<~!!"0h+TMKcHQ`@h!!!!BHQaPZ+TMKB!!!!!+bPCj!!!!!~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~H$NjC@X36.,%>hCH$O[E,%>"*@X36EH$O[\@N6@sH$O[\~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
474 55.4196 mo
474 51.6484 li
475.389 51.5001 li
478.801 51.1357 li
478.869 51.1284 478.936 51.1249 479.002 51.1249 cv
479.419 51.1249 479.809 51.2632 480.125 51.5001 cv
480.527 51.8014 480.807 52.2623 480.864 52.8009 cv
480.974 53.8306 480.229 54.7545 479.199 54.8644 cv
474 55.4196 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[9 0 0 6 473 249 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 6 
/M[9 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~CMR^"CMR^$BkqL"CM@R"BkqL"CMR^"BkqL"CMR^$Bk_?uCMR^$BkqKuCMR^$BkqL"CM<~>
<~LPLV<L51P=KnkG=L4tA:KnbA<LPLV<KnbA<LPLY>KnY8:LPLY>Knb>9L51P=KnbA<L4o~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
<~%hB9k&e>Kc)@m>h&fMAq)A3Pk%hB9l)\NYl%hB0`)]KD#%hB0`)A3Z$&e>Kc)A3Pk&fL~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
67.1091 79.1282 mo
170.109 85.1282 li
171.143 85.1885 171.932 86.0753 171.872 87.1091 cv
171.812 88.1429 170.925 88.9321 169.891 88.8719 cv
66.891 82.8719 li
65.8572 82.8116 65.0679 81.9248 65.1282 80.891 cv
65.1884 79.8573 66.0753 79.0681 67.1091 79.1282 cv
169.747 85.1422 mo
272.747 71.1422 li
273.773 71.0027 274.718 71.7214 274.858 72.7476 cv
274.997 73.7736 274.279 74.7186 273.252 74.8581 cv
170.252 88.8579 li
169.226 88.9974 168.282 88.2787 168.142 87.2526 cv
168.003 86.2265 168.721 85.2817 169.747 85.1422 cv
272.321 71.2522 mo
375.321 31.2523 li
376.286 30.8774 377.373 31.356 377.748 32.3214 cv
378.123 33.2866 377.644 34.3731 376.679 34.748 cv
273.679 74.7479 li
272.713 75.1228 271.627 74.6442 271.252 73.6788 cv
270.877 72.7136 271.356 71.6271 272.321 71.2522 cv
376.109 31.1283 mo
479.109 37.1283 li
480.143 37.1884 480.932 38.0754 480.872 39.1092 cv
480.812 40.1429 479.925 40.9321 478.891 40.872 cv
375.891 34.872 li
374.857 34.8117 374.068 33.9249 374.128 32.8911 cv
374.188 31.8573 375.075 31.068 376.109 31.1283 cv
.647517 .076173 .153628 0 cmyk
f
72 86 mo
62 86 li
62 76 li
72 76 li
72 79.4131 li
67.1091 79.1282 li
67.072 79.1261 67.0351 79.125 66.9984 79.125 cv
66.0127 79.125 65.1862 79.8944 65.1282 80.891 cv
65.0679 81.9248 65.8572 82.8116 66.891 82.8719 cv
72 83.1695 li
72 86 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 61 218 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~84XBo!%'&n!#%mo84XBo!%'&n!#%mo-74j%!)?;i-BTW%!!"@.-;I>`OX:&.!!!!GO]P\J-3+#G!!!!!
-Cp\S!!!!!!!!!!-Cp\S!!!!!!!!!GO]P\J-3+#G!!"@.-;I>`OX:&.-74j%!)?;i-BTW%84XBo!%'&n
!#%mo84XBo!%'&n!#%mo~>
<~%LrR@!!ii1!!<]@%LrR@!!ii1!!<]@#RDFV!"TV@#TX0V!!!9F#S.IP*=)WF!!!!)*>&o)#QOi)!!!!!
#Tk,o!!!!!!!!!!#Tk,o!!!!!!!!!)*>&o)#QOi)!!!9F#S.IP*=)WF#RDFV!"TV@#TX0V%LrR@!!ii1
!!<]@%LrR@!!ii1!!<]@~>
<~'GL`O!"')6!!X,O'GL`O!"')6!!X,O$483h!#?=M$7Q;h!!!?T$5OBa.1-%T!!!!+.2`sO$31&+!!!!!
$8!h:!!!!!!!!!!$8!h:!!!!!!!!!+.2`sO$31&+!!!?T$5OBa.1-%T$483h!#?=M$7Q;h'GL`O!"')6
!!X,O'GL`O!"')6!!X,O~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
72 83.1695 mo
66.891 82.8719 li
65.8572 82.8116 65.0679 81.9248 65.1282 80.891 cv
65.1862 79.8944 66.0127 79.125 66.9984 79.125 cv
67.0351 79.125 67.072 79.1261 67.1091 79.1282 cv
72 79.4131 li
72 83.1695 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[9 0 0 6 64 221 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 6 
/M[9 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~SXQ%<R[on9R[Te:S=Q+;R[T\6SXl4<R[T\6R[p"<R[T\6R[oq<SXQ"9R[on:S=6";R[O~>
<~*YoS2(*45)',DW,)BKY-',)#p+!273',)#m(*=V6',)#m(*4>3*YoD&'-7o+)AXA0',(~>
<~.jZSl,qC8e,UFri-n?Sh,U=W]/M/7o,U=W\,qU\p,U=W\,qCDm.jZGd,V(/h-m^Ai,U<~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
175 92 mo
165 92 li
165 88.587 li
169.856 88.8699 li
169.903 88.8734 169.95 88.8753 169.998 88.8753 cv
170.017 88.8753 170.037 88.8749 170.057 88.8743 cv
170.136 88.872 170.214 88.8647 170.291 88.8527 cv
172.885 88.5002 li
175 88.5002 li
175 92 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 5 164 212 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 5 
/M[12 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!">mO]P\J-7/]m!!"@.-;I>`OX:&.-74j%!)?;i-BTW%84XBo!%'&n!#%mo84XBo!%'&n!#%mo~>
<~!!!91*>&o)#RCD1!!!9F#S.IP*=)WF#RDFV!"TV@#TX0V%LrR@!!ii1!!<]@%LrR@!!ii1!!<]@~>
<~!!!?5.2`sO$46b5!!!?T$5OBa.1-%T$483h!#?=M$7Q;h'GL`O!"')6!!X,O'GL`O!"')6!!X,O~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
175 88.5002 mo
172.885 88.5002 li
175 88.2127 li
175 88.5002 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[4 0 0 3 172 215 ]ct
snap_to_device
<<
/T 1
/W 4 
/H 3 
/M[4 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!!!!-3+#GOX:&.~>
<~!!!!!#QOi)*=)WF~>
<~!!!!!$31&+.1-%T~>
<~H$O[\>BtL>$!V\#~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
169.928 85.1177 mo
165 84.8306 li
165 82 li
175 82 li
175 84.4282 li
169.928 85.1177 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 5 164 219 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 5 
/M[12 0 0 -5 0 5 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~84XBo!%'&n!#%mo84XBo!%'&n!#%mo-74j%!)?;i-BTW%!!"@.-;I>`OX:&.!!">mO]P\J-7/]m~>
<~%LrR@!!ii1!!<]@%LrR@!!ii1!!<]@#RDFV!"TV@#TX0V!!!9F#S.IP*=)WF!!!91*>&o)#RCD1~>
<~'GL`O!"')6!!X,O'GL`O!"')6!!X,O$483h!#?=M$7Q;h!!!?T$5OBa.1-%T!!!?5.2`sO$46b5~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
169.998 88.8753 mo
169.95 88.8753 169.903 88.8734 169.856 88.8699 cv
165 88.587 li
165 84.8306 li
169.928 85.1177 li
175 84.4282 li
175 88.2127 li
172.885 88.5002 li
170.291 88.8527 li
170.214 88.8647 170.136 88.872 170.057 88.8743 cv
170.037 88.8749 170.017 88.8753 169.998 88.8753 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 7 164 215 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 7 
/M[12 0 0 -7 0 7 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~R[Te9R[]h9R[on9R[T\9R[]h9SXQ"9R[T\6SXZ.?R[T\6R[T\6R[p"<R[T\6R[T\6R[p"<R[T\6R[T\6
SXZ.?R[T\6R[T\9R[]h9SXQ"9~>
<~()@r,',VW$(*45,',)-&()Rr**YoD&',)#p*Z5k;()%>p',)#m(*=V6',)#m',)#m(*=V6',)#m',)#p
*Z5k;()%>p',)-&()Rr**YoD&~>
<~,pb&f,Ub&d,qC8f,U=Zd,q(/f.jZGd,U=W].k)ks,pX`],U=W\,qU\p,U=W\,U=W\,qU\p,U=W\,U=W]
.k)ks,pX`],U=Zd,q(/f.jZGd~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
278 78 mo
268 78 li
268 75.572 li
273.215 74.8632 li
273.29 74.8545 273.365 74.8411 273.44 74.823 cv
273.537 74.7997 273.631 74.769 273.721 74.7316 cv
278 73.0697 li
278 78 li
268 71.7874 mo
268 71 li
272.971 71 li
272.528 71.172 li
268 71.7874 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 9 267 226 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 9 
/M[12 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~!!"@.-;I>`OX:&.!!!!GO]P\J-3+#G!!!!!-Cp\S!!!!!!!!!!-Cp\S!!!!!!!!!GO]P\J-3+#G!!"@.
-;I>`OX:&.-74j%!)?;i-BTW%84XBo!%'&n!#%mo84XBo!%'&n!#%mo~>
<~!!!9F#S.IP*=)WF!!!!)*>&o)#QOi)!!!!!#Tk,o!!!!!!!!!!#Tk,o!!!!!!!!!)*>&o)#QOi)!!!9F
#S.IP*=)WF#RDFV!"TV@#TX0V%LrR@!!ii1!!<]@%LrR@!!ii1!!<]@~>
<~!!!?T$5OBa.1-%T!!!!+.2`sO$31&+!!!!!$8!h:!!!!!!!!!!$8!h:!!!!!!!!!+.2`sO$31&+!!!?T
$5OBa.1-%T$483h!#?=M$7Q;h'GL`O!"')6!!X,O'GL`O!"')6!!X,O~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
272.971 71 mo
268 71 li
268 68.0215 li
268.74 67.9999 li
278 67.9999 li
278 69.0469 li
272.971 71 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[10.4762 0 0 3.57143 267.762 233.762 ]ct
snap_to_device
Adobe_AGM_Image/AGMIMG_fl cf /ASCII85Decode fl /RunLengthDecode filter ddf
<<
/T 1
/W 44 
/H 15 
/M[44 0 0 -15 0 15 ]
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS [
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
[AGMIMG_fl 44 string /rs cvx /pop cvx] cvx
]
/O 3
>>
%%BeginBinary: 1
img
r^\>&2C]gd)'1(V2EaH$6TR+`1G^jE2`Eca911p$/gVPV(a(:d6iKXU%M0'V#mgtQ+"fTA9ibUu4=MKQ
(_@i>4AfHd9g^ro*to"g#mq.@%fR.G'+YKX"p+Gu!=]D8$NU\;pAb7!#n-hF'E/^F!"]/6#7D(f-63I'
&.oR"/1M50%1j(#/0Y`>&.K!f-6j'0#6Y),!<,M86T6PA*[3'i5<h=p4>JN@0.eb./hen21-@]`5<gqR
+s&!\2adR8rXKJK$OdLY*\KZR:JOVX4tRfnrXoPM)'(:m9MJ8X:d5.:*YT"l$P!(FrY,ML%h&aK!VZQp
%1<(B!=])(!!EK4$kF$N'`J(;!XB,E'.#%Lr=B)B,;:bar=/rD0/+U]r=B2V-m]N;$jQk5!<,M#6T?_J
,qLuA:e*`./L2Pd.fCe!.jQ>b/.4@#7o2N2/0u_u3(*[9rXKJK%1j3o.m6aA>#.LF/05E9r<j/K&KWG^
6Vglt;*?EM'G(]_rXSoA"VVCT#mLG)!!*N9rX/`9!VZQs"pk\K'E/^F!"]2<%M00o,9IX5&.K!h/LqA1
$4m_!/KY?0&/#^",9RO/%LE7:!<,M$6THnR/2fjl@8K0A*>]P4,prU=&1/D7(EG+m:gm0f2_6O93CEd:
rXKJK%hop.2,%P-Al(N7)%d,^r<NoA#S@q#3`'F8A5"j,)AE_\%fR.G'+YKX"p+Gu!=]D8$NU\;pAb=#
#n.=XrY5>3&-E:M$jIC`)]9A%$jRXq+pIoF&-X:()$^N\'c@r.'a>'V$NpA.rB_#^7nQQQ9heJN1*[MH
(EbC00Fof[(_RQ.1-nc39i"PW7mm5ArXT>J(`t.]3($PO:d,%8*"iYa%fQeI#n@+I&f`Mf:gm3g3AN!)
(_Q`XrXoDI&.f?_"p+Q#!W`<5r=&f>!<N#s"p"o=%hK9arY#29&.9*a%L<t",p=KW*"sGC,QmuF&-F4-
+;5_=,9\?[)[Hoe&I\RDr]UKP:0M1EBF7j;7lVq9%1O.#3;klL3@5RP%2gTS7o*6#Ch6dF6N01J'+bs&
-nmVI3C-5!/g(c7#Qtb<$kO!Q#R_4d/j)]k3C5\Z-m0?*'E&IH&el&s(BOX7!!30%'E&ID'*/.2!!WH*
(Ddi$')`C@$igeK'+t`[%P0%Q.P)n_+t4f>r;[B1-7^8V,qLMi.4br7%2'<brXAcg&4BW8H%UBY<C&;_
&dAX[.RF&$&O\r9(^UBZ+YZ2^CjCYZC0<t(4T631*[iWs2F'Vf0e4=[#R(A6'+OpN&ekBN"UGea.krqL
5W1AM-ls6D!#bbF#nI[d*$?:>#6=l(!!rZ,((q5n',CTLr;[-)!='G_+<243&,m%;$kNmZ%1*4E%3?Q>
/g_8S.45/p!"]/Z.3B6N/L__^%1!.E%1`sJ%/r=47Ug\%PD+$[4=hE[!!jJs8k_rR:.m8[#65/O/3I'U
Kp.DrH=BAC48p<6,qh&/.l9.=-5dF&!!*0('bC9T&/G?M!<<E<)(%'r1b1790.$T>rX0&B'H85C+;kh$
!<N0"#lt&E'bqK")$'d;!"&`-$kjL$-6aBC%K6b7#7h(H#R(;7#6tDV-Q`X3-Reil#:V&<#p1N="U>8;
"p5#7#mgM8r](QZ@!.-\IW&I]3[POF%j<f(:B"$#9f4+*"r&CF7pKt]MhH4\7K,=H-7(6)4?"oI/LDGR
$jH_6"9T>K%hK9e"9\c,"q2:f-7po)2`s,Qr[.UM$4I^k+X.sF'G(WQrW!!#!ZCqP!uV.@!"8i-!=KGQ
)'0tF*>].`#lY>F%1*7D"UGGC#otQC&/uo@qZ%-Q,o[C@/0,$)$4$e>#71k=&,n?s3_X")H#[S-=\gmu
&/clZ92>I^&5559)%[rJ:K_+@EHuY89KN//r[AL1.Q':A.jZ;U*X;iM!s/uG%hB3`&/5QU!s/W2*>otG
.kj%B.OtEHquI9>*?6":)&F.l!<<-$%i>0[%N#ZV!<<-%)&F//)]Tk1quQd:%j<D>"pPDC$jd@p-Q!gH
&,Q>;&gA;4-SGr9$k*II"rJg5rZ(nj%Pp:?>@1fMC2[KS0cM;l!^]OTr_F)!6Sfo*0hl%oC1Ug\>=h"7
r\+7*,qpks1as[k)]0S4"p+i7'G1id&.fHh$j$J7(`aG4*[E0k-7gkM1&V(^!<EuO(`FA9*Z,%]!=TeB
((V2t$ipA4(`jb=)Aj2*!<N-!rYc(b-n,E+$4@.D"p>>V(DmVW!"KJU(EX%i"UPPD"pcY*+T<;Y0+ffj
1He$#@<@9E>!a_k2aL&2r_F)!69$SJ6<\AaFCA$44u4lFr\+72&iM<d,o[^=)&jJ1&e#3Z%hK6^rX]SN
%Lij[(E+51(`=8=,:kbP3W&jY!=TJH'H/)@+WM4,%M9?hr"]_U&J#?d*$HXO)AE\j!W2rs&dK0n+:A;W
"pFl*o)S^i#6Y59":H=o(B+sG0b>oc-n-o@=`/h1?;!=@5XnKI:_?Q"83o<t93uRhDHTFa.4?Vsr\=C8
"?7qU()d)j#9"Bl%h&jU%fR"<&-i^T$k*X[(E38l";qsu/3*VlqZ%]=%2U!-,Tdp>&.fHf()@]%(D[\t
&.fQp+!`!L(CgKC!<*B3&/Q3$"U,#1lMq1l"9erG)&Ehmrs\l]$S<\M+X8a5>A7SP<rPns;,U<j;\)c'
:f(1t@qf.=1F"%f-8#3Or]LWK/0Pi@$PaTq'GD,T&H3:@&.9*a'GVQ&$P+'t/3*Vlq>^a$!>-Co*#][m
('59g)#P0V()@`**$$+6!W`9%qZ-U(#7hLb(`F\:"7#pl!u*%")&EttrXAc\,qUDa)AseS7Sd#g@:s.Z
>?4^'<E<1+@:a([>?+Hg0I.MS*[NE;1&a<H3@uEl&.Ad[&.oQi'bqDprX]AJ&J>`k'bqDr&I8pa#7M.\
+tYhS4o#'c!<EuP(E+55*#fe6rYQ%[(`F>5*?,n5()HuPq#LC&#7V4W'Gr/H#jVHq#V%/<'G:rdrX=;
~>

%%EndBinary
grestore
np
268 68.0215 mo
268 67.9999 li
268.74 67.9999 li
268 68.0215 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[1.19048 0 0 .714286 267.762 236.619 ]ct
snap_to_device
<<
/T 1
/W 5 
/H 3 
/M[5 0 0 -3 0 3 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~JqAT)H@ga#J9lg!Jq/.~>
<~<`W7(?rg</=^P31<`rc~>
<~'GM5p%ho]l'+Yck'GCu~>
<~#RC\C%1!4F$4mIK#R_7~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
268 75.572 mo
268 71.7874 li
272.528 71.172 li
272.971 71 li
278 69.0469 li
278 73.0697 li
273.721 74.7316 li
273.631 74.769 273.537 74.7997 273.44 74.823 cv
273.365 74.8411 273.29 74.8545 273.215 74.8632 cv
268 75.572 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 9 267 228 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 9 
/M[12 0 0 -9 0 9 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~S"#k8R[T_7R[T_8R[Te9R[]h9R[on9R[T\9R[]h9SXQ"9R[T\6SXZ.?R[T\6R[T\6R[p"<R[T\6R[T\6
R[p"<R[T\6R[T\6SXZ.?R[T\6R[T\9R[]h9SXQ"9R[Te9R[]h9R[on9~>
<~(`3r#',D>s',29#()@r,',VW$(*45,',)-&()Rr**YoD&',)#p*Z5k;()%>p',)#m(*=V6',)#m',)#m
(*=V6',)#m',)#p*Z5k;()%>p',)-&()Rr**YoD&()@r,',VW$(*45,~>
<~-RU2c,UFc_,UFfc,pb&f,Ub&d,qC8f,U=Zd,q(/f.jZGd,U=W].k)ks,pX`],U=W\,qU\p,U=W\,U=W\
,qU\p,U=W\,U=W].k)ks,pX`],U=Zd,q(/f.jZGd,pb&f,Ub&d,qC8f~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
381 38 mo
371 38 li
371 36.9533 li
376.298 34.8957 li
381 35.1696 li
381 38 li
371 32.9305 mo
371 28 li
381 28 li
381 31.4132 li
376.151 31.1307 li
376.101 31.1267 376.05 31.1246 376 31.1246 cv
375.906 31.1246 375.811 31.1317 375.717 31.1462 cv
375.566 31.1692 375.42 31.2103 375.282 31.2674 cv
371 32.9305 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 370 266 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~84XBo!%'&n!#%mo84XBo!%'&n!#%mo-74j%!)?;i-BTW%!!"@.-;I>`OX:&.!!!!GO]P\J-3+#G!!!!!
-Cp\S!!!!!!!!!!-Cp\S!!!!!!!!!GO]P\J-3+#G!!"@.-;I>`OX:&.-74j%!)?;i-BTW%84XBo!%'&n
!#%mo84XBo!%'&n!#%mo~>
<~%LrR@!!ii1!!<]@%LrR@!!ii1!!<]@#RDFV!"TV@#TX0V!!!9F#S.IP*=)WF!!!!)*>&o)#QOi)!!!!!
#Tk,o!!!!!!!!!!#Tk,o!!!!!!!!!)*>&o)#QOi)!!!9F#S.IP*=)WF#RDFV!"TV@#TX0V%LrR@!!ii1
!!<]@%LrR@!!ii1!!<]@~>
<~'GL`O!"')6!!X,O'GL`O!"')6!!X,O$483h!#?=M$7Q;h!!!?T$5OBa.1-%T!!!!+.2`sO$31&+!!!!!
$8!h:!!!!!!!!!!$8!h:!!!!!!!!!+.2`sO$31&+!!!?T$5OBa.1-%T$483h!#?=M$7Q;h'GL`O!"')6
!!X,O'GL`O!"')6!!X,O~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
371 36.9533 mo
371 32.9305 li
375.282 31.2674 li
375.42 31.2103 375.566 31.1692 375.717 31.1462 cv
375.811 31.1317 375.906 31.1246 376 31.1246 cv
376.05 31.1246 376.101 31.1267 376.151 31.1307 cv
381 31.4132 li
381 35.1696 li
376.298 34.8957 li
371 36.9533 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 8 370 267 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 8 
/M[12 0 0 -8 0 8 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~R[T\9R[]h9SXQ"9R[T\6SXZ.?R[T\6R[T\6R[p"<R[T\6R[T\6R[p"<R[T\6R[T\6SXZ.?R[T\6R[T\9
R[]h9SXQ"9R[Te9R[]h9R[on9S"#k8R[T_7R[T_8~>
<~',)-&()Rr**YoD&',)#p*Z5k;()%>p',)#m(*=V6',)#m',)#m(*=V6',)#m',)#p*Z5k;()%>p',)-&
()Rr**YoD&()@r,',VW$(*45,(`3r#',D>s',29#~>
<~,U=Zd,q(/f.jZGd,U=W].k)ks,pX`],U=W\,qU\p,U=W\,U=W\,qU\p,U=W\,U=W].k)ks,pX`],U=Zd
,q(/f.jZGd,pb&f,Ub&d,qC8f-RU2c,UFc_,UFfc~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
484 44 mo
474 44 li
474 40.5871 li
478.891 40.872 li
478.928 40.8741 478.965 40.8752 479.002 40.8752 cv
479.987 40.8752 480.814 40.1058 480.872 39.1092 cv
480.932 38.0754 480.143 37.1884 479.109 37.1283 cv
474 36.8307 li
474 34 li
484 34 li
484 44 li
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[12 0 0 12 473 260 ]ct
snap_to_device
<<
/T 1
/W 12 
/H 12 
/M[12 0 0 -12 0 12 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~84XBo!%'&n!#%mo84XBo!%'&n!#%mo-74j%!)?;i-BTW%!!"@.-;I>`OX:&.!!!!GO]P\J-3+#G!!!!!
-Cp\S!!!!!!!!!!-Cp\S!!!!!!!!!GO]P\J-3+#G!!"@.-;I>`OX:&.-74j%!)?;i-BTW%84XBo!%'&n
!#%mo84XBo!%'&n!#%mo~>
<~%LrR@!!ii1!!<]@%LrR@!!ii1!!<]@#RDFV!"TV@#TX0V!!!9F#S.IP*=)WF!!!!)*>&o)#QOi)!!!!!
#Tk,o!!!!!!!!!!#Tk,o!!!!!!!!!)*>&o)#QOi)!!!9F#S.IP*=)WF#RDFV!"TV@#TX0V%LrR@!!ii1
!!<]@%LrR@!!ii1!!<]@~>
<~'GL`O!"')6!!X,O'GL`O!"')6!!X,O$483h!#?=M$7Q;h!!!?T$5OBa.1-%T!!!!+.2`sO$31&+!!!!!
$8!h:!!!!!!!!!!$8!h:!!!!!!!!!+.2`sO$31&+!!!?T$5OBa.1-%T$483h!#?=M$7Q;h'GL`O!"')6
!!X,O'GL`O!"')6!!X,O~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
479.002 40.8752 mo
478.965 40.8752 478.928 40.8741 478.891 40.872 cv
474 40.5871 li
474 36.8307 li
479.109 37.1283 li
480.143 37.1884 480.932 38.0754 480.872 39.1092 cv
480.814 40.1058 479.987 40.8752 479.002 40.8752 cv
/0 /CSA get_res setcolorspace
gsave
clp
[1 0 0 -1 0 305 ]ct
[9 0 0 6 473 263 ]ct
snap_to_device
<<
/T 1
/W 9 
/H 6 
/M[9 0 0 -6 0 6 ]
/MD true
/BC 8 
/D[0 1 0 1 0 1 0 1 ]
/DS 
[
<~R[T\9R[]h9SXQ"9R[oq<SXQ"9R[T\9SXQ"9R[T\6SXl4<R[T\6SXZ.?R[T\6SXQ%<R[j~>
<~',)-&()Rr**YT2#(*4>3*YoD&',)-'*u5M'',)#p+!273',)#p*Z5k;()%>s*YoS2(*3~>
<~,U=Zd,q(/f.jQAc,qCDm.jZGd,U=Zf/L;Yf,U=W]/M/7o,U=W].k)ks,pX`^.jZSl,qA~>
<~!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!~>
]
/O 3
>>
%%BeginBinary: 1
img
%%EndBinary
grestore
np
0 0 0 1 cmyk
%ADOBeginSubsetFont: GIUQMX+Calibri Initial
ct_T42Dict begin
-0.5 -0.305 1.238 0.961
 256 array 0 1 255 {1 index exch /.notdef put} for  /GIUQMX+Calibri
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc0000051c6670
676d00000000000005d80000091a676c7966000000000000344000001c10
686561640000000000000ef400000036686865610000000000000f2c0000
0024686d74780000000000000f50000000686c6f63610000000000000fb8
000000366d6178700000000000000ff0000000206e616d65000000000000
101000000020707265700000000000001030000024106764697200000000
00000000000000000000079e0000fe930000000000000000000000000050
006a0073008000800086008d009300bf00db006200830093009900a000a6
00a900b000c100c900d70000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe79056d
000c03b7000600130000fffaffedfea6ffedfeb8050e000600130000fffa
ffedfe93050e00130420000600130000fffaffedff10ffee050e00130420
000600130000fffaffeefe93ff10feb80612000a050e0006000d02d2fffa
fff301fdfffa023f0006000dff36fffafff302870006000f0000fffafff1
079efeaffea700000000000000000000000000500051005a005b005c005d
006000610062006400680069006a006b006c006d006e00680069006e0060
0067006e00660068005f00610063006400660068006a006b006c006d006e
006f0070006f00720074007500760076007000720073007400750076006f
007000710072007300750077007700780079007a007b007c007d007b007c
007d00770079007a007c0078007a007c007d0078007d007e007f00800081
0082007e007f00810082007e007f00800081008200830084008500860087
008800890083008400850086008700880089008300840085008600870088
008900890086008700880089008a008b008c008d008e008f008a008b008c
008d008e008f008a008b008c008d008e008f008d008a008b008c008d008e
008f0090009000910092009300940095009600980099009b009c00900091
00920093009400950096009700980099009a009e009f00a6009000910095
0098009f009000910096009700bc00c600b500ae00af00b6006800690063
006a006f00700071006f0070007100720066006c006d00700079007c007f
00830086008700880089008a0074007500760077007a007b007c007d007e
008200850086008a0088008900830078007b008200830086008700880089
00760079007a007c007d007e0083008500880089008a0073007400750077
007a007d00880089008a008b008c008d008e00900094008b008c008d0091
0092009300940095008c008d00910095008f009000910092009300940095
008b008c008d008e008f009000910092009300940095008b008c008d008e
008f00900091009200930096009700980099009c0096009700980099009a
009b009c00960099009a009c0096009700980099009a009b009c00970098
0099009a009b009c009700980099009a009b009c0096009d00a000a1009d
009e009f00a000a100a2009d009f00a000a1009f00a2009d009e009f00a0
00a100a2009d009e00a000a1009d009e00a000a2009d00a300a400a500a6
00a700a300a400a600a700a300a400a500a600a700a600a300a700a800a9
00aa00ab00ac00ac00a800a900aa00ab00ac00a800a900aa00ab00ac00a8
00aa00ab00ac00ae00ad00ae00af00b000b100b200b300b400b500b600b7
00b800ad00ae00ad00ae00af00b000b100b200b300b400b500b600b700b8
00ad00ae00af00b000b100b200b300b400b500b600b700b800b300ae00af
00b000b200b500b600b700b800b900ba00bb00bc00be00c000c100c200c2
00b900ba00bb00bc00bd00be00bf00c000c100c200c400ba00bb00be00bf
00c000c200c300c400b900ba00bf00c000c200c600c700c900ca00cb00cc
00cf00c500c700ce00c500c700c800cf00d000d200d300d7010d00d000d1
00e900d000fd00d005e4000e0041000005ba009c009c005e005e4047645f
5e5d5c5b5a59585554535251504f4e4d4c4b4a494847464544434241403f
3e3d3c3b3a39383736352f2e2d2c2826252423221f181411100f0d0b0a09
0807060504030201002c4523466020b02660b004262348482d2c45234623
6120b02661b004262348482d2c45234660b0206120b04660b00426234848
2d2c4523462361b0206020b02661b02061b004262348482d2c45234660b0
406120b06660b004262348482d2c4523462361b0406020b02661b04061b0
04262348482d2c0110203c003c2d2c20452320b0cd442320b8015a515823
20b08d44235920b0ed51582320b04d44235920b0042651582320b00d4423
5921212d2c20204518684420b001602045b04676688a4560442d2c01b10b
0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b028
2370b10228453ab10200080d2d2c2045b00325456164b050515845441b21
21592d2c2045b0004360442d2c01b00643b00743650a2d2c2069b04061b0
008b20b12cc08a8cb8100062602b0c642364615c58b00361592d2c8a0345
8a8a87b0112bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c
4b525845441b2121592d2c01b005251023208af500b0016023edec2d2c01
b005251023208af500b0016123edec2d2c01b0062510f500edec2d2c20b0
01600110203c003c2d2c20b001610110203c003c2d2c00b00743b006430b
2d2c21210c6423648bb84000622d2c21b08051580c6423648bb82000621b
b200402f2b59b002602d2c21b0c051580c6423648bb81555621bb200802f
2b59b002602d2c0c6423648bb84000626023212d2c452345602345602345
6023766818b08062202d2cb00426b00426b00425b0042545234520b00326
6062636820b0032661658a2344442d2c2045b0005458b040442045b04061
441b2121592d2c45b1302f4523456160b0016069442d2c4b5158b02f2370
b01423421b2121592d2c4b515820b0032545695358441b2121591b212159
2d2c45b01443b0006063b0016069442d2cb02f45442d2c452320458a6044
2d2c45234560442d2c4b235158b90033ffe0b134201bb333003400594444
2d2cb0164358b00326458a586466b01f601b64b020606620581b21b04059
b001615923586559b02923442310b029e01b2121212121592d2cb0164358
b004254564b020606620581b21b04059b0016123586559b0292344b00425
b00725082058021b0359b0052510b004252046b0042523423cb0072510b0
06252046b00425b0016023423c2058011b0059b0052510b00425b029e0b0
072510b00625b029e0b00425b00725082058021b0359b00425b003254348
b00625b00325b0016043481b2159212121212121212d2cb0164358b00425
4564b020606620581b21b04059b0016123581b6559b0292344b00525b008
25082058021b0359b0042510b005252046b0042523423cb00425b0072508
b0072510b006252046b00425b0016023423c2058011b0059b0042510b005
25b029e0b02920456544b0072510b00625b029e0b00525b0082508205802
1b0359b00525b003254348b00425b0072508b00625b00325b0016043481b
2159212121212121212d2c02b00425202046b004252342b0052508b00325
4548212121212d2c02b0032520b0042508b0022543482121212d2c452320
451820b00050205823652359236820b040505821b04059235865598a6044
2d2c4b53234b515a5820458a60441b2121592d2c4b545820458a60441b21
21592d2c4b53234b515a58381b2121592d2cb000214b5458381b2121592d
2cb002435458b0462b1b21212121592d2cb002435458b0472b1b21212159
2d2cb002435458b0482b1b21212121592d2cb002435458b0492b1b212121
592d2c208a08234b538a4b515a5823381b2121592d2c0020b200400325b0
062649618b3812342d2c014623466023466123201020468a61b8ff80628a
b140408a704560683a2d2c208a2349648a2353583c1b21592d2c4b52587d
1b7a592d2cb012004b014b54422d2cb1020042b123018851b1400188535a
58b910000020885458b202010243604259b12401885158b9200000408854
58b2020202436042b12401885458b2022002436042004b014b5258b20208
02436042591bb940000080885458b202040243604259b94000008063b801
00885458b202080243604259b94000010063b80200885458b20210024360
4259b94000020063b80400885458b202400243604259595959592d2c4518
68234b51582320452064b04050587c59688a6059442d2cb00016b00225b0
022501b001233e00b002233eb10102060cb00a236542b00b234201b00123
3f00b002233fb10102060cb006236542b0072342b00116012d2c20b82000
628a6023622d2cb0072558001b0159b0042510b00325b0022520b8ffff54
5821cd1bed5921b006255cb006255a58b0092b5920b005254ab0042547b0
04254760b0062547b0806361b00225b0005558b00325b00725496359b008
2558001b0159b00425b0062549b009255cb009255a58b0092b59b0072546
b0806361b0032520b0005558631b2159612320b0005558b080631b21b080
59b0592bb006255c586959b00425202010b00048233ab0062658001b0159
b0052658b003252f598a12233221212d2cb00625b00a2587b00625b00925
4ab0005358b00625b00a251bb00925b0072559b00225b00225070cb00525
6323b00625636020b94000040063535821b00426b00426b00a1bb9400004
0063655158b0042665b0042665b00a1bb00426b00426b000b00325b00325
0b0d0ab0092eb00725b007250b0d0ab00b2eb00525b0052507595920b000
5558b00525b0052587b00725b007250bb0092510b00b25b0092620b8ffff
545821cd1bed59b00525b0052507b00825b00b254923b00625b0062587b0
0a2510b00b25c15920b00051b800522378b00161b00225b00725b0072507
b00a25b00d254961b08062b00525b005250bb00a252338b00625b0062587
b00825b008250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0
032554b8ffa723792121212121212121212121212d2c23b0005458b94000
00001bb900004000598ab0005458b9400000001bb90000400059b05b2b2d
2c08b0005458b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0
005458b9400000001bb90000400059b05b2b2d2cb00426b00426080db004
26b00426080db05b2b2d2c204569442d00000001000000059eb88df7cb11
5f0f3cf50019080000000000bbeb7ccc00000000c787a88bfbfafd8b09ec
07b600000009000200000000000000010000079efdda00000aa0fbfafaa0
09ec00010000000000000000000000000000001a040e000001cf000004a1
0023045a00ac0444006104ec00ac03e800ac06d700ac03d5005c04340099
01d6008503a30099043400990438005a0317000102730045040e006b040e
0052040e0048040e00ae040e0072040e0067040e0030040e006b040e0052
040e0052000000a100a1012f01e5026202cf034b03f804a7052b05a4063e
06cf075d078507a80856097c0a2f0ae60b860c7a0d3f0d470d4f0e080000
00010000001a0120001000c3000700020010002f00650000119001820004
00010000000100120001000000000006000e00004556545057472b43616c
69627269b2090320b80284b40918014a20b80283b40918014a20b80282b4
0918014a20b80281b40918014a20b80280b40918014a20b8027fb4091801
4a20b8027eb40918014a20b8027db40918014a20b8027cb40918014a20b8
027bb40918014a20b8027ab40918014a20b80279b40918014a20b80278b4
0918014a20b80277b40918014a20b80276b40918014a20b80275b4091801
4a20b80274b40918014a20b80273b40918014a20b80271b40918014a20b8
0270b40918014a20b8026fb40918014a20b8026eb40918014a20b8026db4
0918014a20b8026cb40918014a20b8026bb40918014a20b8026ab4091801
4a20b80269b40918014a20b80268b40918014a20b80267b40918014a20b8
0266b40918014a20b80265b40918014a20b80264b40918014a20b80263b4
0918014a20b80262b40918014a20b80261b40918014a20b80260b4091801
4a20b8025fb40918014a20b8025eb40918014a20b8025db40918014a20b8
025cb40918014a20b8025bb40918014a20b8025ab40918014a20b80259b4
0918014a20b80258b40918014a20b80257b40918014a20b80256b4091801
4a20b80255b40918014a20b80254b40918014a20b80253b40918014a20b8
0252b40918014a20b80251b40918014a20b80250b40918014a20b8024fb4
0918014a20b8024eb40918014a20b8024db40918014a20b8024cb4091801
4a20b8024bb40918014a20b8024ab40918014a20b80249b40918014a20b8
0248b40918014a20b80247b40918014a20b80246b40918014a20b80245b4
0918014a20b80244b40918014a20b80243b40918014a20b80242b4091801
4a20b80241b40918014a20b80240b40918014a20b8023fb40918014a20b8
023eb40918014a20b8023db40918014a20b8023cb40918014a20b8023bb4
0918014a20b8023ab40918014a20b80239b40918014a20b80238b4091801
4a20b80237b40918014a20b80236b40918014a20b80235b40918014a20b8
0234b40918014a20b80233b40918014a20b80232b40918014a20b80231b4
0918014a20b80230b40918014a20b8022fb40918014a20b8022eb4091801
4a20b8022db40918014a20b8022cb40918014a20b8022bb40918014a20b8
022ab40918014a20b80229b40918014a20b80228b40918014a20b80227b4
0918014a20b80226b40918014a20b80225b40918014a20b80224b4091801
4a20b80223b40918014a20b80222b40918014a20b80221b40918014a20b8
0220b40918014a20b8021fb40918014a20b8021eb40918014a20b8021db4
0918014a20b8021cb40918014a20b8021bb40918014a20b8021ab4091801
4a20b80219b40918014a20b80218b40918014a20b80217b40918014a20b8
0216b40918014a20b80215b40918014a20b80214b40918014a20b80213b4
0918014a20b80212b40918014a20b80211b40918014a20b80210b4091801
4a20b8020fb40918014a20b8020eb40918014a20b8020db40918014a20b8
020cb40918014a20b8020bb40918014a20b8020ab40918014a20b80209b4
0918014a20b80208b40918014a20b80207b40918014a20b80206b4091801
4a20b80205b40918014a20b80204b40918014a20b80203b40918014a20b8
0202b40918014a20b80201b40918014a20b80200b40918014a20b801ffb4
0918014a20b801feb40918014a20b801fdb40918014a20b801fcb4091801
4a20b801fbb40918014a20b801fab40918014a20b801f9b40918014a20b8
01f8b40918014a20b801f7b40918014a20b801f6b40918014a20b801f5b4
0918014a20b801f4b40918014a20b801f3b40918014a20b801f2b4091801
4a20b801f1b40918014a20b801f0b40918014a20b801efb40918014a20b8
01eeb40918014a20b801edb40918014a20b801ecb40918014a20b801ebb4
0918014a20b801eab40918014a20b801e9b40918014a20b801e8b4091801
4a20b801e7b40918014a20b801e6b40918014a20b801e5b40918014a20b8
01e4b40918014a20b801e3b40918014a20b801e2b40918014a20b801e1b4
0918014a20b801e0b40918014a20b801dfb40918014a20b801deb4091801
4a20b801ddb40918014a20b801dcb40918014a20b801dbb40918014a20b8
01dab40918014a20b801d9b40918014a20b801d8b40918014a20b801d7b4
0918014a20b801d6b40918014a20b801d5b40918014a20b801d4b4091801
4a20b801d3b40918014a20b801d2b40918014a20b801d1b40918014a20b8
01d0b40918014a20b801cfb40918014a20b801ceb40918014a20b801cdb4
0918014a20b801ccb40918014a20b801cbb40918014a20b801cab4091801
4a20b801c9b40918014a20b801c8b40918014a20b801c7b40918014a20b8
01c6b40918014a20b801c5b40918014a20b801c4b40918014a20b801c3b4
0918014a20b801c2b40918014a20b801c1b40918014a20b801c0b4091801
4a20b801bfb40918014a20b801beb40918014a20b801bdb40918014a20b8
01bcb40918014a20b801bbb40918014a20b801bab40918014a20b801b9b4
0918014a20b801b8b40918014a20b801b7b40918014a20b801b6b4091801
4a20b801b5b40918014a20b801b4b40918014a20b801b3b40918014a20b8
01b2b40918014a20b801b1b40918014a20b801b0b40918014a20b801afb4
0918014a20b801aeb40918014a20b801adb40918014a20b801acb4091801
4a20b801abb40918014a20b801aab40918014a20b801a9b40918014a20b8
01a8b40918014a20b801a7b40918014a20b801a6b40918014a20b801a5b4
0918014a20b801a4b40918014a20b801a3b40918014a20b801a2b4091801
4a20b801a1b40918014a20b801a0b40918014a20b8019fb40918014a20b8
019eb40918014a20b8019db40918014a20b8019cb40918014a20b8019bb4
0918014a20b8019ab40918014a20b80199b40918014a20b80198b4091801
4a20b80197b40918014a20b80196b40918014a20b80195b40918014a20b8
0194b40918014a20b80193b40918014a20b80192b40918014a20b80191b4
0918014a20b80190b40918014a20b8018fb40918014a20b8018eb4091801
4a20b8018db40918014a20b8018cb40918014a20b8018bb40918014a20b8
018ab40918014a20b80189b40918014a20b80188b40918014a20b80187b4
0918014a20b80186b40918014a20b80185b40918014a20b80184b4091801
4a20b80183b40918014a20b80182b40918014a20b80181b40918014a20b8
0180b40918014a20b8017fb40918014a20b8017eb40918014a20b8017db4
0918014a20b8017cb40918014a20b8017bb40918014a20b8017ab4091801
4a20b80179b40918014a20b80178b40918014a20b80177b40918014a20b8
0176b40918014a20b80175b40918014a20b80174b40918014a20b80173b4
0918014a20b80172b40918014a20b80171b40918014a20b80170b4091801
4a20b8016fb40918014a20b8016eb40918014a20b8016db40918014a20b8
016cb40918014a20b8016bb40918014a20b8016ab40918014a20b80169b4
0918014a20b80168b40918014a20b80167b40918014a20b80166b4091801
4a20b80165b40918014a20b80164b40918014a20b80163b40918014a20b8
0162b40918014a20b80161b40918014a20b80160b40918014a20b8015fb4
0918014a20b8015eb40918014a20b8015db40918014a20b8015cb4091801
4a20b8015bb40918014a20b8015ab40918014a20b80159b40918014a20b8
0158b40918014a20b80157b40918014a20b80156b40918014a20b80155b4
0918014a20b80154b40918014a20b80153b40918014a20b80152b4091801
4a20b80150b40918014a20b8014fb40918014a20b8014eb40918014a20b8
014cb40918014a20b8014bb40918014a20b8014ab40918014a20b80149b4
0918014a20b80148b40918014a20b80147b40918014a20b80146b4091801
4a20b80145b40918014a20b80144b40918014a20b80143b30918014ab802
84b21e3e1fb80283b21e151fb80282b21e3e1fb80281b21e3a1fb80280b2
1e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb8027cb21e3e
1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d411fb80278b21d431fb8
0277b21d431fb80276b21d431fb80275b21d411fb80274b21d431fb80273
b21d431fb80272b21d411fb80271b21d421fb80270b21d421fb8026fb21d
421fb8026eb21d431fb8026db21d431fb8026cb21d431fb8026bb21c451f
b8026ab21c451fb80269b21c451fb80268b21c451fb80267b21c451fb802
66b21c441fb80265b21c451fb80264b21c451fb80263b21c451fb80262b2
1c451fb80261b21c451fb80260b21c451fb8025fb21c451fb8025eb21c44
1fb8025db21c451fb8025cb21c451fb8025bb21c451fb8025ab21c451fb8
0259b21c451fb80258b21c451fb80257b21c451fb80256b21c451fb80255
b21c451fb80254b21c451fb80253b21c451fb80252b21c451fb80251b21c
451fb80250b21c451fb8024fb21c451fb8024eb21c451fb8024db21c451f
b8024cb21c451fb8024bb21c451fb8024ab21b491fb80249b21b491fb802
48b21b4a1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1fb80244b2
1b4c1fb80243b21b4c1fb80242b21b4b1fb80241b21b491fb80240b21b49
1fb8023fb21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb21b4b1fb8
023bb21b4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c1fb80237
b21b4c1fb80236b21b4c1fb80235b21b491fb80234b21b491fb80233b21b
4a1fb80232b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022fb21b4b1f
b8022eb21b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b4c1fb802
2ab21b4c1fb80229b21b4c1fb80228b21b4c1fb80227b21b491fb80226b2
1b491fb80225b21b4a1fb80224b21b4a1fb80223b21b4a1fb80222b21b4b
1fb80221b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb21b4c1fb8
021db21b4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e1fb80219
b21a4e1fb80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb80215b21a
4e1fb80214b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211b21a4e1f
b80210b21a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a4f1fb802
0cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1fb80208b2
1a4f1fb80207b21a4f1fb80206b219501fb80205b219511fb80204b21951
1fb80203b219501fb80202b219511fb80201b219511fb80200b219511fb8
01ffb219511fb801feb219501fb801fdb219511fb801fcb219511fb801fb
b219511fb801fab219501fb801f9b219511fb801f8b219511fb801f7b219
511fb801f6b219511fb801f5b218541fb801f4b218531fb801f3b218541f
b801f2b218541fb801f1b218541fb801f0b218531fb801efb218541fb801
eeb218541fb801edb218541fb801ecb218531fb801ebb218531fb801eab2
18541fb801e9b218541fb801e8b218541fb801e7b218541fb801e6b21853
1fb801e5b218541fb801e4b218531fb801e3b218541fb801e2b218541fb8
01e1b218541fb801e0b218531fb801dfb218531fb801deb218541fb801dd
b218541fb801dcb218541fb801dbb218541fb801dab218531fb801d9b218
541fb801d8b218541fb801d7b217571fb801d6b217561fb801d5b217561f
b801d4b217571fb801d3b217571fb801d2b217571fb801d1b217571fb801
d0b217561fb801cfb217561fb801ceb217571fb801cdb217571fb801ccb2
17571fb801cbb217571fb801cab217561fb801c9b217561fb801c8b21757
1fb801c7b217571fb801c6b217571fb801c5b217571fb801c4b217571fb8
01c3b217561fb801c2b217571fb801c1b217571fb801c0b217571fb801bf
b217561fb801beb217561fb801bdb217571fb801bcb217571fb801bbb217
571fb801bab217571fb801b9b217571fb801b8b217561fb801b7b217571f
b801b6b217571fb801b5b217571fb801b4b217571fb801b3b2163f1fb801
b2b2165b1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1fb801aeb2
165b1fb801adb2165b1fb801acb2165b1fb801abb2165b1fb801aab2163e
1fb801a9b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2165b1fb8
01a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b1fb801a1
b2165b1fb801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8019db216
3f1fb8019cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199b2165b1f
b80198b2163e1fb80197b2165b1fb80196b2165b1fb80195b2165b1fb801
94b2163e1fb80193b2163f1fb80192b2163f1fb80191b2165b1fb80190b2
165b1fb8018fb2165b1fb8018eb2165b1fb8018db2165b1fb8018cb2163f
1fb8018bb2165b1fb8018ab2165b1fb80189b2165b1fb80188b2165b1fb8
0187b2165b1fb80186b215611fb80185b215621fb80184b215621fb80183
b215661fb80182b215661fb80181b215551fb80180b215451fb8017fb215
361fb8017eb215361fb8017db215611fb8017cb215621fb8017bb215621f
b8017ab215641fb80179b215661fb80178b215661fb80177b215661fb801
76b215661fb80175b215661fb80174b215661fb80173b215451fb80172b2
15621fb80171b215621fb80170b215631fb8016fb215641fb8016eb21566
1fb8016db215661fb8016cb215661fb8016bb215661fb8016ab215661fb8
0169b215621fb80168b215621fb80167b215611fb80166b215641fb80165
b215641fb80164b215661fb80163b215661fb80162b215661fb80161b215
661fb80160b215661fb8015fb215661fb8015eb215551fb8015db215451f
b8015cb215451fb8015bb215361fb8015ab215611fb80159b215621fb801
58b215621fb80157b215631fb80156b215641fb80155b215661fb80154b2
15661fb80153b215661fb80152b215661fb80151b214401fb80150b21455
1fb8014fb214561fb8014eb214831fb8014db2142d1fb8014cb214401fb8
014bb214401fb8014ab214411fb80149b214401fb80148b214401fb80147
b214411fb80146b2147e1fb80145b214871fb80144b2147f1fb80143b214
801fb80142b212461fb80141b212461fb80140b212461fb8013fb212461f
b8013eb212441fb8013db212461fb8013cb211591fb8013bb211591fb801
3ab2115b1fb80139b2115b1fb80138b211471fb80137b211581fb80136b2
115a1fb80135b2115b1fb80134b2115b1fb80133b2112c1fb80132b21147
1fb80131b211551fb80130b211571fb8012fb211571fb8012eb211581fb8
012db211591fb8012cb211591fb8012bb2115a1fb8012ab2115a1fb80129
b2115b1fb80128b2115b1fb80127b2115b1fb80126b2115b1fb80125b211
561fb80124b211561fb80123b211571fb80122b211581fb80121b211591f
b80120b2115a1fb8011fb2115a1fb8011eb2115b1fb8011db2115b1fb801
1cb2115b1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1fb80118b2
105e1fb80117b2105f1fb80116b2105f1fb80115b2105f1fb80114b2105f
1fb80113b2105f1fb80112b2105d1fb80111b2105e1fb80110b2105f1fb8
010fb2105f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d1fb8010b
b2105e1fb8010ab2105f1fb80109b2105f1fb80108b2105f1fb80107b210
5f1fb80106b2105d1fb80105b2105e1fb80104b2105f1fb80103b2105f1f
b80102b2105f1fb80101b2105f1fb8010040ff0f621fff0f621ffe0f631f
fd0f641ffc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f641ff60f
641ff50f641ff40f621ff30f621ff20f631ff10f641ff00f641fef0f641f
ee0f641fed0f621fec0f621feb0f631fea0f641fe90f641fe80f641fe70f
641fe60e671fe50e681fe40e681fe30e681fe20e681fe10e671fe00e681f
df0e681fde0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e681fd80d
6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1fd10d2b1f
d00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d6c1fc90d
6d1fc80d6a1fc70d691fc60d681fc50d671fc40d261fc30d311fc20d311f
c10d311f40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721fbb0c731f
ba0c741fb90c741fb80c741fb70c711fb60c711fb50c721fb40c731fb30c
741fb20c741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1fac0b7d1f
ab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b2d1fa40b
7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f9d0b7e1f
9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b7e1f950b
7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f8e0a671f
8d0aa51f8c0aa71f8503251f8403381f8301381f8255805581ab80557f55
7d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d4012060a7c557a557b
ab7a557955775578ab7755ba028600660285403c5576ab75550475147574
7503f47501ab750144750130750102007510752075030c7455725573ab72
55007250728072b072043bb072e072020072010ab8ffc0b3721b1e46b8ff
c0407c720d104671556f5570ab6f556e666d556a03251f6938675568ab67
556638645565ab645563386255613860555f385d555eab5d555c385a555b
ab5a55593858555703251f5638545555ab54555338515552ab51554f384e
554e03251f4d384b554cab4b554a38485549ab4855473846554503381f00
1c101c201c0310b8ffc0404e1c1b1e46001b0142301b401be01bf01b0400
1bb01bc01b03120f1a1f1a02290f1901434f19016f197f198f19030f18cf
18024018292c460f17cf17df17ef1704134017292e460016101620160315
b8ffc0b3164d5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d16
2326460f15010f151f1502451f15010011e011f0110315bf10cf10020f0f
010f0fff0f02400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d
1f0d020f0d1f0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02
553f0b4f0b02400b3f4346400b2d30460003012001010001100120010308
b8ffc0b301151f46b80100b316010501b80190b154532b2b4bb80800524b
b008505bb00188b02553b00188b040515ab00688b000555a5b58b101018e
59b101024354b0144b515a58b101018e59858d8d00421d4bb01d5358b0a0
1d594bb0805358b0401d594bb0ff5358b0001db1160042592b5e7375732b
2b745e732b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b
5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73
737373742b2b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff028400640283
0064028200640281006402800064027f0064027e0064027d0064027c0064
027b0064027a006402790064027800640277006402760064027500640274
0064027300640271006402700064026f0064026e0064026d0064026c0064
026b0064026a006402690064026800640267006402660064026500640264
006402630064026200640261006402600064025f0064025e0064025d0064
025c0064025b0064025a0064025900640258006402570064025600640255
00640254006402530064025200640251006402500064024f0064024e0064
024d0064024c0064024b0064024a00640249006402480064024700640246
0064024500640244006402430064024200640241006402400064023f0064
023e0064023d0064023c0064023b0064023a006402390064023800640237
006402360064023500640234006402330064023200640231006402300064
022f0064022e0064022d0064022c0064022b0064022a0064022900640228
006402270064022600640225006402240064022300640222006402210064
02200064021f0064021e0064021d0064021c0064021b0064021a00640219
006402180064021700640216006402150064021400640213006402120064
0211006402100064020f0064020e0064020d0064020c0064020b0064020a
00640209006402080064020700640206006402050064020441ff00640203
006402020064020100640200006401ff006401fe006401fd006401fc0064
01fb006401fa006401f9006401f8006401f7006401f6006401f5006401f4
006401f3006401f2006401f1006401f0006401ef006401ee006401ed0064
01ec006401eb006401ea006401e9006401e8006401e7006401e6006401e5
006401e4006401e3006401e2006401e1006401e0006401df006401de0064
01dd006401dc006401db006401da006401d9006401d8006401d7006401d6
006401d5006401d4006401d3006401d2006401d1006401d0006401cf0064
01ce006401cd006401cc006401cb006401ca006401c9006401c8006401c7
006401c6006401c5006401c4006401c3006401c2006401c1006401c00064
01bf006401be006401bd006401bc006401bb006401ba006401b9006401b8
006401b7006401b6006401b5006401b4006401b3006401b2006401b10064
01b0006401af006401ae006401ad006401ac006401ab006401aa006401a9
006401a8006401a7006401a6006401a5006401a4006401a3006401a20064
01a1006401a00064019f0064019e0064019d0064019c0064019b0064019a
006401990064019800640197006401960064019500640194006401930064
019200640191006401900064018f0064018e0064018d0064018c0064018b
0064018a0064018900640188006401870064018600640185006441800184
006401830064018200640181006401800064017f0064017e0064017d0064
017c0064017b0064017a0064017900640178006401770064017600640175
00640174006401730064017200640171006401700064016f0064016e0064
016d0064016c0064016b0064016a00640169006401680064016700640166
0064016500640164006401630064016200640161006401600064015f0064
015e0064015d0064015c0064015b0064015a006401590064015800640157
0064015600640155006401540064015300640152006401500064014f0064
014e0064014c0064014b0064014a00640149006401480064014700640146
00640145006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e00>
[7185 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 4856 18 <00020048ffed03c705210013002b00ea4019281201291101260d01260c01
2608012507012a03012902012db8ffc040250f024d602d01141810014d14
100f014d14160d014d140a0c014d14200b014d14180c014d14bb022d0000
0020ffe8b310014d20b8fff0b30f014d20b8ffeab30d014d20b8fff6b30c
014d20b8ffe8b60c014d24200120b8022d40090a200030004000030ab8ff
f040090f014d2f0a4f0a0200b8ffd040090f014d0a100f024d00b8ffc040
0a0f024d000a000a2d2c1bb8010ab20f5325b8010ab10556003fed3fed11
120139392f2f2b2b2b5d2b5d10e15d2b2b2b2b2b10e12b2b2b2b2b2b3130
5d2b5d5d5d5d5d5d5d5d01140e0223222e0235343e0233321e0207342e04
23220e0215141e0233323e0403c72f6db0817aa7662b306cb0807ba7662b
b00e1b2b3c4d30556a3d161e41654838553d281809028a95f6b16157a9f7
a094f7b16157a9f7ac619a76553719508cbc6c91cb803a24435e7285>GIUQMX+Calibri AddT42Char 

1 0 1 <> GIUQMX+Calibri AddT42Char 
1 5580 20 <000100720000039c0521003e0094400d2936012b1e01291d01261e0140b8
ffc040170f024d604001161810014d16100c0d014c16200b014d16b8022d
b633253325330039b8ffe8b310014d39ba027f000bffc0b30c014d0bb8ff
e0400b0f014d0b1138392020391bb8012eb63316062e531039b80128b106
54003fed323f123939ed11392f123939012f2b2be12bcd39392f2f10e12b
2b2b31305d2b005d015d5d5d25140e022321222e0235343e0237133e0335
342e0223220e0223222e0235343e0633321e0215140e02070721321e0203
9c05090f09fd350e150f07030a0f0cfb576939121c3550343d6149310c07
0b0704020508183b596b3b5e8d5d2e1647866fcd0233080f0b054a121c13
0907101e16141e17170d010a5c9278622b2b4d3a2222282208121e150f16
100e15242318355c7a453e7b8faf72d609121b00>GIUQMX+Calibri AddT42Char 
1 6388 22 <00020030fffa03d30514002a002e00fb403a252e01262d01272c01242701
242601251c01261b01231a01241901251801251701261601261501261401
261001260f012405012404012b1b0130b8ffc040120f024d6030012d1618
0f024d162010014d16b8ffe0b30f014d16b8ffe0b70c014d161c2e2e10b8
fffc401d0f024d101810014d10100f014d10100d014d100a0c014d10100b
014d10bb021100270004ffd4b30f024d04b8ffd0b30c014d04b8ffe0400a
0b014d0404302f271b2eb8010b400a042b2110100a21520a55003f3f1239
2f123933ed3232111201392f2b2b2b33e12b2b2b2b2b2b321133cd2b2b2b
2b3231305d2b005d015d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d5d011406
232311140e0223222e02351121222e0235343e0237013e0333321e021511
3332160123012103d31412920814201918201307fdea0c100d0502060a07
01d205131e2c1e21311e10921115fea102fe5b01a701702126fef0080b08
0404080b08011006101e18131e19170d0312080c080305080d09fcc62302
e9fd3a00>GIUQMX+Calibri AddT42Char 
1 3920 16 <0002006bffed03bd0520003400480099b9004affc040170f024d604a012b
753f01663f01433f01343f01243f013fb8024340140c1c1c0c7a35016a35
014b35013a35012b350135b80243b670000120000100b8ffe0b30f014d00
b8ffe8b70f024d00300c010cb8fffa400a0f024d0c3aff30300526b80100
b2135944b80115b1055f003fed3fed12392fed012f2b5dd42b2b5d5de15d
5d5d5d5d12392f10e15d5d5d5d5d3231305d2b01140e0223222e0435343e
0433321e0615140e0223222e0223220e02073e0333321e0207342e022322
0e0207141e0233323e0203bd346ca671517c5c3d2510122e4f77a66e254c
402c0e07040201070b090b26364d335d865529031a414d563169905926ae
17365a42254a453f1a213f5e3f405e3e1d01a3559f7949284a6c8aa45e53
aa9e8b673c090f120b0d0f130e121a10080e110e4c80a95c0f1e180f3965
89603a5f42240d171f1281ae692d30516500>GIUQMX+Calibri AddT42Char 
1 6782 23 <ffff006bffed03bd0520020600100000>GIUQMX+Calibri AddT42Char 
1 4268 17 <00030052ffed03ba05210027003700470182b90036fff0b40f11014c36b8
fff0b40c0d014c35b8fff0b40f11014c35b8fff0b40c0d014c34b8fff0b4
0f11014c34b8fff0b40c0d014c33b8fff0b311014d33b8fff0b30f014d49
b8ffc0b60f024d60490130b8fff0b40c0d014c30b8fff0b40f10014c30b8
fff0b40c0d014c30b8ffe0b30b014d30b8021940191428100c0d014c2810
0f10014c28100c0d014c28200b014d28b80218401a1e0f231e1e180f014d
14180f014d141e141e0a38100c0d014c38b8ffd040151d014d38100f1001
4c38100c0d014c38200b014d38ba02430000ffd4b30f024d00b8ffe0b30f
014d00b8ffc0b314014d00b8ffc0b310014d00b8ffc0b30d014d00b8ffc0
b40b014d0042b8fff0400a0c0d014c42301d014d42b8fff0b40f10014c42
b8fff0b40c0d014c42b8ffe0b30b014d42b8024340110a400b014d0a353d
052dfd195945fd055f003fed3fed123939012f2be12b2b2b2b2bd42b2b2b
2b2b2be12b2b2b2b2b1239392f2f2b2b12393910e12b2b2b2b10e12b2b2b
2b31305d2b002b2b2b2b2b2b2b2b01140e0223222e0235343e02372e0335
343e0233321e0215140e02071e0303342e0223220615141e021736361334
2e02270e0315141633323603ba3c71a66b649e6e3a284b6e453c5c402131
639966628f5d2c21405d3c476f4b27d81d3853356c6f1b39573c656c2a22
4567443f5f3d1f85848083014c54835a2e2a52784d3d66564b221f45515c
36447758332f516e3f335e544920234a555f025f2a443019625527433c39
1f347efda22e4b413d211f3e42492c616a6b>GIUQMX+Calibri AddT42Char 
1 6798 24 <ffff0052ffed03ba0521020600110000>GIUQMX+Calibri AddT42Char 
1 5214 19 <000100ae0000039f0517002e00e54024241e01241d01241c01231b01241a
01241901261801261701291201291101122010014d30b8ffc0400d0f024d
60300100200b014d0029b8ffe8b310014d29b8fff0b30f014d29b8fff0b3
0d014d29b8fff6b30c014d29b8fff8b30b014d29b80211400e1e18200b01
4d180b200b014d0b11b8ffe0b30f014d11b8ffd4b30f024d11b8ffc0b310
014d11b8ffe0b30f014d11b8ffc0b30c014d11b8fff040090b014da01101
111312b8013fb323522910b80107b10654003fed323ffdcd012f5d2b2b2b
2b2b2bcd2bc42b33f12b2b2b2b2bc52b31305d2b002b015d5d5d5d5d5d5d
5d5d5d25140e022321222e0235343e02332111070606262635343e023725
3e0333321e02151133321e02039f060a0d07fd5c070c0b0606090d08010e
fa13170e0503060b09012a040c12181218201206ea080e090544131a1007
07101a13121a110903d8950a040d1e171118100c06bf0304040104070b06
fb8f09111a00>GIUQMX+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>GIUQMX+Calibri AddT42Char 
GIUQMX+Calibri /CharStrings get begin
/g18 18 def
/g1 1 def
/g20 20 def
/g22 22 def
/g23 23 def
/g24 24 def
/g19 19 def
end
GIUQMX+Calibri /Encoding get
dup 33 /g18 put
dup 34 /g1 put
dup 35 /g20 put
dup 36 /g22 put
dup 37 /g23 put
dup 38 /g24 put
dup 39 /g19 put
pop
end
%ADOEndSubsetFont
/PEEXPS+Calibri /GIUQMX+Calibri findfont ct_VMDictPut/PEEXPS+Calibri*1 [33{/.notdef}rp /g18 /g1 /g20 /g22 /g23 /g24 /g19 216{/.notdef}rp]PEEXPS+Calibri nfPEEXPS+Calibri*1 [12 0 0 -12 0 0 ]msf42.4543 280.783 mo(!")[6.08165 0 ]xsh30.2902 243.214 mo(#!!")[6.08164 6.08165 6.08165 0 ]xsh30.2902 205.645 mo($!!")[6.08164 6.08165 6.08165 0 ]xsh30.2902 168.076 mo(%!!")[6.08164 6.08165 6.08165 0 ]xsh30.2902 130.507 mo(&!!")[6.08164 6.08165 6.08165 0 ]xsh24.2082 92.9382 mo('!!!")[6.08165 6.08164 6.08165 6.08165 0 ]xsh24.2082 55.3691 mo('#!!")[6.08165 6.08164 6.08165 6.08165 0 ]xsh24.2082 17.8 mo('$!!")[6.08165 6.08164 6.08165 6.08165 0 ]xshgsave
0 300.5 mo
205.907 300.5 li
205.907 281.1 li
0 281.1 li
0 300.5 li
clp
%ADOBeginSubsetFont: GIUQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PEEXPS+Calibri gcheck setglobal} if
1 6814 25 <00020052ffed03a605210030004200bd4013292e012a0501290401290301
2a2601260a0144b8ffc040200f024d60440131080d014d31100c0d014c1d
7a3101393149316931032b310131b8022c4009000e0e200070000200b8ff
e0b30f024d00b8ffe0b40f014d003bb8fff8b30d014d3bb8fff040120c0d
014c753b01363b463b663b03243b013bb8022b400e2f25012540f2202007
36f42a5318b80108b10756003fed3fed12392fed012f5de15d5d5d2b2bc4
2b2b5d392f10e15d5d5d322b2b31305d2b005d5d015d5d5d5d01140e0423
222e0435343e0233321e0233323e0237060623222e0235343e0233321e04
07342e0223220e0215141e0233323603a61430517ba9702b51412c140903
060b080b283d5233618b582c023594606c935927326aa472517d5c402711
af2242603f415c3b1c19385a424b8c02ba54ac9f8b683b0b1012121f1a16
1a0e050f120f4b7ea65c1f303b668c53569b7646294d6d8aa14680af6c30
2f4f64353b6244252d00>PEEXPS+Calibri AddT42Char 
1 3770 14 <00010001fee7030a05be00150008b11005002f2f3130170e0323222e0237
013e0333321e0207a8040d141d151921120406025d040d131e1519201204
05f10d0f0804070d130d067b0d0f0903070c140d>PEEXPS+Calibri AddT42Char 
PEEXPS+Calibri /CharStrings get begin
/g25 25 def
/g14 14 def
end
PEEXPS+Calibri /Encoding get
dup 40 /g25 put
dup 41 /g14 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PEEXPS+Calibri*1 [33{/.notdef}rp /g18 /g1 /g20 /g22 /g23 /g24 /g19 /g25 /g14 214{/.notdef}rp]PEEXPS+Calibri nfPEEXPS+Calibri*1 [12 0 0 -12 0 0 ]msf47.1886 295.6 mo(\(\)'#\)''")[6.08165 4.62961 6.08165 6.08165 4.62962 6.08163 6.08165 0 ]xshgrestore
gsave
31.2065 300.5 mo
308.964 300.5 li
308.964 281.1 li
31.2065 281.1 li
31.2065 300.5 li
clp
PEEXPS+Calibri*1 [12 0 0 -12 0 0 ]msf150.246 295.6 mo(\(\)'\(\)''")[6.08165 4.62961 6.08165 6.08165 4.62962 6.08163 6.08165 0 ]xshgrestore
gsave
134.264 300.5 mo
412.022 300.5 li
412.022 281.1 li
134.264 281.1 li
134.264 300.5 li
clp
PEEXPS+Calibri*1 [12 0 0 -12 0 0 ]msf253.303 295.6 mo(\(\)#%\)''")[6.08163 4.62961 6.08167 6.08163 4.62964 6.08163 6.08163 0 ]xshgrestore
gsave
237.321 300.5 mo
507 300.5 li
507 281.1 li
237.321 281.1 li
237.321 300.5 li
clp
%ADOBeginSubsetFont: GIUQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PEEXPS+Calibri gcheck setglobal} if
1 5900 21 <00010067ffed0392052100580105b9005affc0401c0f024d605a01310810
014d31100f014d31100c0d014c31200b014d31b80235400a4e53264e4e18
13014d40b8ffe840260f014d26200f014d40264e4e2640030e1b0810014d
1b100f014d1b100c0d014c1b200b014d1bb8fff8b30b014d1bb8022db500
080b014d00b8ffe8b40f024d000eb8ffe0b30f014d0eb8fff0b30f014d0e
b8ffc040130c014d0e3b400f014d3b400c0d014c2f3b0111b8ffc0b30f01
4d11b8ffc0400a0c0d014c3b113b111636b8010b400a49532cf320200549
5316b8010bb10556003fed3f12392fed3910ed1139392f2f2b2b5d2b2b01
2f2b2b2bd42b2be12b2b2b2b2b1217392f2f2f2b2b2b11123910e12b2b2b
2b31305d2b01140e0223222e0635343633321e0233323e0235342e022323
222e0235343e023333323e0235342e0223220e0223222e0235343e063332
1e0215140e0207151e0303923e74aa6b4171583a0f0806030e0d0935536f
44426444222b53794d7b080f0b07060b0e0971426949271a3451353a614c
320a070b0703020608133a556f405a885b2d203e5a3b436f502d0172598f
6637151d1f0e0e141d15241c202520223e55323758402207101a1513190f
07224059372849361f232823050f1b160f17110e132423182e5475473d69
51390b020735506b>PEEXPS+Calibri AddT42Char 
PEEXPS+Calibri /CharStrings get begin
/g21 21 def
end
PEEXPS+Calibri /Encoding get
dup 42 /g21 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PEEXPS+Calibri*1 [33{/.notdef}rp /g18 /g1 /g20 /g22 /g23 /g24 /g19 /g25 /g14 /g21 213{/.notdef}rp]PEEXPS+Calibri nfPEEXPS+Calibri*1 [12 0 0 -12 0 0 ]msf356.36 295.6 mo('!\)*\)''")[6.08167 6.08163 4.62961 6.08167 4.62961 6.08163 6.08167 0 ]xshgrestore
gsave
317.713 300.5 mo
507 300.5 li
507 281.1 li
317.713 281.1 li
317.713 300.5 li
clp
PEEXPS+Calibri*1 [12 0 0 -12 0 0 ]msf456.179 295.6 mo('!\)'!\)''")[6.08163 6.08167 4.62961 6.08163 6.08167 4.62961 6.08163 6.08167 0 ]xshgrestore
0 0 0 1 cmyk
%ADOBeginSubsetFont: DIERMX+Calibri-Bold Initial
ct_T42Dict begin
-0.516 -0.305 1.238 0.969
 256 array 0 1 255 {1 index exch /.notdef put} for  /DIERMX+Calibri-Bold
Type42DictBegin
[<00010000000b000b000b000b6376742000000000000000bc000006086670
676d00000000000006c400000913676c7966000000000000267c000010d2
686561640000000000000fd8000000366868656100000000000010100000
0024686d74780000000000001034000000406c6f63610000000000001074
000000226d6178700000000000001098000000206e616d65000000000000
10b8000000287072657000000000000010e00000159c6764697200000000
00000000000000000000079e0000fe930000000000000000000000810081
009c00ab00b500ba00c100ca00d300f3010a0060008500bf00e300ea00f2
00fb010001070115011c0129000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000fe83056d
000d03c0000600170000fffaffe9fea9ffe90000050e000600170000fffa
ffe9fe93050e00170426000600170000fffaffe9ff12ffed050e00170426
000600170000fffaffe9fe93feb8fece060b0010050e0006001002cbfffa
fff001edfffa023f00060010ff36fffafff00287000600100000fffafff0
079efeaffe9f00000000000000000000000000700072007500780079007a
007b007d007e007f008300860087008800890085007f0086008b008c008d
008e008f0090009100920093009400950096009700980099009a009b009c
009d009e009f009200930094009b009c009e009e00960099009a009d009e
00a200a600a900ac00a200a300a400a500a700a800a900aa00ab00ac00ae
00a300a500a700a800aa00ab00ac00ad00ae00a000a100a300a600a700a9
00aa00ac00ad00af00af00b000b100b200b300b400b500af00af00b000b2
00b300b400b500b800c000b600b700b800b900ba00bb00bc00bd00be00bf
00c000c100c200b900ba00bc00bd00bf00c000c100c200b600b700b800b9
00ba00bb00bc00bd00be00bf00c000c100c200c000c100c200c300c400c5
00c600c700c800c900ca00cb00cc00cd00ce00cf00c300c400c500c600c7
00c800c900ca00cb00cc00cd00ce00cf00c300c400c500c600c700c800c9
00ca00cb00cc00cd00ce00cf00c500c800c900ca00cb00ce00cf00d000d1
00d200d300d400d500d600d700d900db00de00df00e000e200e300ec00d0
00d100d200d300d400d500d600d700d800d900da00db00dd00de00df00e0
00e100e300e500e900ec00ed00d100d300d400d500d800d900da00dc00e0
00e100e800d000d100d400d600e000e4010800f5010200fb00ff0108008f
009000960092009300990090009100970098009a009d00a400a600a700a8
00a900af009a00a200a300a700a900aa00ab00ac00ad00b000ad009b00aa
00ab00ad00b0009a00aa00ac00ad00ae00af00b100b900bb00bc00bd00be
00c100c200c300c400c500c600c700c800c900ca00cb00ce00b300b400b5
00b600b700b800bc00c200c500c800ca00cb00cd00ce00cf00d000c700b7
00b800b900bb00bc00be00c600c700c800c900cb00cf00d000b200b600b7
00c200c400c500c600c700cb00cc00cd00ce00cf00d000d100d400d500d7
00d800d900da00db00dc00de00df00e000e200e300e500e600d100d300d6
00d700d800da00db00dc00dd00de00df00e000e100e200e300e400e500d1
00d200d400d500da00db00dd00de00df00e000e100e200e600d200d300d4
00d700d800dd00de00e000e100e200e300e400e500e600d200da00e100e9
00ea00ec00e800e900ea00eb00ec00ed00eb00e700ea00eb00ec00ed00e7
00e900ea00ec00ed00ee00ef00f500ee00ef00f000f100f200f300f400f5
00f600ee00f000f200ef00f000f100f200f300f400f500f600ee00ef00f0
00f100f200f300f400f500f600f700f700f800f900fa00fb00fc00fd00f7
00f800f900fa00fb00fd00f700f800f900fa00fb00fc00fd00fd00fe00ff
010001010102010300fe010001010102010300fe00ff0100010101020103
01020103010401050106010701080109010a010c010d010e010f01100107
010401050106010701080109010a010b010d010e010f0110011101040105
0106010701080109010a010b010c010d010e010f01100111010401050106
01070109010e010f011201130114011501170118011a011b011c011d011e
011f01210122011201130114011501170119011b011c011d011e01200121
0123012401250113011401150116011701180119011a011b011c011d011f
01200117011c011d011e012001210129013001770129012b012e012f0130
01310134013501370139012b012d013001320134013a012e01300134013a
014200500062006c00fa05e802cc0114011400a000b140465f5e5d5c5b5a
59585554535251504f4e4d4c4b4a494847464544434241403f3e3d3c3b3a
39383736352f2e2d2c2826252423221f181411100f0d0b0a090807060504
030201002c4523466020b02660b004262348482d2c452346236120b02661
b004262348482d2c45234660b0206120b04660b004262348482d2c452346
2361b0206020b02661b02061b004262348482d2c45234660b0406120b066
60b004262348482d2c4523462361b0406020b02661b04061b00426234848
2d2c0110203c003c2d2c20452320b0cd442320b8015a51582320b08d4423
5920b0ed51582320b04d44235920b0042651582320b00d44235921212d2c
20204518684420b001602045b04676688a4560442d2c01b10b0a43234365
0a2d2c00b10a0b4323430b2d2c00b0282370b101283e01b0282370b10228
453ab10200080d2d2c2045b00325456164b050515845441b2121592d2c20
45b0004360442d2c01b00643b00743650a2d2c2069b04061b0008b20b12c
c08a8cb8100062602b0c642364615c58b00361592d2c8a03458a8a87b011
2bb0292344b0297ae4182d2c4565b02c234445b02b23442d2c4b52584544
1b2121592d2c01b005251023208af500b0016023edec2d2c01b005251023
208af500b0016123edec2d2c01b0062510f500edec2d2c20b00160011020
3c003c2d2c20b001610110203c003c2d2c00b00743b006430b2d2c21210c
6423648bb84000622d2c21b08051580c6423648bb82000621bb200402f2b
59b002602d2c21b0c051580c6423648bb81555621bb200802f2b59b00260
2d2c0c6423648bb84000626023212d2c4523456023456023456023766818
b08062202d2cb00426b00426b00425b0042545234520b003266062636820
b0032661658a2344442d2c2045b0005458b040442045b04061441b212159
2d2c45b1302f4523456160b0016069442d2c4b5158b02f2370b01423421b
2121592d2c4b515820b0032545695358441b2121591b2121592d2c45b014
43b0006063b0016069442d2cb02f45442d2c452320458a60442d2c452345
60442d2c4b235158b90033ffe0b134201bb3330034005944442d2cb01643
58b00326458a586466b01f601b64b020606620581b21b04059b001615923
586559b02923442310b029e01b2121212121592d2cb0164358b004254564
b020606620581b21b04059b0016123586559b0292344b00425b007250820
58021b0359b0052510b004252046b0042523423cb0072510b006252046b0
0425b0016023423c2058011b0059b0052510b00425b029e0b0072510b006
25b029e0b00425b00725082058021b0359b00425b003254348b00625b003
25b0016043481b2159212121212121212d2cb0164358b004254564b02060
6620581b21b04059b0016123581b6559b0292344b00525b0082508205802
1b0359b0042510b005252046b0042523423cb00425b0072508b0072510b0
06252046b00425b0016023423c2058011b0059b0042510b00525b029e0b0
2920456544b0072510b00625b029e0b00525b00825082058021b0359b005
25b003254348b00425b0072508b00625b00325b0016043481b2159212121
212121212d2c02b00425202046b004252342b0052508b003254548212121
212d2c02b0032520b0042508b0022543482121212d2c452320451820b000
50205823652359236820b040505821b04059235865598a60442d2c4b5323
4b515a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b
53234b515a58381b2121592d2cb000214b5458381b2121592d2cb0024354
58b0462b1b21212121592d2cb002435458b0472b1b212121592d2cb00243
5458b0482b1b21212121592d2cb002435458b0492b1b212121592d2c208a
08234b538a4b515a5823381b2121592d2c0020b200400325b0062649618b
3812342d2c014623466023466123201020468a61b8ff80628ab140408a70
4560683a2d2c208a2349648a2353583c1b21592d2c4b52587d1b7a592d2c
b012004b014b54422d2cb1020042b123018851b1400188535a58b9100000
20885458b202010243604259b12401885158b920000040885458b2020202
436042b12401885458b2022002436042004b014b5258b202080243604259
1bb940000080885458b202040243604259b94000008063b80100885458b2
02080243604259b94000010063b80200885458b202100243604259b94000
020063b80400885458b202400243604259595959592d2c451868234b5158
2320452064b04050587c59688a6059442d2cb00016b00225b0022501b001
233e00b002233eb10102060cb00a236542b00b234201b001233f00b00223
3fb10102060cb006236542b0072342b00116012d2c20b82000628a602362
2d2cb0072558001b0159b0042510b00325b0022520b8ffff545821cd1bed
5921b006255cb006255a58b0092b5920b005254ab0042547b004254760b0
062547b0806361b00225b0005558b00325b00725496359b0082558001b01
59b00425b0062549b009255cb009255a58b0092b59b0072546b0806361b0
032520b0005558631b2159612320b0005558b080631b21b08059b0592bb0
06255c586959b00425202010b00048233ab0062658001b0159b0052658b0
03252f598a12233221212d2cb00625b00a2587b00625b009254ab0005358
b00625b00a251bb00925b0072559b00225b00225070cb005256323b00625
636020b94000040063535821b00426b00426b00a1bb94000040063655158
b0042665b0042665b00a1bb00426b00426b000b00325b003250b0d0ab009
2eb00725b007250b0d0ab00b2eb00525b0052507595920b0005558b00525
b0052587b00725b007250bb0092510b00b25b0092620b8ffff545821cd1b
ed59b00525b0052507b00825b00b254923b00625b0062587b00a2510b00b
25c15920b00051b800522378b00161b00225b00725b0072507b00a25b00d
254961b08062b00525b005250bb00a252338b00625b0062587b00825b008
250bb00a2510b00b25c4b00625b0062507b00925b00c2549b0032554b8ff
a723792121212121212121212121212d2c23b0005458b9400000001bb900
004000598ab0005458b9400000001bb90000400059b05b2b2d2c08b00054
58b9400000001bb900004000590db05b2b2d2c8a8a080d8ab0005458b940
0000001bb90000400059b05b2b2d2cb00426b00426080db00426b0042608
0db05b2b2d000001000000059eb832f46b0a5f0f3cf50019080000000000
bbeb7ccc00000000c787a88bfbdafd8d09ec07c500010009000200000000
000000010000079efdda00000aa0fbdafa8609ec00010000000000000000
0000000000000010040e000001cf000003e7008d03c8003f0539008c0740
002b044b004b0407004a03cb001b044b007e03d7007e044b007e02d8007e
03ca0016027e006b027e00610000009e009e013701f3025d02f70393045f
056505e3066306ea076907d90821086900000001000000100120001000bd
000700020010002f006000000c6301410004000100000001001200010000
0000000600130000534655524b442b43616c696272692d426f6c64000000
b10903b802f9b21e1d1fb802f8b21e2b1fb802f7b21e2c1fb802f6b21e2c
1fb802f5b21e2c1fb802f4b21e2b1fb802f3b21e2c1fb802f2b21e2c1fb8
02f1b21e2c1fb802f0b21e2c1fb802efb21e2c1fb802eeb21e2b1fb802ed
b21e2b1fb802ecb21e2c1fb802ebb21e2c1fb802eab21e2c1fb802e9b21e
2c1fb802e8b21e2c1fb802e7b21e2c1fb802e6b21e2c1fb802e5b21e2c1f
b802e4b21e091fb802e3b21e2c1fb802e2b21e2c1fb802e1b21d121fb802
e0b21d191fb802dfb21d2f1fb802deb21d2f1fb802ddb21d2f1fb802dcb2
1d2f1fb802dbb21d191fb802dab21d2f1fb802d9b21d2f1fb802d8b21d2f
1fb802d7b21d2f1fb802d6b21d2f1fb802d5b21d2f1fb802d4b21d2f1fb8
02d3b21d2f1fb802d2b21d2f1fb802d1b21d2f1fb802d0b21d2f1fb802cf
b21d2f1fb802ceb21d121fb802cdb21d121fb802ccb21d121fb802cbb21d
121fb802cab21d191fb802c9b21d2f1fb802c8b21d2f1fb802c7b21d2f1f
b802c6b21d2f1fb802c5b21d2f1fb802c4b21d2f1fb802c3b21d2f1fb802
c2b21d2f1fb802c1b21d2f1fb802c0b21d2f1fb802bfb21d121fb802beb2
1d121fb802bdb21d2f1fb802bcb21d2f1fb802bbb21d2f1fb802bab21d2f
1fb802b9b21d2f1fb802b8b21d2f1fb802b7b21d2f1fb802b6b21d2f1fb8
02b5b21d2f1fb802b4b21d2f1fb802b3b21d2f1fb802b2b21d2f1fb802b1
b21c321fb802b0b21c321fb802afb21c331fb802aeb21c331fb802adb21c
331fb802acb21c331fb802abb21c331fb802aab21c311fb802a9b21c311f
b802a8b21c321fb802a7b21c321fb802a6b21c321fb802a5b21c321fb802
a4b21c321fb802a3b21c321fb802a2b21c331fb802a1b21c331fb802a0b2
1c331fb8029fb21c331fb8029eb21c331fb8029db21c331fb8029cb21c31
1fb8029bb21c311fb8029ab21c321fb80299b21c321fb80298b21c321fb8
0297b21c321fb80296b21c321fb80295b21c331fb80294b21c331fb80293
b21c331fb80292b21c331fb80291b21c331fb80290b21c331fb8028fb21c
331fb8028eb21c311fb8028db21c321fb8028cb21c321fb8028bb21c321f
b8028ab21c321fb80289b21c321fb80288b21c331fb80287b21c331fb802
86b21c331fb80285b21c331fb80284b21c331fb80283b21c331fb80282b2
1b341fb80281b21b341fb80280b21b341fb8027fb21b341fb8027eb21b34
1fb8027db21b341fb8027cb21b341fb8027bb21b341fb8027ab21b341fb8
0279b21b341fb80278b21b341fb80277b21b341fb80276b21b341fb80275
b21b341fb80274b21b341fb80273b21b341fb80272b21b341fb80271b21b
341fb80270b21b341fb8026fb21a351fb8026eb21a351fb8026db21a351f
b8026cb21a351fb8026bb21a351fb8026ab21a351fb80269b21a351fb802
68b21a351fb80267b21a351fb80266b21a351fb80265b21a351fb80264b2
1a351fb80263b21a351fb80262b21a351fb80261b21a351fb80260b21a35
1fb8025fb21a351fb8025eb21a351fb8025db21a351fb8025cb21a351fb8
025bb21a351fb8025ab21a351fb80259b219371fb80258b219371fb80257
b219371fb80256b219371fb80255b219371fb80254b219371fb80253b219
371fb80252b219371fb80251b219371fb80250b219371fb8024fb219371f
b8024eb219371fb8024db219371fb8024cb219371fb8024bb219371fb802
4ab219371fb80249b219371fb80248b219371fb80247b219371fb80246b2
19371fb80245b219371fb80244b219371fb80243b219371fb80242b21937
1fb80241b219371fb80240b219371fb8023fb219371fb8023eb219371fb8
023db219371fb8023cb219371fb8023bb219371fb8023ab219371fb80239
b218391fb80238b218391fb80237b218391fb80236b218391fb80235b218
391fb80234b218391fb80233b218391fb80232b218391fb80231b218391f
b80230b218391fb80301b2182e1fb8022fb218391fb8022eb218391fb802
2db218391fb8022cb218391fb8022bb218391fb8022ab218391fb80229b2
18391fb80228b218391fb80227b218391fb80226b218391fb80225b2173b
1fb80224b2173b1fb80223b217321fb80222b2173a1fb80221b2173b1fb8
0220b2173b1fb8021fb2173b1fb8021eb2173b1fb8021db2173b1fb8021c
b2173b1fb8021bb2173b1fb8021ab2173b1fb80219b2173b1fb80218b217
3b1fb80217b2173b1fb80216b2173b1fb80215b217321fb80214b2173a1f
b80213b2173b1fb80212b2173b1fb80211b2173b1fb80210b2173b1fb802
0fb2173b1fb8020eb2173b1fb8020db2173b1fb8020cb2173b1fb8020bb2
173b1fb8020ab2173b1fb80209b217321fb80208b217321fb80207b2173b
1fb80206b2173b1fb80205b2173b1fb80204b2173b1fb80203b2173b1fb8
0202b2173b1fb80201b2173b1fb80200b2173b1fb801ffb2173b1fb801fe
b2173b1fb801fdb2173b1fb801fcb2173b1fb801fbb2173b1fb801fab217
3b1fb801f9b2173b1fb801f8b2173b1fb801f7b217321fb801f6b2173a1f
b801f5b2173b1fb801f4b2173b1fb801f3b2173b1fb801f2b2173b1fb801
f1b2173b1fb801f0b2173b1fb801efb2173b1fb801eeb2173b1fb801edb2
173b1fb801ecb2173b1fb801ebb2173b1fb801eab2173b1fb801e9b2173b
1fb801e8b2173b1fb801e7b217321fb801e6b216231fb801e5b216231fb8
01e4b216371fb801e3b216371fb801e2b216381fb801e1b216381fb801e0
b216431fb801dfb216441fb801deb216441fb801ddb216441fb801dcb216
451fb801dbb216461fb801dab216461fb801d9b216461fb801d8b216231f
b801d7b216231fb801d6b216381fb801d5b216431fb801d4b216431fb801
d3b216431fb801d2b216441fb801d1b216461fb801d0b216461fb801cfb2
16461fb801ceb216461fb801cdb216461fb801ccb216461fb801cbb21643
1fb801cab216231fb801c9b216231fb801c8b216371fb801c7b216371fb8
01c6b216381fb801c5b216421fb801c4b216431fb801c3b216441fb801c2
b216451fb801c1b216461fb801c0b216461fb801bfb216461fb801beb216
461fb801bdb216461fb801bcb216461fb801bbb216461fb801bab216371f
b801b9b216381fb801b8b216421fb801b7b216431fb801b6b216431fb801
b5b216431fb801b4b216441fb801b3b216441fb801b2b216441fb801b1b2
16451fb801b0b216451fb801afb216451fb801aeb216461fb801adb21646
1fb801acb216461fb801abb216461fb801aab216461fb801a9b215341fb8
01a8b215411fb801a7b215411fb801a6b2154d1fb801a5b2154e1fb801a4
b2154f1fb801a3b215521fb801a2b215401fb801a1b2154d1fb801a0b215
4e1fb8019fb2154f1fb8019eb215521fb8019db2154d1fb8019cb215401f
b8019bb2154d1fb8019ab2154e1fb80199b2154e1fb80198b2154f1fb801
97b2154f1fb80196b215501fb80195b215521fb80194b215521fb80193b2
15521fb80192b215411fb80191b2154f1fb80190b215501fb8018fb21550
1fb8018eb215511fb8018db215521fb8018cb215521fb8018bb215521fb8
018ab214581fb80189b214591fb80188b2145c1fb80187b2145d1fb80186
b2144a1fb80185b2145b1fb80184b2145c1fb80183b214591fb80182b214
5d1fb8018140af145d1ff00f451fef0e481fe00c4e1fc20c4e1fc10c4e1f
c00c4e1fbf0b561fb20b561fb10b561fb00b561faf0b561fae0b561fad0b
561fac0b561fab0b561faa0b561fa90b561fa80b561fa70b561fa60b561f
a50b561fa40b561fa30b561fa20b561fa10b561fa00b561f9f0b561f9e0a
681f9a0a681f990a681f980a681f970a681f960a681f950a681f940a681f
930a681f920a681f910a681f9009681f8f09681f8e09681f8d09681f8c09
681f410902fc02fa0056001f02fb02fa0068001f017fb213321fb8017eb2
12371fb80174b212371fb80173b211421fb80172b211421fb80171b21142
1fb80170b211421fb8016fb211421fb8016eb211421fb8016db211421fb8
016cb211421fb8016bb211421fb8016ab211421fb8013cb211421fb8013b
b210421fb8013ab210421fb80139b210421fb80138b210421fb80137b210
421fb80136b210421fb80135b210421fb80134b210421fb80133b210421f
b80132b20f451fb80131b20f451fb80130b20f451fb80112b20f451fb801
11b20f451fb80110b20f451fb8010fb20f451fb8010eb20f451fb8010db2
0e481fb8010cb20e481fb8010bb20e481fb8010ab20e481fb80109b20e48
1fb80108b20e481fb80107b20d4a1fb80106405b0d4a1fee0d4a1fed0d4a
1fec0d4a1feb0d4a1fea0d4a1fe90c4e1fdf0c4e1fde0c4e1fdd0c4e1fdc
0c4e1fdb0c4e1fda0c4e1fd90b561fd80b561fd70b561fbe0b561fbd0b56
1fbc0b561fbb0b561fba0b561f9d0a681f9c0a681fb80180b213321fb801
7ab211401fb80179b211421fb80178b211421fb80177b211421fb80176b2
11421fb80175b211421fb80143b211421fb80142b210421fb80141b21042
1fb80140b210421fb8013fb210421fb8013eb210421fb8013db20f451fb8
0115b20f451fb80114b20f451fb80113b20f451fb903030302b2401fa4be
030200b4030200c4030200030300b213321fb8017bb213321fb80153b212
371fb80152b211401fb80151b211401fb80150b211401fb8014fb211401f
b8014eb211401fb8014db211401fb8014cb211401fb8014bb211401fb801
4ab211401fb80149b211401fb80148b211401fb80147b211401fb80146b2
11401fb80145b211401fb80144b211401fb80122b211401fb80121b21042
1fb80120b210421fb8011fb210421fb8011eb210421fb8011db210421fb8
011cb210421fb8011bb210421fb8011ab210421fb80119b210421fb80118
b20f451fb80117b20f451fb80116409b0f451ffd0f451ffc0f451ffb0f45
1ffa0f451ff90e481ff80e481ff70e481ff60e481ff50e481ff40e481ff3
0d4a1ff20d4a1ff10d4a1fe70d4a1fe60d4a1fe50d4a1fe40d4a1fe30d4a
1fe20d4a1fe10c4e1fcd0c4e1fcc0c4e1fcb0c4e1fca0c4e1fc90c4e1fc8
0c4e1fc70c4e1fc60c4e1fc50c4e1fc40c4e1fc30c4e1fb80c4e1fb70b56
1fb60b561fb50b561fb40b561fb30b561f9b0a681fb802fdb212371fb801
7db212371fb8017cb212371fb80169b2112e1fb80168b2112e1fb80167b2
11401fb80166b211401fb80165b211401fb80164b211401fb80163b21140
1fb80162b211401fb80161b211401fb80160b211401fb8015fb211401fb8
015eb211401fb8015db211401fb8015cb211401fb8015bb211401fb8015a
b211401fb80159b211401fb80158b211401fb80157b211401fb80156b211
401fb80155b211401fb80154b211401fb8012fb211401fb8012eb210421f
b8012db210421fb8012cb210421fb8012bb210421fb8012ab210421fb801
29b210421fb80128b210421fb80127b210421fb80126b210421fb80125b2
0f451fb80124b20f451fb80123b20f451fb80105b20f451fb80104b20f45
1fb80103b20f451fb80102b20f451fb80101b20e481fb8010040a20e481f
ff0e481ffe0e481fe80c4e1fd60c4e1fd50c4e1fd40c4e1fd30c4e1fd20c
4e1fd10c4e1fd00c4e1fcf0c4e1fce0b561fb90b561f8503251f84032e1f
83012e1f8248805581ab80557f487d557eab7d550b7d3b7d4b7d030b7d1b
7d4b7d7b7dab7ddb7d067c487a557bab7a55047a147a020a7948775578ab
77550b77010c764875555475e475f4750314755475647574759475d475e4
7507a475b475c47503b8ffc0401275383b46807590750214757475020075
010fb8ffc04021750b0e467448725573ab725504723472023bf47201e072
01023072015072607202b8ffc0b372242846b8ffc0403572161a46107230
7240720371486f5570ab6f554f6f6f6f7f6f9f6fbf6f057f6f8f6f02af6f
bf6f02406f090d466e486d55df6d0100bc02ff001002ff00c002ffb2030a
6fbb02fe000100ef02fe40ff016b032e1f6a03251f692e675568ab675566
2e645565ab6455632e6255612e60555f2e5d555eab5d555c2e5a555bab5a
55592e58555703251f562e545555ab5455532e515552ab51554f2e4e554e
03251f4d2e4b554cab4b554a2e485549ab4855504801472e46554503361f
001f01001e01001e701e801ef01e040b601d701d02701de01df01d03701c
f01c027f1b010f1a7f1a8f1a030f1a8f1a020f1a8f1a020f191f198f199f
19af19050f198f199f19030c7012801202701180110230114011d011e011
040011a011020f8f0f9f0faf0f034f0f5f0fef0fff0f04af0f01af0ebf0e
cf0e034f0e5f0e6f0e030f0eaf0ebf0e0310400e2e31460f0d1f0d40472f
0d033c2f0d3f0d4f0d038f0d01400d2e3246400d2427463f0c4f0c5f0c03
9f0c01400c262946ef0aff0a02400a242746ef09ff0902ff090100030120
01010001100120010308b8ffc0b301151f46b80100b316010501b80190b1
54532b2b4bb807ff524bb008505bb00188b02553b00188b040515ab00688
b000555a5b58b101018e59b101024354b0144b515a58b101018e59858d8d
00421d4bb01d5358b0a01d594bb0805358b0401d594bb0ff5358b0001db1
160042592b5e73757373742b732b73742b2b73745e732b5e737475737475
5e73747573015e7374737475757473745e737473002b2b732b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b73745e73732b2b7374752b2b
732b2b73755f75755e732b2b2b5e7373732b7374752b5e732b2b5e732b2b
73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b185f5e00>
[4307 ] AllocGlyphStorage
]def 
108 44 
PrepFor2015
Type42DictEnd
1 316 2 <0001008d0000038c050e002c00b0b10102435558b11a27b80292400f0913
2013200009001a180d0f014c1aba01290026ffe8b60d014d26260619b8ff
e8b40b0f014c19b8012e40090d5127180b0f014c27b8012eb24006540018
3f1a4ded2b3fed2b12392f2bed2b012f2f1239392f2f10ed3231301bb61a
180d0f014c1aba01290026ffe8b60d014d26260619b8ffe8b40b0f014c19
b8012e40090d5127180b0f014c27b8012eb240065400183f1a4ded2b3fed
2b12392f2bed2b31305925140e0223212226351134363321321e0215140e
0223211121321e0215140e0223211121321e02038c050a0f09fd76212d2d
210286090e0a05050a0e09fe320187090f0a05050a0f09fe7901d2090f0a
05671d27180b272c04682c270a19271e1c27180bfec40b17271c1d26170a
fe930b182700>DIERMX+Calibri-Bold AddT42Char 
1 3270 11 <0001007efffa03d203d700320081b10102435558b12a13bb0260001e000b
025fb2001e10b8fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d
4a2a192449194c054c00183f3f3f12393f1a4ded2b2b012fd4ed10ed3931
301bb90010fff0b30b014d10b8ffe8b40c0f014c10b8014d400b402d4a2a
192449194c054c00183f3f3f12393f1a4ded2b2b31305925140e0223222e
023511342e022322060711140e0223222e023511343e0233321e02151536
3633321e021503d20c1c312425311c0c132439263062350c1d302525301d
0c0a1a291f202a170a4a99535b7d4d22220a0f0a05050a0f0a01fd414a35
1d4643fdaf0a0f0a05050a0f0a037c0a0f0a05050a0f0a6750503c678a61
>DIERMX+Calibri-Bold AddT42Char 
1 1830 7 <0002004affe903b603d7002b00340105b10102435558b31313212cb80243
b22b3404b80272400a21032c132c021b2cc304b8ffc040170d014d000410
04024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8ffe84020
0d014d2fe4264a18f6000e100e0211030e09180c014d09180f014d09f940
1c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d2bed5e5d
012fed32dded12392f31301b4009032c132c021b2cc304b8ffc040170d01
4d00041004024c5004600402a004b0040204041c2fb8ffe8b30f014d2fb8
ffe840200d014d2fe4264a18f6000e100e0211030e09180c014d09180f01
4d09f9401c4d00183f1a4dfd2b2bd45f5e5ded3fed2b2b12392f5d715e5d
2bed5e5d3130590114062321141e0233323e0233321e0215140e0623222e
0235343e0233321e021527362623220e020703b62924fde11b3b5d414264
49300f090c08030204080d3a5a744277b3783b3e76a96a709f6630f4035b
5f30472f190201fa2e2c395d412213171307122119161f160f0e1817113c
7aba7d77bf85464275a05e206a79243d532f>DIERMX+Calibri-Bold AddT42Char 
1 3540 12 <0001007efffa02bb03d700330070b10102435558b1260fb80260400c001a
0f0a1f0a2f0a030d030ab8ffe8b30b014d0ab80153400a402b4a260f1520
49154c00183f3f1239393f1a4ded2b5f5e5d012fc4ed3931301bb9000aff
e8b30b014d0ab80153400a402b4a260f152049154c00183f3f1239393f1a
4ded2b31305901140e0223222e0223220e020711140e0223222e02351134
3e0233321e0215153e0333321e0602bb04080d0a0814191e12152a2d311c
0c1d302525301d0c0a1a291f202a170a233e38381c0d1e20180b05040203
4b242e1a0a07080711243c2cfdd40a0f0a05050a0f0a037c0a0f0a05050a
0f0a6f3241260f0307090a0c152a>DIERMX+Calibri-Bold AddT42Char 
1 2238 8 <0003001bfe9303a203d3003e004e005f0102b10102435558404f0f300703
38234a334ac34a031f4a014ae1c90c01180c010cc953011e530118530153
f1cd150117150100151015020f1515603803f93c482a202c42bc42020042
0142cd384a0f5b0110035bcc40204f00183f1a4ded5f5e5d3fed5d5d1239
3fed1112392f5e5d5d5ded5d5d5dd65d5ded5d5d12173931301b40550f30
070338234a334ac34a030b4a011f4a014ae1c90c01180c010cc953011e53
0118530153f1cd150117150100151015021515603803f93c482a203c42cc
42020442010f00420142cd384a0f5b0110035bcc40204f00183f1a4ded5f
5e5d3fed5d5e5d5d12393fed1112392f5d5d5ded5d5d5dd65d5ded5d5d5d
1217393130590114062323161615140e0223222627060615141617171e03
15140e0223222e0235343e0237262635343637262635343e023332161721
321601342623220e0215141633323e0213342627270e0315141633323e02
03a21610691613346189542b4e150c13332ed94c77512b3a74af7572a167
2f1121301f2b2f362b232a376288522a4d21011b1115febd504925382512
5047263825133b483fb31a1f1306655c394e30140360302e183d214e7953
2b150e0d24161d2502080325435e3c4275563224405935213c373217174f
2f3b61272362494e7b552d0a092cfef94850192b391f444f182a37fd562d
3002051323201e10323417262f00>DIERMX+Calibri-Bold AddT42Char 
1 3794 13 <00010016fe9503b403c600240068b10102435558b60109090e001a1bb802
42b640241a200a1a18b80273400f400e1a1f49190a13490a4b044f004b00
183f3f3f3f12393f01192f18d41a4ded12391a10dd1aed123912392fcd31
301b400c1f49190a13490a4b044f004b00183f3f3f3f12393f3130592103
060623222e023713262627012634363633321e02171333133e0233321616
140702836c09504d2830180207770d1505fecd0d18392f2b321c0e07d203
c006132c372b391b08fec4191607101811012b06190e033423251508030c
1917fdab02611a11080816251900>DIERMX+Calibri-Bold AddT42Char 

1 0 1 <> DIERMX+Calibri-Bold AddT42Char 
1 998 4 <0001008cffe904ad0514002b0057b10102435558bc002002900000001602
93400c0a265210521b180b0f014c1bb8015cb240055600183f1a4ded2b3f
3f012fedd4ed31301b400b265210521b180b0f014c1bb8015cb240055600
183f1a4ded2b3f3f31305901140e0223222e023511343e0233321e021511
141e0233323e023511343e0233321e021504ad4688c8827ac286470c1f32
2726321e0d2647633d3e6244250c1e332626311e0c01e277bc82443d7cb9
7c03130a100a06060a100afd044d714a2526496b44030b0a100a06060a10
0a00>DIERMX+Calibri-Bold AddT42Char 
1 622 3 <0001003fffe9038c0525004900bbb10102435558b900410297b524322432
0c1bb8029cb2000c2ebb012d0037000a012db61137113711163cb8ffe8b4
0b0f014c3cb8012d400c411b05295316180b0f014c16b80158b240055600
183f1a4ded2b3f123939ed2b1139392f2f10ed10ed012fd4ed1239392f2f
ed31301bbc002e012d0037000a012db61137113711163cb8ffe8b40b0f01
4c3cb8012d400c411b05295316180b0f014c16b80158b240055600183f1a
4ded2b3f123939ed2b1139392f2f10ed10ed31305901140e0223222e0435
343e0233321e0233323e0235342e0635343e0233321e0615140e0223222e
0223220e0215141e06038c4c82ae634373583b1a0b04090f0a0e33506f49
304c351c304d6268624d3045759f592e5c503e1407050203070d0b0b3046
5c372b402b152f4f6468644e300184669a6734161f221a312e1f2a1a0b21
2821172a3e262c3f312b303d5574515d8d5d2e0e181e140e17231a1d281a
0c1c211b1525341d2b3f312b303d5573>DIERMX+Calibri-Bold AddT42Char 
1 1518 6 <0002004bffe903cc056d002600390095b10102435558b20b1b39bb025e00
00002f0272400a1321460b39271b040e2ab8ffe8b40b0f014c2ab8014940
09184a34180b0f014c34b80149b4400e4d054c00183f3f1a4ded2b3fed2b
1217393f012fedd4ed323931301b400921460b39271b040e2ab8ffe8b40b
0f014c2ab801494009184a34180b0f014c34b80149b4400e4d054c00183f
3f1a4ded2b3fed2b1217393f31305925140e0223222e023535060623222e
0235343e023332161711343e0233321e021503262623220e0215141e0233
323e023703cc0a18291e2028190b45975c668d59283362925f4b7a3c0b1d
302525301c0cfa36633631472b15122944341a31333620220b0f0a04040a
0f0b634a524f86b36377be86483d3b01e30a100b06060b100afd34444831
526535386a53320f22372800>DIERMX+Calibri-Bold AddT42Char 
1 4018 14 <0001006bfe9f021c059000230022bf001a01fa0000001001f90006000302
74b3151f0b85003f2f012ffdd6edd6ed3130010602151412171614060623
222e02272e0335343e02373e0333321e0202175456575206162d281c281b
0f033650351a1b364f35020c182920242e18030558c3fe61dadbfe63c610
17100804070b0768d3d7db7170dbd7d46905080703070e16>DIERMX+Calibri-Bold AddT42Char 
1 3014 10 <0001007efffa03bb057000340062b10102435558bf003102600022000c02
600016002302b6b32d2d160ab802b7400e400016220b0528491c46114c05
4c00183f3f3f3f123939012fd41a4ded12392fed10fd32e431301b400b22
0b0528491c46114c054c00183f3f3f3f12393931305925140e0223222e02
270111140e0223222e023511343e0233321e021511013e0333321e021514
06070101161603bb0b1d32282933211207fed70c1d302525301d0c0c1d30
2525301d0c0108081421312625331f0c0f0ffefb012e0c0b210a0f090504
09100d01d6fe280a0f0a05050a0f0a05230a100b06060b100afcf101630c
120a05050a0f0b0f2213fed8fe2d141d>DIERMX+Calibri-Bold AddT42Char 
1 1210 5 <0001002bfffa07140514003c007fb1010243555840092f0a0c003c30300c
32b8024d400a3c0c17180d2523230c22b80295401240180c37522a523023
0b03121d521255055500183f3f3f1217393f3f01192f18d41a4ded123919
2f393912391810d4ed1239192f123912393931301b400f37522a5230230b
03121d521255055500183f3f3f1217393f3f313059250e0323222e022703
23030e0323222e0227012626363633321e02171333133e0333321e021713
33133e0333321616060705df06152a42333945281205cf02c40512274337
3a45281206feda09021939332f371c0a03e301ec040d1f362d30391f0e04
f402e3030a1c342f2c3116030943181d0f05050f1d180334fccc171d1005
050f1d18046924291605030b1513fc2103d813180d05040d1814fc2803dc
10170d0505162b25>DIERMX+Calibri-Bold AddT42Char 
1 2762 9 <0001007efffa03d205700032006db10102435558b9000b025fb2322a14b8
0260b31e2a1910b8ffe8b40b0f014c10b8014d4009402d4a2446194c054c
00183f3f3f3f1a4ded2b1239012fed32d4ed31301bb22a1910b8ffe8b40b
0f014c10b8014d4009402d4a2446194c054c00183f3f3f3f1a4ded2b1239
31305925140e0223222e023511342e022322060711140e0223222e023511
343e0233321e021511363633321e021503d20c1c312425311c0c13243926
3062350c1d302525301d0c0c1d302525301d0c4187495b7d4d22220a0f0a
05050a0f0a01fd414a351d4643fdaf0a0f0a05050a0f0a05230a100b0606
0b100afe13403f3c688b6300>DIERMX+Calibri-Bold AddT42Char 
1 4162 15 <00010061fe9f0212059000210024b900000273b2121505bb01fa000f001f
01fbb3151a0a85003f2f012fedd6ed10d6ed313001140e02070e03232226
263437361235340227263e0233321e0217161202121a354f36030f1b281c
292d1606535756550503192d251f281a0b03686c021a71dbd7d368070b07
0408101710c4019fdbda019fc30d160e0703070805d2fe53>DIERMX+Calibri-Bold AddT42Char 
1 0 0 <00050000fe7303db050e000300070039004d004e0054bc000d019d001700
3a01cbb44444082d07be019d0002002001cb00080001019d401304020d1b
1b3f2335068c035111493f078c0254003ffddeddc63ffddecd12392fcd01
2fddedd6ed10fdc611392fedd4ed3130011121110111211101140e020707
060623222e02352726363333323e0235342623220e0223222e0235343637
3e0333321e0203140e0223222e0235343e0233321e020103dbfc4f0345fd
240279213b533105012b25171f130808031f1e0d2533200f4b4d2336281a
05040806030508072736422355774a22ce0a18271c1d27180a0a18271d1c
27180afdc2050efaf2050efb570444fbbc02e839583e2406790d0b020509
089d281e1524311c3d4b0d0f0d050e1b171a1c0708110e0a2a4861fd991a
25170a0a17251a1c25180a0a1825fd3b>DIERMX+Calibri-Bold AddT42Char 
DIERMX+Calibri-Bold /CharStrings get begin
/g2 2 def
/g11 11 def
/g7 7 def
/g12 12 def
/g8 8 def
/g13 13 def
/g1 1 def
/g4 4 def
/g3 3 def
/g6 6 def
/g14 14 def
/g10 10 def
/g5 5 def
/g9 9 def
/g15 15 def
end
DIERMX+Calibri-Bold /Encoding get
dup 33 /g2 put
dup 34 /g11 put
dup 35 /g7 put
dup 36 /g12 put
dup 37 /g8 put
dup 38 /g13 put
dup 39 /g1 put
dup 40 /g4 put
dup 41 /g3 put
dup 42 /g6 put
dup 43 /g14 put
dup 44 /g10 put
dup 45 /g5 put
dup 46 /g9 put
dup 47 /g15 put
pop
end
%ADOEndSubsetFont
/PEEXPT+Calibri-Bold /DIERMX+Calibri-Bold findfont ct_VMDictPut/PEEXPT+Calibri-Bold*1 [33{/.notdef}rp /g2 /g11 /g7 /g12 /g8 /g13 /g1 /g4 /g3 /g6 /g14 /g10 /g5 /g9 /g15 208{/.notdef}rp]PEEXPT+Calibri-Bold nfPEEXPT+Calibri-Bold*1 [0 -14 -14 0 0 0 ]msf17.9082 200.454 mo(!"#$%&'\(\)#*'+,-./')[-6.82928 -7.51244 -7.04768 -4.97694 -6.63737 -6.63039 -3.16537 -9.13919 -6.6179 -7.04768 -7.51244 -3.16537 -4.36095 -6.71994 -12.6883 -7.51244 -4.36095 0 ]ysh362.236 147.293 mo
455.653 147.293 li
455.653 269.707 li
362.236 269.707 li
cp
0 0 0 0 cmyk
ef
362.236 147.293 mo
455.653 147.293 li
455.653 269.707 li
362.236 269.707 li
cp
0 0 0 1 cmyk
@
3.75 lw
1 lc
368.345 159.534 mo
387.545 159.534 li
.686061 .353338 .0289006 0 cmyk
@
gsave
378 156 mo
381 160 li
378 163 li
374 160 li
378 156 li
clp
-3.05176e-05 9.15527e-05 mo
507 9.15527e-05 li
507 305 li
-3.05176e-05 305 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 374.445 156.034 ]ct
/0 
<<
/ShadingType 2 
/BBox [-4.75545e+06 -1981632 1.68345e+06 1.89186e+06 ] 
/ColorSpace /0 /CSA get_res
/Coords [38803 -433 38803 88467 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~:*BT;:Efc=;'Q&@;Bu5B<$VGD<@%VF=![hH==+"J=sj:M>:9IO>po[Q?7>jS?RYsT?n)-V@OhEY@k.NZ
A1[c]AhF&`B.j5bBeKGdC+oVfCbYniD))(kD_h@nE&7OpE]!gsF>X$uFZ'4"G;fL%GW5['H8ts*Ho_6-
IQIN0IldW1JNNo4Jis)6KK]A9Kg,P;LHkh>M*M%@MF%:CN'[LENC*[GO$isJO[T6MP=>NPPXb]RQ:V&V
QV.;YR7mS\RnWk_S5'%aSkf=dT25LfThtdiU/CskUf.6nVGmNqW)WiuWE'$"XB,H'X]PT(Y?Cr,YZh//
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 374.445 156.034 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~9hnGY:/=Y^:f1(e;,U:j;cH^q<)lq!<``@(='/R-=^#!4>$G39>[:W@?!^iD?=.&H?XR8M@:E\T@UinX
@q0%[AS#IcAnG[gBP;*oBk_<sCMRa&Ci!s*DJjB2Df9T6EH-#>F)uGFFEDYJG'8(RGB\:VH$O^^H[C-f
I!pElIXZ`qIt3'#JUrB(JqJ]/KS5#4Knb>;LPUbCM2@(HMMmCON/W^TNK0$[O-#HcOcklkPEV2pPa.N"
QBmi&Q^=),R@0M4S"#n:S=H.@St;OFT:_dLTqS0RU8"EXUnji`VP^8hW2QYnWMunuXK8M)Xf\b/YHP.5
~>
<~+<_mO+X/*S+sS<W,9nEX,:"N[,U=W\,UF`_,pjrc-7:/g-RU8h-R^Ak-n$Jl-n-So.4Qes.Olnt.P!##
/1`A)/M/S-/hSb//hSe10/#"50JG490ekF=1,:XA1G^jE1c.$G1c.'I2)R9M2E!KQ2`E]U3&ioY3B9,]
3]];_3]];`4$,Md4?P_h4Ztql5!D.p5<h@s5<h@t5X@\%5s[e'6:+"+6UO4/6psF377BX77Rfj;7n?0B
8P)NH91qoN9MA,R9he>V:/4PZ:JXb^:f'tb;,L1f;GpCj;c?Un<)cgr<E3%!<`W7%='&I)=BJ^/>$>*5
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%z!<E3%~>
0 ]
>>
38803 -433 38803 88467 [-4.75545e+06 -1981632 1.68345e+06 1.89186e+06 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
grestore
1 lw
0 lc
378 156 mo
381 160 li
378 163 li
374 160 li
cp
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: GIUQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PEEXPS+Calibri gcheck setglobal} if
1 1686 7 <000100acfffa062b050e003c00ac4010603e703e020d3030172f2f0a2e18
181ab8ffe8b310014d1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b3
0c014d1ab8ffe8b30b014d1ab80211401e24310c0c0a1810014d0a100f01
4d0a100d014d0a0a0c014d0a180b014d0aba02110000ffc040190b014d00
2436510b18170d2f18312e061f28511f5512550555003f3f3f3f12173911
333f012fd42be12b2b2b2b2b32113310e12b2b2b2b2b32113311393d2f33
33113331305d25140e0223222e02351123010e0323222e0227012311140e
0223222e02351134363333321e02170133013e033333321e0215062b0814
1f191721130802fe33030b151d14151e140b02fe47010814201918201307
2c1b68203024180901770501860b1a1f26196d0f1b130c1a080c07050507
0c080467fb94070a070304070a06046cfb99080c070505070c0804a62a24
0c1a281bfc5703a61e2a190b09131d15>PEEXPS+Calibri AddT42Char 
1 3486 13 <0002005affed03de03ca0013002700a8401c3f2901281201291101260d01
260c012608012607012a03012902011eb8ffe8b310014d1eb8fff0b30f01
4d1eb8ffe0b30d014d1eb8ffeeb30c014d1eb8ffe8b30b014d1eb8020a40
1e2f0a010a141810014d14100f014d14200d014d14120c014d14180b014d
14ba020a0000ffc0b70f004d7000010019b80101b20f4a23b80102b1054d
003fed3fed012f5d2be12b2b2b2b2b2f5de12b2b2b2b2b31305d5d5d5d5d
5d5d5d5d01140e0223222e0235343e0233321e0207342e0223220e021514
1e0233323e0203de3a73ad726fa56e363973ac736fa56e37ae1b3e6a4f49
6944211b3f6a4f486a442001e56eb9864b427eb4726eb9864a427eb47c49
826239345f824d4a826139345e82>PEEXPS+Calibri AddT42Char 
1 2888 11 <00010099fffa037c057100340095400c3f3601293101314012014d31b8ff
d0b40f10014c31b8ffe0b30d014d31b8ffeab30c014d31b8ffe0b30b014d
31bb02270022000cfff0b40f10014c0cb8fff0b30d014d0cb8fff6b30c01
4d0cb8ffe8b30b014d0cb801f8401a162d2d00400f014d00400c014d0016
220b0528491c46114c054c003f3f3f3f123939012fc42b2b392f10f12b2b
2b2b32e02b2b2b2b2b31305d5d25140e0223222e02270111140e0223222e
023511343e0233321e021511013e0333321e021514060701011616037c08
13221a1b23180f06fe840812201918201307071320181920120801540812
192218192215090d0ffeba016e0d0b1a080c080403070d0901f2fe0d080b
080404080b080538080c080404080c08fcd201760a0d090303070b090c18
10febafe25111500>PEEXPS+Calibri AddT42Char 
1 2646 10 <00020085fffa0151052f00150021008cb73f234f236f230316b8ffe8b30d
014d16b8fff6b30c014d16b8ffe8b313014d16b8ffe0b310014d16b8fff0
b30f014d16b8ffe8b30b014d16bb0271001c0015fff0b30d014d15b8fff6
b30c014d15b8ffe8b30b014d15b8fff0b40f10014c15b801f8b60a1f400f
014d1fb8013eb4191049054c003f3fd6ed2b012fe12b2b2b2bd4e12b2b2b
2b2b2b31305d25140e0223222e023511343e0233321e0215131406232226
353436333216013e08122019182013070713201819201208132c3b3a2b2c
3b3a2b19080b080404080b080384070c080404080c0701303a2a29393a2a
2900>PEEXPS+Calibri AddT42Char 
1 2382 9 <00010099fffa03a0057100320079b43f34012a13b8ffe8b30b014d13b8ff
f0b40f10014c13b8fff6b30c014d13b8fff0b30d014d13b801f840171e0b
0a0c014d0b100d014d0b180b014d0b100f10014c0bb801f8400a00400c01
4d001e2a1910b80106b72d4a2446194c054c003f3f3f3fed1239012f2f2b
e12b2b2b2b10e12b2b2b2b3931305d25140e0223222e023511342e022322
060711140e0223222e023511343e0233321e021511363633321e021503a0
0812201819201208182e49303e7c44081220191820130707132018192012
084790495a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08
0404080b080538080c080404080c08fde54b493d66896100>PEEXPS+Calibri AddT42Char 
1 2032 8 <0002005cffed033f03ca0033004000b040200f421f422f42030b0917340c
0c014d34100d014d34180b014d34100f10014c34b801f7400e0027270f00
010c00100f014d003ab8fff0b30c014d3ab8ffe8b30d014d3ab8ffe8b30b
014d3ab8ffe8b40f10014c3ab8020840141117c500341034023bc0340100
340134342e412ab8011b400fd022012222041dea2e4a3ddc0c4d04002f3f
ed3fed12392f5ded1112392f5d715e5ded012fe12b2b2b2bc42b5e5d392f
10e12b2b2b2b323931305e5d25140606232226263535060623222e023534
3e02333335342e0223220e0223222e0235343e0433321e02150723220e02
15141633323637033f101c1b1a1f0e3b91514773512d3e74a8697c16314e
393d6149310c080c0904071b4256663461885426a48d4464421f5950416f
3d180c0c06060c0c5a3f46254666414c704a25463450351b1d231d081019
0f191d1a231d132c557e54c4172d3f2946534244>PEEXPS+Calibri AddT42Char 
1 3196 12 <00010099fffa03a003ca00320094400f12100b014d13100b014d3f34012a
13b8fff0b310014d13b8fff0b30f014d13b8fff0b30d014d13b8fff6b30c
014d13b8ffe8b30b014d13b801f8401b1e0b1010014d0b100d014d0b100f
014d0b0a0c014d0b180b014d0bb801f8b700400c014d001e10b80106400a
2d4a2a192449194c054c003f3f3f12393fed012f2f2be12b2b2b2b2b10e1
2b2b2b2b2b3931305d002b2b25140e0223222e023511342e022322060711
140e0223222e023511343e0233321e021515363633321e021503a0081220
1819201208182e49303e7c44081220191820130706121c17161d10074c97
4d5a7b4c2119080b080404080b08020f4d5e44245855fd8b080b08040408
0b080384080b090303090b0877554f3d66896000>PEEXPS+Calibri AddT42Char 
1 3850 15 <0001004501b4022e023d000f000eb400070bed04002fed012fcd31300114
06232122263534363321321e02022e1211fe5e1212121201a2080d090501
f9271e1f26261e06111a>PEEXPS+Calibri AddT42Char 
1 322 2 <00020023fffa047e051400220026009db90024ffe8b40c10014c23b8ffe8
b40c10014c26b8fff0b40b10014c0bb8fff0b40b10014c0ab8fff0401a0b
10014c25100b10014c0d100b10014c0c100b10014c40280125b8fff0402c
0b014d24232625f40c0b0c18221d230a0d0116040c000c100c02af23bf23
cf2303230c230c121d5212550555003f3f3f1239392f2f5d5d1117391112
3939113310ed3211333130012b5d2b2b2b2b2b2b002b2b25161606062322
2e02270321030e03232226263637013e0333321e02170723032104750801
10251f1f251309046ffde66a030a13231c1d250f010801b2040d19271e20
2a1a0e047b01df01c23d161b0e0403070c09013bfec9090d0904050e1b16
04b20b0e080303080f0b8dfd7b00>PEEXPS+Calibri AddT42Char 
PEEXPS+Calibri /CharStrings get begin
/g7 7 def
/g13 13 def
/g11 11 def
/g10 10 def
/g9 9 def
/g8 8 def
/g12 12 def
/g15 15 def
/g2 2 def
end
PEEXPS+Calibri /Encoding get
dup 43 /g7 put
dup 44 /g13 put
dup 45 /g11 put
dup 46 /g10 put
dup 47 /g9 put
dup 48 /g8 put
dup 49 /g12 put
dup 50 /g15 put
dup 51 /g2 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PEEXPS+Calibri*1 [33{/.notdef}rp /g18 /g1 /g20 /g22 /g23 /g24 /g19 /g25 /g14 /g21 /g7 /g13 /g11 /g10 /g9 /g8 /g12 /g15 /g2 204{/.notdef}rp]PEEXPS+Calibri nfPEEXPS+Calibri*1 [12 0 0 -12 0 0 ]msf389.445 164.212 mo(+,-./01023")[10.2599 6.32748 5.45523 2.75406 6.30472 5.74805 6.30472 5.74805 3.67441 6.94315 0 ]xsh3.75 lw
1 lc
368.345 184.017 mo
387.545 184.017 li
.15903 .780758 .684627 .0278935 cmyk
@
gsave
374 181 mo
381 181 li
381 187.517 li
374 187.517 li
374 181 li
clp
-3.05176e-05 .00012207 mo
507 .00012207 li
507 305 li
-3.05176e-05 305 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 374.445 180.517 ]ct
/1 
<<
/ShadingType 2 
/BBox [-4.75545e+06 -2292566 1.68345e+06 1.58093e+06 ] 
/ColorSpace /0 /CSA get_res
/Coords [38803 6134 38803 88900 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~!,+Lq!,4Us!,Fh"!,Oq$!H(7)!H1@+!HLX0!cpj3"*@*7"*R9:"*[E="F3]A"aWrE"as/H#(BGM#(KPO
#D#kT#D,tV#_Z=\$&)O_$AVjd$Ai$g$]89k%#eTp%#n]r%$5!"%?Y6&%[1Q+%[:Z-&!^r2&=@;7&XdS<
&Y!_>&tO+E';'@H'VK[N'VTdP'r--V(8Q?Y(8lZ_(8uca(TW/h(p&Gm(p/Po)6\nu)6f#")RGG))RPS,
)n(q2)n2%4*4V@:*4hO>*P7jD*ke-H*kn?M+2FWR+2OfV+Mt&Z+N1;_+iUPd+ipkj,0@+n+j74q,0[M"
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 374.445 180.517 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzz!!**$!<N<(!WiE)!WiE)!WrN,!sA`0"9\i1"9er4"U,&5"U5/8"pP89"pP;;#6tM?#RC_C#mgn
E#mgqG$47.K$O[=M$O[=M$O[@O$k*RS%1NaU%1NdW%Ls![%hB3_&.fBa&.fBb&J5Tf&eYfj',)#m',)#
n'GM5r'bqGu'bqGu'bqH!()@Z%(Ddl((Ddl)(`4),(`4)-)&X;0)&X;1)B'M4)B'M4)]K_8)]K_8*#oq
<*??.@*??.@*Zc@D*Zc@D+!2RH+!2RH+<VdL+<VdL+X&!P+X&!P+X&!P~>
<~B4tslBPD0qC27U#CM[g(D/O6/DJsK5EH6)?EcZ;CF*)MHF`qqOG'A.TG^4R[H$Xd`I!pEkI=?WoIXcit
J:N3%JUrE)K7ei1KS5&5L5(J=LkpnEM2@+IMi3OQN/WaVNfT9`OH>TeP*2#mPEV5qPa%GuQC!u+R$a;0
R@9S6S"-">SXuFFT:_aKTV.sOTq\9VUSFT[V5:&eVl-GkWMunuX/i;&XK8M*Xfeh1YHP.6Yd(L?Za7!F
['[6K[^NWQ\$riU\@B)[]"5Ja]=Y_g]tM+m^:q@s^qdb$_83t(_SX4.`5KU4`Poj;aN2HDaiV]JbKJ)P
~>
<~4?Yhj4[)%o5<qJ!5X@\&6:4+-6UX=277Ka97Ros>84cBE8P2TJ92&#Q9MJ5V:/4PZ:/=Y^;,U:i;H$Ln
<)cjt<E3($=BJ^/=]np3>?b?;>[1Q??=$uG?smDO@:<VS@q0%[AS#IcB4kmkBP;*oC27X%Ci!s*DJsH3
Df9Q5EH6,AF)uDEF`qtRG^+IYH@(!dI!g<iIXZcsJ:N0$JV&K+KS5&6L5(G<LPUeEMMd:LMi<XUNfT6_
OHG]hPEV2oPa.Q$R$a8.R@9V8SXl=BStD[LU8"BVUSO]^VP^8hW2ZbrX/i>'Xf\b0YctC;ZEggC['[6L
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%!<E3%!WiE)!WiE
)!WiE)!WiE)!s8W-!s8W-!s8W-!s8W-"9\i1~>
]
>>
38803 6134 38803 88900 [-4.75545e+06 -2292566 1.68345e+06 1.58093e+06 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
grestore
1 lw
0 lc
374 181 mo
381 181 li
381 187.517 li
374 187.517 li
cp
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: GIUQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PEEXPS+Calibri gcheck setglobal} if
1 606 3 <000300ac00000401050e001e002b003800c8401a1f1810014d1f100f014d
1f100d014d1f180c014d1f200b014d1fb8022e40281a154010014d15400f
014d15150b2c1810014d2c100f014d2c100d014d2c180c014d2c200b014d
2cba02320000ffc0b50b014d002633b8ffe8b310014d33b8fff0b30f014d
33b8fff0b30d014d33b8fff6b30c014d33b8ffe8b30b014d33b80210400d
a00bc00b020b1a27f431310724b80109b2105134b8010bb10754003fed3f
ed12392fed39012f5de12b2b2b2b2b32d42be12b2b2b2b2b12392f2b2b39
e12b2b2b2b2b313001140e0423212226351134363321321e0215140e0207
1e0301342e0223231133323e0213342e0223231133323e0204011f384f63
7149feae17292917012674946332162b412a355c4528fefd1a385a4ab2c4
435236194e25476b51cefa3b58432601733d67523e2a151f270482271f2c
547a4d2e544738120a35526e02012f4c351cfe5d233b4ffddd3a583c1ffe
381c3752>PEEXPS+Calibri AddT42Char 
PEEXPS+Calibri /CharStrings get begin
/g3 3 def
end
PEEXPS+Calibri /Encoding get
dup 52 /g3 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PEEXPS+Calibri*1 [33{/.notdef}rp /g18 /g1 /g20 /g22 /g23 /g24 /g19 /g25 /g14 /g21 /g7 /g13 /g11 /g10 /g9 /g8 /g12 /g15 /g2 /g3 203{/.notdef}rp]PEEXPS+Calibri nfPEEXPS+Calibri*1 [12 0 0 -12 0 0 ]msf389.445 188.695 mo(+,-./01024")[10.2599 6.32748 5.45523 2.75406 6.30472 5.74805 6.30472 5.74805 3.67441 6.52689 0 ]xsh3.75 lw
1 lc
368.345 208.5 mo
387.545 208.5 li
.397925 .0829786 .8009 0 cmyk
@
gsave
378 205 mo
381 212 li
374 212 li
378 205 li
clp
-3.05176e-05 9.15527e-05 mo
507 9.15527e-05 li
507 305 li
-3.05176e-05 305 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 374.445 205 ]ct
/2 
<<
/ShadingType 2 
/BBox [-4.75545e+06 -2603499 1.68345e+06 1270000 ] 
/ColorSpace /0 /CSA get_res
/Coords [38803 1 38803 88900 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~,lhKV-3.WX-NIi\-idu^.0+,`.KF;c.KF>d.faPh/-'\j/HBhl/c^"o/c^(q0*$4s0E?D!0`ZP#1&u\%
1B;n)1]W%+2#r4.2?8C12ZSO32un^63<4j83WP$;3rk3>491BA4TLNC4og]F56-lI5QI&L5ld2N63*AQ
63*GS6NEVV6i`bX70&q[7KB+^7f]:a8-#Id8H>Uf8cYgj9*)$m9ED3p9`_Bs:'%R!:BId$:]e!(;$43+
;?OB.;ZjN0<!9`3<<To6<<^#8<<g,:<s?>==9cP@=U)\B=pMqF>6r.I>R8@M>mSLO?4"^R?OG!W?jb0Z
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 374.445 205 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~,UF`_,pjrc-7:/g-R^Ak-n-So.4H\p.4Qes.P!#".kE5&/1iG*/M/P+/M8Y./h\k20/,(60JP::0etL>
1,:XA1G^jE1c.'I2)R9M2E!KQ2`E]U3&ioY3B9,]3]]>a4$,Pe4?Pbi4Zttm5!D1q5<hCu5X7V$5s[e&
5s[e'6:+"+6UO4/6psF377BX77Rfj;7n6'?84Z9C8P)KG8kM]K91qoO9MA,S9he>W:/4P[:JXb_:f'tc
;,L1f;GpCj;c?Un<)cgr<)cgr<)cgr<E3(#='&I)=BJ[-=]nm1>$>*5>?b<9>[1N=?!U`A?=$rE?XI/I
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3&!WiE)!WiE)!WiE)!s8W-!
s8W-"9\i1"U,&5"U,&5"U,&5"U,&5"pP89#6tJ=#6tJ=#6tJ=#RC\A#mgnE#mgnE~>
<~A7]=`AS,RgBPD0pBkhBtC27U$Ci+$+D/O91E,fl;EH6)?EcZ;DFEM_LG'A.SGBe@XH$Xd_H@(!cH[L3h
IXZcrIt*!!JUrE)K7ei1KS5&5L5(J=LPL\AM2@+IMi3OQNK&sYNfK0]OH>TeP*2#mPa%GuQ'IZ$Q^=),
R$jA2R[]e:S=H+?SXuFFT:hjNTq\9VUSO]^V5:#cVl-JmWMuksWiN2%XKAV-Y-5%5Yct@:Z*L^C['[3J
[C*HO\$riU\@B&Y\[f;_]=Y\e]Y(ni]tM.o^V@Ou^qdb$_84"*_o'C0`5KX7a2c6@aN2HDaiV]Kbfn>V
~>
0 ]
>>
38803 1 38803 88900 [-4.75545e+06 -2603499 1.68345e+06 1270000 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
grestore
1 lw
0 lc
378 205 mo
381 212 li
374 212 li
cp
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: GIUQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PEEXPS+Calibri gcheck setglobal} if
1 970 4 <00010061fff0040c051e00390062b31c003b2bb8ffe8b310014d2bb8fff0
b30f014d2bb8ffecb30d014d2bb8ffeeb30c014d2bb8ffe8b30b014d2bbe
0233000e0018012f00210026012cb2135304bb012a00350030012eb10956
003ffdd4ed3ffdd4ed012fe12b2b2b2b2b10d6c4313025140e0623222e02
35343e0233321e0615140e0223222e0223220e0215141e0233323e023332
1e02040c02050814405f7b497ecb8f4d5396d17f386a5a461b0805030408
0b080e324f714f568d64373563905b4d7351340f070a0603b71018120e14
29271b54a4f19da1fcaf5c15202a1b0e131a12141c1309272f274586c17c
7bbd7f41262f2606111e>PEEXPS+Calibri AddT42Char 
PEEXPS+Calibri /CharStrings get begin
/g4 4 def
end
PEEXPS+Calibri /Encoding get
dup 53 /g4 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PEEXPS+Calibri*1 [33{/.notdef}rp /g18 /g1 /g20 /g22 /g23 /g24 /g19 /g25 /g14 /g21 /g7 /g13 /g11 /g10 /g9 /g8 /g12 /g15 /g2 /g3 /g4 202{/.notdef}rp]PEEXPS+Calibri nfPEEXPS+Calibri*1 [12 0 0 -12 0 0 ]msf389.445 213.177 mo(+,-./01025")[10.2599 6.32748 5.45523 2.75406 6.30472 5.74805 6.30472 5.74805 3.67441 6.39844 0 ]xsh3.75 lw
1 lc
368.345 232.983 mo
387.545 232.983 li
.496284 .612085 .0302739 9.15541e-05 cmyk
@
gsave
381 236 mo
374 229 li
381 236 li
374 236 mo
381 229 li
374 236 li
clp
-3.05176e-05 9.15527e-05 mo
507 9.15527e-05 li
507 305 li
-3.05176e-05 305 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 374.445 229.483 ]ct
/3 
<<
/ShadingType 2 
/BBox [-4.75545e+06 -2.91444e+06 1.68345e+06 959067 ] 
/ColorSpace /0 /CSA get_res
/Coords [38803 -6132 38803 82768 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~.mO(7/3s79/OKL</jo[>0LYsA0h)-C1.M<E1IqKG1eI`J2+moL2bX2O3)0GR3DKPS3`#eV4&GtX4&Q%Y
4]DC]5#hR_5?7aa5Ze!d6!40f6<X?h6X0Tk79oln7U?&p7pl;s87;Ju8n%c#94S#&9k=;):1jP,:MBe/
:hft1;JQ74;f)L7<Ghd:<cA$==)n9@=E=HB>'0fF>BTuH?$?8K??uSO@!_kR@=/%T@Xe@X@t4OZAUsg]
B7p6bBS?EdBncTfCP`#kCl/2mDN"PqE/jnuEKC/#F-6M'FHcb*G*N%-GaJI2HC4d6H^b':I@^K?J"QiC
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 374.445 229.483 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~.P!#".kE5&/1iG*/M8Y/0/,(60JP::0etL>1,C^B1GgpF1c7-K2E*QR2`NcV3&ruZ3BB2^3]];_3]fDc
4?Pbi4Zttm5!D1q5<hCu5X7V$5s[h(6:+%,6psI477B[87Rfm<7n6*@8P)NH8kM`L9MA/T9heAX:/4S\
:JXb_:f1(f;GpCk;cH^r<E3%"<`W7&='&I*=BSd1>$>*6>?kE=?!U`B?=.&I?smAN@:<SR@U`eV@q9+]
AS#IcB4kjiBP;'mBk_<sCMR^$Ci!s*DJjB2E,]c8EH-#>F)uDDFEDYJG'8(RG^+LZH?sm`H[C-fI=6Qn
~>
<~5<qJ!5X@\&6:4+-6UX=16q'O577Ka97Ros=7n?0B8P2TI8kVfM92&#R9he>V9hnGZ:Jaka:f1(e;,U:j
;c?Xp<)cjt<E3(#='&L+=BJ^/=]np3>?b?;>[1Q??!UcC?XI2K?smDO@:<VS@q0%[A7T7_AnG[gBP;*o
Bk_9rC2.L!CM[g(D/F--DJsH4E,fl<EcQ2AF*)MHF`hhMG'8%QG^+L[H?smaH[C*eI!pHnIt)ruJ:N0$
JV&N,KS5#3KnY57L51S@M2@(GMMd=MN/WaUNfK0]OH>TeP*2#mPa%DsQ'IZ%R$a8.R@0M4S"#q=St;RH
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3%!<E3%!<E3%~>
0 ]
>>
38803 -6132 38803 82768 [-4.75545e+06 -2.91444e+06 1.68345e+06 959067 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
grestore
1 lw
0 lc
381 236 mo
374 229 li
374 236 mo
381 229 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: GIUQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PEEXPS+Calibri gcheck setglobal} if
1 1220 5 <000200ac0000048f050e0012001f0077401d3f2101131810014d13100f01
4d13140d014d13120c014d13180b014d13bb02320000001affe8b310014d
1ab8fff0b30f014d1ab8fff0b30d014d1ab8fff6b30c014d1ab8ffe8b30b
014d1abb021100090018010cb20e511bb80126b10554003fed3fed012fe1
2b2b2b2b2bd4e12b2b2b2b2b31305d01140e022321222635113436332132
1e0207342e0223231133323e02048f56a5f0a6feee172929170125a8e89d
51b5346faa86afb17caa7239029aa8fba5521f270482271f57a3e89969b5
844afc113e80c100>PEEXPS+Calibri AddT42Char 
PEEXPS+Calibri /CharStrings get begin
/g5 5 def
end
PEEXPS+Calibri /Encoding get
dup 54 /g5 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PEEXPS+Calibri*1 [33{/.notdef}rp /g18 /g1 /g20 /g22 /g23 /g24 /g19 /g25 /g14 /g21 /g7 /g13 /g11 /g10 /g9 /g8 /g12 /g15 /g2 /g3 /g4 /g5 201{/.notdef}rp]PEEXPS+Calibri nfPEEXPS+Calibri*1 [12 0 0 -12 0 0 ]msf389.445 237.66 mo(+,-./01026")[10.2599 6.32748 5.45523 2.75406 6.30472 5.74805 6.30472 5.74805 3.67441 7.38245 0 ]xsh3.75 lw
1 lc
368.345 257.466 mo
387.545 257.466 li
.647517 .076173 .153628 0 cmyk
@
gsave
381 260.966 mo
374 254 li
381 260.966 li
378 254 mo
378 260.966 li
378 254 li
374 260.966 mo
381 254 li
374 260.966 li
clp
-3.05176e-05 .00012207 mo
507 .00012207 li
507 305 li
-3.05176e-05 305 li
cp
level3{
gsave
clp
[7.87401e-05 0 0 7.87401e-05 374.445 253.966 ]ct
/4 
<<
/ShadingType 2 
/BBox [-4.75545e+06 -3.22537e+06 1.68345e+06 648134 ] 
/ColorSpace /0 /CSA get_res
/Coords [38803 435 38803 88900 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~:]Ln(;#h%*;ZI7,;ud@-<<*I.<WEU0=9&j3=TAs4>6#06>Q><8>lYE9?2tN:?iUc=@/pl>@K7#@@fR)@
AH3>CB)iSFBE/YFB`JeHC&enIC]G.LD#b7MDZCIODu^UQE<$[QEW?gSF9!'VFT<0WFoW<YGQ8N[GlSW\
HN4l_HiOr_IK12bIfL>dJ,gGeJH-SgK)ceiKE)njK`N+mLB/:nL]SLqM?4atMZOjuMujt!N<:.#Ns$I'
O9HX)OTca*Op2p,PQr60Pm/90Q3SK3QNnT4Qj=c6RL():RgL5;SI6P?SI6S@T*leBTF<"ETa`.FU(/@I
~>
/BitsPerSample 8
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 0 1 ]
/Size [64 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[7.87401e-05 0 0 7.87401e-05 374.445 253.966 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~:Jaka:f1(f;H$Lm;cH^q<)lpu<E<.%='/R,=BSd1>$G38>?kE<>[:W@?!^iE?XR8L?t!JP@:E\T@UinY
A7T7_AnG[gB4kmkBP;*oBk_<sCMRa&Ci!s*DJjB2Df9T6E,]f:EH-#>F)uGFFEDYJF`hkNGB\:VG^+LZ
H$Xd`H[C*eI!pElIXZ`qIt)ruJ:N0$JV&K+K7ef0KS5#4Knb>;LPLY@Ll$tGMMd:LMi3LPN/W^TNK0$[
O,o?_OH>QcOcbcgP*2#mPa%DsQ'IW"QBmi&Q^=&*R$a;0R[T\6S"#q<S=H+>SXl@DT:_aJTV.sNTqS0R
~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!"!<E3%!<E3%!<E3%!<E3&!WiE*!s8W."9\i
1"9\i1"U,&5"pP89"pP89"pP89"pP89#6tJ=#RC\A#mgnE$47+I$47+I$47+I$O[=M$k*OQ%1NaU~>
<~$OdFP$k*OQ$k*OQ$k*OQ$k3XT%1WjX%LrsY%LrsY%M''\%hB0]%hB0]%hK9`&.fBa&.oKd&J5Te&J5Te
&J5Wg&eYfi&eYfi&eYfi&eYik',)#m',)#m',)&o'GM5q'GM5q'GM8s'bqGu'bqK"()@Z$()@Z$()@]&
(Ddl((Ddl((Ddl)(`4),(`4)-)&X;0)&X;0)&X;1)B'M4)B'M4)B'M5)]K_8)]K_8)]K_8)]K_9*#oq<
*#oq<*#oq<*#oq<*??.@*??.@*Zc@D*Zc@D*Zc@D+!2RH+!2RH+!2RH+<VdL+<VdL+X&!P+X&!P+X&!P
~>
0 ]
>>
38803 435 38803 88900 [-4.75545e+06 -3.22537e+06 1.68345e+06 648134 ]true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
grestore
1 lw
0 lc
381 260.966 mo
374 254 li
378 254 mo
378 260.966 li
374 260.966 mo
381 254 li
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: GIUQMX+Calibri AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal PEEXPS+Calibri gcheck setglobal} if
1 1438 6 <000100ac0000037c050e002c0076b11a27b8ffe8b310014d27b8fff0b30f
014d27b8fff0b30d014d27b8fff6b30c014d27b8ffe8b30b014d27b80211
400909132013200009001ab80108400d802601c02601d0260126260619b8
010cb20d5127b8010cb10654003fed3fed12392f5d7172ed012f2f123939
2f2f10e12b2b2b2b2b32313025140e0223212226351134363321321e0215
140e0223211121321e0215140e0223211121321e02037c040a0d08fd9317
2929170266080d080505080d08fe0601b2080d090404090d08fe4e020108
0d0a0447121b12081f270482271f08121b14121b1108fe6a09101c13121a
1007fe3108111b00>PEEXPS+Calibri AddT42Char 
PEEXPS+Calibri /CharStrings get begin
/g6 6 def
end
PEEXPS+Calibri /Encoding get
dup 55 /g6 put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/PEEXPS+Calibri*1 [33{/.notdef}rp /g18 /g1 /g20 /g22 /g23 /g24 /g19 /g25 /g14 /g21 /g7 /g13 /g11 /g10 /g9 /g8 /g12 /g15 /g2 /g3 /g4 /g5 /g6 200{/.notdef}rp]PEEXPS+Calibri nfPEEXPS+Calibri*1 [12 0 0 -12 0 0 ]msf389.445 262.143 mo(+,-./01027")[10.2599 6.32748 5.45523 2.75406 6.30472 5.74805 6.30472 5.74805 3.67441 5.85968 0 ]xshgrestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 ]]
] del_res
/PEEXPS+Calibri*1 uf/PEEXPS+Calibri uf/GIUQMX+Calibri uf/PEEXPT+Calibri-Bold*1 uf/PEEXPT+Calibri-Bold uf/DIERMX+Calibri-Bold ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
